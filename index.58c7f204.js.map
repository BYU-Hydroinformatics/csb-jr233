{"mappings":"YAmBA,SAAAA,EAAwBC,EAAGC,EAAGC,GAC5BC,OAAOC,eAAeJ,EAAGC,EAAAA,CAAII,IAAKH,EAAGI,YAAY,iCCP/CC,EAAAA,WAIA,SAAAC,EAAmBC,GAIfC,KAAKC,mBAMLD,KAAKD,KAAOA,EAMZC,KAAKE,OAAS,YAMlBJ,EAAUK,UAAUC,eAAiB,WACjCJ,KAAKC,oBAAqB,GAM9BH,EAAUK,UAAUE,gBAAkB,WAClCL,KAAKC,oBAAqB,GAEvBH,EApCPD,KCDgB,2BCLhBS,EAAAA,WACA,SAAAC,IAMIP,KAAKQ,UAAW,SAKpBD,EAAWJ,UAAUM,QAAU,WACtBT,KAAKQ,WACNR,KAAKQ,UAAW,EAChBR,KAAKU,oBAObH,EAAWJ,UAAUO,gBAAkB,aAChCH,EAvBPD,GCoCG,SAAAK,EAAmCC,EAAGC,UAClCD,EAAIC,EAAI,EAAID,EAAIC,GAAK,EAAI,EAmB7B,SAAAC,EAA2BC,EAAKb,EAAQc,OACvCzB,EAAIwB,EAAIE,UACRF,EAAI,IAAMb,SACH,KAEFA,GAAUa,EAAIxB,EAAI,UAChBA,EAAI,MAGP2B,OAAAA,KACAF,EAAY,OACPE,EAAI,EAAGA,EAAI3B,IAAK2B,KACbH,EAAIG,GAAKhB,SACFgB,EAAI,UAIdF,EAAY,OACZE,EAAI,EAAGA,EAAI3B,IAAK2B,KACbH,EAAIG,IAAMhB,SACHgB,WAKVA,EAAI,EAAGA,EAAI3B,IAAK2B,EAAAA,IACbH,EAAIG,IAAMhB,SACHgB,KAEFH,EAAIG,GAAKhB,SACVa,EAAIG,EAAI,GAAKhB,EAASA,EAASa,EAAIG,GAC5BA,EAAI,EAGJA,SAKhB3B,EAAI,EAsBZ,SAAA4B,EAAgBJ,EAAKK,WACpBC,EAAYC,MAAMC,QAAQH,GAAQA,EAAAA,CAAQA,GAC1CH,EAASI,EAAUJ,OACdC,EAAI,EAAGA,EAAID,EAAQC,IACxBH,EAAIA,EAAIE,QAAUI,EAAUH,GAuC7B,SAAAM,EAAgBC,EAAMC,OACrBC,EAAOF,EAAKR,UACZU,IAASD,EAAKT,cACP,UAEFC,EAAI,EAAGA,EAAIS,EAAMT,OAClBO,EAAKP,KAAOQ,EAAKR,UACV,SAGR,ECzKJ,SAAAU,WACI,EAMJ,SAAAC,WACI,EAOJ,SAAAC,SCXIC,EAAkC,mBAAlBtC,OAAOuC,OAC5BvC,OAAOuC,OACP,SAAU9B,EAAQ+B,MACZ/B,MAAAA,YACUgC,UAAU,sDAEpBC,EAAS1C,OAAOS,GACXgB,EAAI,EAAGkB,EAAKC,UAAUpB,OAAQC,EAAIkB,IAAMlB,EAAAA,KACzCoB,EAASD,UAAUnB,MACnBoB,MAAAA,UACSC,KAAOD,EACRA,EAAOE,eAAeD,KACtBJ,EAAOI,GAAOD,EAAOC,WAK9BJ,GAMR,SAAAM,EAAeC,WACTC,KAAYD,SACVA,EAAOC,OAWXC,EAAqC,mBAAlBnD,OAAOoD,OAC/BpD,OAAOoD,OACP,SAAUH,OACJG,EAAAA,WACKF,KAAYD,EACjBG,EAAOC,KAAKJ,EAAOC,WAEhBE,OCtDPE,EADJC,GACID,EAAgB,SAAUE,EAAGpC,UAC7BkC,EAAgBtD,OAAOyD,gBAAAA,CAChBC,UAAAA,cAA2B7B,OAAAA,SAAmB2B,EAAGpC,GAAKoC,EAAEE,UAAYtC,aAC7DoC,EAAGpC,WAAcuC,KAAKvC,EAAOpB,OAAOU,UAAUqC,eAAea,KAAKxC,EAAGuC,KAAIH,EAAEG,GAAKvC,EAAEuC,MAC3EH,EAAGpC,IAErB,SAAUoC,EAAGpC,GAEhB,SAAAyC,IAAgBtD,KAAKuD,YAAcN,EADnCF,EAAcE,EAAGpC,GAEjBoC,EAAE9C,UAAkB,OAANU,EAAapB,OAAO+D,OAAO3C,IAAMyC,EAAGnD,UAAYU,EAAEV,UAAAA,IAAemD,KA4BnFG,EAAAA,SAAkCC,GAKlC,SAAAC,EAAgBC,OACRC,EAAQH,EAAOL,KAAKrD,OAASA,YAKjC6D,EAAMC,aAAeF,EAKrBC,EAAME,iBAAmB,KAKzBF,EAAMG,aAAe,KAKrBH,EAAMI,WAAa,KACZJ,SA1BXb,EAAUW,EAAQD,GAgClBC,EAAOxD,UAAU+D,iBAAmB,SAAUnE,EAAMoE,MAC3CpE,GAASoE,OAGVC,EAAYpE,KAAKiE,aAAejE,KAAKiE,WAAAA,IACrCI,EAAmBD,EAAUrE,KAAUqE,EAAUrE,GAAAA,KACT,IAAxCsE,EAAiBC,QAAQH,IACzBE,EAAiBvB,KAAKqB,KAa9BR,EAAOxD,UAAUoE,cAAgB,SAAUC,OAEnCC,EAAuB,iBAAVD,EAAU,IAAA3E,EAAqB2E,GAASA,EACrDzE,EAAO0E,EAAI1E,KACV0E,EAAIvE,SACLuE,EAAIvE,OAASF,KAAK8D,cAAgB9D,UAGlC0E,EADAN,EAAYpE,KAAKiE,YAAcjE,KAAKiE,WAAWlE,MAE/CqE,EAAAA,KACIO,EAAc3E,KAAKgE,eAAiBhE,KAAKgE,aAAAA,IACzCY,EAAkB5E,KAAK+D,mBAAqB/D,KAAK+D,iBAAAA,IAC/ChE,KAAQ4E,IACVA,EAAY5E,GAAQ,EACpB6E,EAAgB7E,GAAQ,KAE1B4E,EAAY5E,WACLmB,EAAI,EAAGkB,EAAKgC,EAAUnD,OAAQC,EAAIkB,IAAMlB,MAO3B,KALdwD,EADA,gBAAiBN,EAAUlD,GACuCkD,EAAUlD,GAAI2D,YAAYJ,GAGxBL,EAAUlD,GAAImC,KAAKrD,KAAMyE,KAEtEA,EAAIxE,mBAAAA,CAC3ByE,GAAY,aAIlBC,EAAY5E,GACY,IAAtB4E,EAAY5E,GAAU,KAClB+E,EAAKF,EAAgB7E,cAClB6E,EAAgB7E,GAChB+E,KACH9E,KAAK+E,oBAAoBhF,EAAAA,UAEtB4E,EAAY5E,UAEhB2E,IAMff,EAAOxD,UAAUO,gBAAkB,WAC/BV,KAAKiE,YAAAA,EAAoBjE,KAAKiE,aASlCN,EAAOxD,UAAU6E,aAAe,SAAUjF,UAC9BC,KAAKiE,YAAcjE,KAAKiE,WAAWlE,SAAUkF,GAOzDtB,EAAOxD,UAAU+E,YAAc,SAAUC,WAChCnF,KAAKiE,aAGHkB,EACDA,KAAYnF,KAAKiE,WACjBxE,OAAO2F,KAAKpF,KAAKiE,YAAYhD,OAAS,IAMhD0C,EAAOxD,UAAU4E,oBAAsB,SAAUhF,EAAMoE,OAC/CC,EAAYpE,KAAKiE,YAAcjE,KAAKiE,WAAWlE,MAC/CqE,EAAAA,KACIiB,EAAQjB,EAAUE,QAAQH,IACf,IAAXkB,IACIrF,KAAK+D,kBAAoBhE,KAAQC,KAAK+D,kBAEtCK,EAAUiB,GAAAA,IACRrF,KAAK+D,iBAAiBhE,KAGxBqE,EAAUkB,OAAOD,EAAO,GACC,IAArBjB,EAAUnD,eACHjB,KAAKiE,WAAWlE,OAMpC4D,EAlJPF,gDCzBQ,WAMD,UAGM,gBACN,UACG,aAKD,YACC,aACJ,SACE,WACG,cACJ,QCOJ,SAAA8B,EAAgBrF,EAAQH,EAAMoE,EAAUqB,EAAUC,MACjDD,GAAYA,IAAatF,IACzBiE,EAAWA,EAASuB,KAAKF,IAEzBC,EAAAA,KACIE,EAAqBxB,EACzBA,EAAW,WACPjE,EAAO6E,oBAAoBhF,EAAMoE,GACjCwB,EAAmBC,MAAM5F,KAAMqC,gBAGnCwD,EAAAA,CACA3F,OAAQA,EACRH,KAAMA,EACNoE,SAAUA,UAEdjE,EAAOgE,iBAAiBnE,EAAMoE,GACvB0B,EAsBJ,SAAAC,EAAoB5F,EAAQH,EAAMoE,EAAUqB,UACxCD,EAAOrF,EAAQH,EAAMoE,EAAUqB,GAAU,GAW7C,SAAAO,EAAuBxD,GACtBA,GAAOA,EAAIrC,SACXqC,EAAIrC,OAAO6E,oBAAoBxC,EAAIxC,KAAMwC,EAAI4B,YACvC5B,QC/FVyD,EAA0BC,eACtBlD,EAAgB,SAAUE,EAAGpC,UAC7BkC,EAAgBtD,OAAOyD,gBAAAA,CAChBC,UAAAA,cAA2B7B,OAAAA,SAAmB2B,EAAGpC,GAAKoC,EAAEE,UAAYtC,aAC7DoC,EAAGpC,WAAcuC,KAAKvC,EAAOpB,OAAOU,UAAUqC,eAAea,KAAKxC,EAAGuC,KAAIH,EAAEG,GAAKvC,EAAEuC,MAC3EH,EAAGpC,WAErB,SAAUoC,EAAGpC,GAEhB,SAAAyC,IAAgBtD,KAAKuD,YAAcN,EADnCF,EAAcE,EAAGpC,GAEjBoC,EAAE9C,UAAkB,OAANU,EAAapB,OAAO+D,OAAO3C,IAAMyC,EAAGnD,UAAYU,EAAEV,UAAAA,IAAemD,IAVzD2C,GA8B1BC,EAAAA,SAAsCxC,GAEtC,SAAAyC,QACQtC,EAAQH,EAAOL,KAAKrD,OAASA,YAKjC6D,EAAMuC,UAAY,EACXvC,SARXmC,EAAUG,EAAYzC,GActByC,EAAWhG,UAAUkG,QAAU,aACzBrG,KAAKoG,UACPpG,KAAKuE,cAAAA,IAQT4B,EAAWhG,UAAUmG,YAAc,kBACxBtG,KAAKoG,WAWhBD,EAAWhG,UAAUoG,GAAK,SAAUxG,EAAMoE,MAClC7C,MAAMC,QAAQxB,GAAAA,SACVyG,EAAMzG,EAAKkB,OACXmE,EAAAA,IAAW9D,MAAMkF,GACZtF,EAAI,EAAGA,EAAIsF,IAAOtF,EACvBkE,EAAKlE,GAAAA,EAAYlB,KAAMD,EAAKmB,GAAIiD,UAE7BiB,WAGOpF,KAA6BD,EAAOoE,IAY1DgC,EAAWhG,UAAUsG,KAAO,SAAU1G,EAAMoE,OACpC5B,KACAjB,MAAMC,QAAQxB,GAAAA,KACVyG,EAAMzG,EAAKkB,OACfsB,EAAAA,IAAUjB,MAAMkF,WACPtF,EAAI,EAAGA,EAAIsF,IAAOtF,EACvBqB,EAAIrB,GAAAA,EAAgBlB,KAAMD,EAAKmB,GAAIiD,QAIvC5B,EAAAA,EAAiBvC,KAA6BD,EAAOoE,UAElCA,EAAUuC,OAASnE,EACnCA,GAQX4D,EAAWhG,UAAUwG,GAAK,SAAU5G,EAAMoE,OAClC5B,EAA6B4B,EAAUuC,UACvCnE,GAoBL,SAAiBA,MAChBjB,MAAMC,QAAQgB,WACLrB,EAAI,EAAGkB,EAAKG,EAAItB,OAAQC,EAAIkB,IAAMlB,IACzBqB,EAAIrB,WAIwCqB,GA1B1DqE,CAAQrE,WAEHjB,MAAMC,QAAQxB,WACVmB,EAAI,EAAGkB,EAAKrC,EAAKkB,OAAQC,EAAIkB,IAAMlB,EACxClB,KAAK+E,oBAAoBhF,EAAKmB,GAAIiD,QAItCnE,KAAK+E,oBAAoBhF,EAAMoE,IAGhCgC,EA9FPD,YCxBG,SAAAW,gCAEWC,MAAM,+EAQpBC,EAAc,EAUX,SAAAC,EAAgBC,UACZA,EAAIC,SAAWD,EAAIC,OAASC,SAASJ,QAMrCK,EAAU,QCjCjBC,EAA0BpB,eACtBlD,EAAgB,SAAUE,EAAGpC,UAC7BkC,EAAgBtD,OAAOyD,gBAAAA,CAChBC,UAAAA,cAA2B7B,OAAAA,SAAmB2B,EAAGpC,GAAKoC,EAAEE,UAAYtC,aAC7DoC,EAAGpC,WAAcuC,KAAKvC,EAAOpB,OAAOU,UAAUqC,eAAea,KAAKxC,EAAGuC,KAAIH,EAAEG,GAAKvC,EAAEuC,MAC3EH,EAAGpC,WAErB,SAAUoC,EAAGpC,GAEhB,SAAAyC,IAAgBtD,KAAKuD,YAAcN,EADnCF,EAAcE,EAAGpC,GAEjBoC,EAAE9C,UAAkB,OAANU,EAAapB,OAAO+D,OAAO3C,IAAMyC,EAAGnD,UAAYU,EAAEV,UAAAA,IAAemD,IAVzD2C,GAyB1BqB,EAAAA,SAAuC5D,GAOvC,SAAA6D,EAAqBxH,EAAMwC,EAAKiF,OACxB3D,EAAQH,EAAOL,KAAKrD,KAAMD,IAASC,YAMvC6D,EAAMtB,IAAMA,EAOZsB,EAAM2D,SAAWA,EACV3D,SArBXwD,EAAUE,EAAa7D,GAuBhB6D,EAxBPD,IAsEAG,EAAAA,SAAsC/D,GAKtC,SAAAgE,EAAoBC,OACZ9D,EAAQH,EAAOL,KAAKrD,OAASA,cAK1B6D,GAKPA,EAAM+D,QAAU,UACG3C,IAAf0C,GACA9D,EAAMgE,cAAcF,GAEjB9D,SAnBXwD,EAAUK,EAAYhE,GA2BtBgE,EAAWvH,UAAUR,IAAM,SAAU4C,OAC7BuF,SACA9H,KAAK4H,SAAW5H,KAAK4H,QAAQpF,eAAeD,KAC5CuF,EAAQ9H,KAAK4H,QAAQrF,IAElBuF,GAOXJ,EAAWvH,UAAU4H,QAAU,kBACnB/H,KAAK4H,SAAWnI,OAAO2F,KAAKpF,KAAK4H,UAAAA,IAO7CF,EAAWvH,UAAU6H,cAAgB,kBACzBhI,KAAK4H,SAAAA,EAAAA,GAAsB5H,KAAK4H,UAAAA,IAK5CF,EAAWvH,UAAU8H,cAAgB,mBACxBjI,KAAK4H,SAMlBF,EAAWvH,UAAU+H,OAAS,SAAU3F,EAAKiF,OACrCW,EACJA,EAAYC,EAAmB7F,GAC/BvC,KAAKuE,cAAAA,IAAkB+C,EAAYa,EAAW5F,EAAKiF,IACnDW,EAAAA,EACAnI,KAAKuE,cAAAA,IAAkB+C,EAAYa,EAAW5F,EAAKiF,KASvDE,EAAWvH,UAAUkI,IAAM,SAAU9F,EAAKuF,EAAOQ,OACzCzF,EAAS7C,KAAK4H,UAAY5H,KAAK4H,QAAAA,OAC/BU,EACAzF,EAAON,GAAOuF,WAGVN,EAAW3E,EAAON,GACtBM,EAAON,GAAOuF,EACVN,IAAaM,GACb9H,KAAKkI,OAAO3F,EAAKiF,KAW7BE,EAAWvH,UAAU0H,cAAgB,SAAUhF,EAAQyF,WAC1C/F,KAAOM,EACZ7C,KAAKqI,IAAI9F,EAAKM,EAAON,GAAM+F,IAQnCZ,EAAWvH,UAAUoI,gBAAkB,SAAUjG,GACxCA,EAAOsF,WAGL5H,KAAK4H,UAAY5H,KAAK4H,QAAAA,IAAetF,EAAOsF,UAQvDF,EAAWvH,UAAUqI,MAAQ,SAAUjG,EAAK+F,MACpCtI,KAAK4H,SAAWrF,KAAOvC,KAAK4H,QAAAA,KACxBJ,EAAWxH,KAAK4H,QAAQrF,UACrBvC,KAAK4H,QAAQrF,GNzJzB,SAAiBG,OAChBC,MACCA,KAAYD,SACN,SAEHC,GMqJY3C,KAAK4H,WACb5H,KAAK4H,QAAU,MAEdU,GACDtI,KAAKkI,OAAO3F,EAAKiF,KAItBE,EAjIPD,YAsIAgB,EAAAA,GAKG,SAAAL,EAA4B7F,UACxBkG,EAAqBjG,eAAeD,GACrCkG,EAAqBlG,GACpBkG,EAAqBlG,GAAO,UAAYA,+FCtOtC,YACA,YACD,WACC,WACO,mBACA,mBACN,aACA,aACF,eCfRmG,GAA0BzC,eACtBlD,EAAgB,SAAUE,EAAGpC,UAC7BkC,EAAgBtD,OAAOyD,gBAAAA,CAChBC,UAAAA,cAA2B7B,OAAAA,SAAmB2B,EAAGpC,GAAKoC,EAAEE,UAAYtC,aAC7DoC,EAAGpC,WAAcuC,KAAKvC,EAAOpB,OAAOU,UAAUqC,eAAea,KAAKxC,EAAGuC,KAAIH,EAAEG,GAAKvC,EAAEuC,MAC3EH,EAAGpC,WAErB,SAAUoC,EAAGpC,GAEhB,SAAAyC,IAAgBtD,KAAKuD,YAAcN,EADnCF,EAAcE,EAAGpC,GAEjBoC,EAAE9C,UAAkB,OAANU,EAAapB,OAAO+D,OAAO3C,IAAMyC,EAAGnD,UAAYU,EAAEV,UAAAA,IAAemD,IAVzD2C,GAsB1B0C,GAAAA,SAA0CjF,GAK1C,SAAAkF,EAAwBC,OAChBhF,EAAQ7D,KAER8I,EAAU,oDAD8B,IAAA1B,EAAc2B,MAAM,KAAK,IAGjE,gBACAF,EACA,uBACJhF,EAAQH,EAAOL,KAAKrD,KAAM8I,IAAY9I,MAShC6I,KAAOA,EAIbhF,EAAMmF,KAAO,iBAEbnF,EAAMiF,QAAUA,EACTjF,SA5BX6E,GAAUE,EAAgBlF,GA8BnBkF,EA/BPD,CAgCF7B,OC9CK,SAAAmC,GAAgBC,EAAWC,OACzBD,uBACwBC,GCC1B,SAAAC,GAAetB,EAAOuB,EAAKC,UACvBC,KAAKF,IAAIE,KAAKD,IAAIxB,EAAOuB,GAAMC,+CAW/BE,GAIH,SAAUD,KAEHA,KAAKE,KAIL,SAAUC,OACTC,EAAyBJ,KAAMK,IAAIF,UAC/BC,EAAI,EAAIA,GAAK,GActBE,GAIH,SAAUN,KAEHA,KAAKO,KAIL,SAAUJ,UACNH,KAAKQ,IAAIL,GAAKH,KAAKS,OAgB/B,SAAAC,GAAgCP,EAAGC,EAAGO,EAAIC,EAAIC,EAAIC,OACjDC,EAAKF,EAAKF,EACVK,EAAKF,EAAKF,KACH,IAAPG,GAAmB,IAAPC,EAAO,KACfC,IAAMd,EAAIQ,GAAMI,GAAMX,EAAIQ,GAAMI,IAAOD,EAAKA,EAAKC,EAAKA,GACtDC,EAAI,GACJN,EAAKE,EACLD,EAAKE,GAEAG,EAAI,IACTN,GAAMI,EAAKE,EACXL,GAAMI,EAAKC,UAGZC,GAAgBf,EAAGC,EAAGO,EAAIC,GAU9B,SAAAM,GAAyBP,EAAIC,EAAIC,EAAIC,OACpCC,EAAKF,EAAKF,EACVK,EAAKF,EAAKF,SACPG,EAAKA,EAAKC,EAAKA,EAmEnB,SAAAG,GAAmBC,UACdA,EAAiBpB,KAAKqB,GAAM,IASjC,SAAAC,GAAgBjK,EAAGC,OAClBiK,EAAIlK,EAAIC,SACLiK,EAAIjK,EAAI,EAAIiK,EAAIjK,EAAIiK,EAUxB,SAAAC,GAAcnK,EAAGC,EAAG6I,UAChB9I,EAAI8I,GAAK7I,EAAID,OCjMpBoK,GAA0B/E,eACtBlD,EAAgB,SAAUE,EAAGpC,UAC7BkC,EAAgBtD,OAAOyD,gBAAAA,CAChBC,UAAAA,cAA2B7B,OAAAA,SAAmB2B,EAAGpC,GAAKoC,EAAEE,UAAYtC,aAC7DoC,EAAGpC,WAAcuC,KAAKvC,EAAOpB,OAAOU,UAAUqC,eAAea,KAAKxC,EAAGuC,KAAIH,EAAEG,GAAKvC,EAAEuC,MAC3EH,EAAGpC,WAErB,SAAUoC,EAAGpC,GAEhB,SAAAyC,IAAgBtD,KAAKuD,YAAcN,EADnCF,EAAcE,EAAGpC,GAEjBoC,EAAE9C,UAAkB,OAANU,EAAapB,OAAO+D,OAAO3C,IAAMyC,EAAGnD,UAAYU,EAAEV,UAAAA,IAAemD,IAVzD2C,GAoD1BgF,GAAAA,SAAqCvH,GAKrC,SAAAwH,EAAmBC,OACXtH,EAAQH,EAAOL,KAAKrD,OAASA,KAI7BoL,EAAAA,EAAAA,GAAwBD,UAC5BC,EAAAA,QACwBnG,IAApBkG,EAAQE,QAAwBF,EAAQE,QAAU,KACF,iBAAtCD,EAAAA,GAAgD,IAC9DA,EAAAA,QACwBnG,IAApBkG,EAAQG,SAAwBH,EAAQG,QAC5CF,EAAAA,GAAoCD,EAAQI,OAC5CH,EAAAA,QAC8BnG,IAA1BkG,EAAQK,cAA8BL,EAAQK,cAAgBC,EAAAA,EAClEL,EAAAA,SAC8BnG,IAA1BkG,EAAQO,cAA8BP,EAAQO,cAAgB,EAClEN,EAAAA,SACwBnG,IAApBkG,EAAQQ,QAAwBR,EAAQQ,SAAWF,EAAAA,EACvDL,EAAAA,SACwBnG,IAApBkG,EAAQS,QAAwBT,EAAQS,QAAUH,EAAAA,EAKtD5H,EAAMgI,gBACuB5G,IAAzBmG,EAAWU,UAA0BX,EAAQW,UAAY,kBACtDV,EAAWU,UAClBjI,EAAMgE,cAAcuD,GAKpBvH,EAAMkI,OAAS,KACRlI,SArCXmH,GAAUE,EAAWxH,GA0CrBwH,EAAU/K,UAAU6L,aAAe,kBACxBhM,KAAK6L,YAShBX,EAAU/K,UAAU8L,cAAgB,SAAUC,OAEtCC,EAAQnM,KAAK+L,QAAAA,CAETK,MAAOpM,KACPqM,aAAyBpH,IAAhBiH,GAAmCA,GAEhDX,EAASvL,KAAKsM,mBAClBH,EAAMd,QAAAA,GAAgB9B,KAAKgD,MAA0B,IAApBvM,KAAKwM,cAAsB,IAAK,EAAG,GACpEL,EAAMM,YAAczM,KAAK0M,iBACzBP,EAAMb,QAAUtL,KAAK2M,aACrBR,EAAMS,OAAS5M,KAAK6M,YACpBV,EAAMZ,YACStG,IAAXsG,EAAuBA,GAA2B,IAAlBY,EAAME,QAAoBZ,EAAAA,EAAW,EACzEU,EAAMX,cAAgBxL,KAAK8M,mBAC3BX,EAAMT,cAAgBnC,KAAKD,IAAItJ,KAAK+M,mBAAoB,GACxDZ,EAAMR,QAAU3L,KAAKgN,aACrBb,EAAMP,QAAU5L,KAAKiN,aACrBjN,KAAK+L,OAASI,EACPA,GAQXjB,EAAU/K,UAAU+M,eAAiB,SAAUC,eAS/CjC,EAAU/K,UAAUiN,oBAAsB,SAAUC,eAUpDnC,EAAU/K,UAAU0M,UAAY,kBACmC7M,KAAKL,IAAAA,IAQxEuL,EAAU/K,UAAU2M,iBAAmB,kBACL9M,KAAKL,IAAAA,IAQvCuL,EAAU/K,UAAU4M,iBAAmB,kBACL/M,KAAKL,IAAAA,KAQvCuL,EAAU/K,UAAU6M,WAAa,kBACChN,KAAKL,IAAAA,KAQvCuL,EAAU/K,UAAU8M,WAAa,kBACCjN,KAAKL,IAAAA,KAQvCuL,EAAU/K,UAAUqM,WAAa,kBACCxM,KAAKL,IAAAA,IAMvCuL,EAAU/K,UAAUuM,eAAiB,uBASrCxB,EAAU/K,UAAUwM,WAAa,kBACE3M,KAAKL,IAAAA,IASxCuL,EAAU/K,UAAUmM,UAAY,kBACEtM,KAAKL,IAAAA,IASvCuL,EAAU/K,UAAUmN,UAAY,SAAUV,GACtC5M,KAAKqI,IAAAA,EAA0BuE,IAQnC1B,EAAU/K,UAAUoN,iBAAmB,SAAU/B,GAC7CxL,KAAKqI,IAAAA,EAAkCmD,IAQ3CN,EAAU/K,UAAUqN,iBAAmB,SAAU9B,GAC7C1L,KAAKqI,IAAAA,GAAkCqD,IAU3CR,EAAU/K,UAAUsN,WAAa,SAAU7B,GACvC5L,KAAKqI,IAAAA,GAA4BuD,IAUrCV,EAAU/K,UAAUuN,WAAa,SAAU/B,GACvC3L,KAAKqI,IAAAA,GAA4BsD,IAQrCT,EAAU/K,UAAUwN,WAAa,SAAUtC,MACb,iBAAZA,EAAsB,IACpCrL,KAAKqI,IAAAA,EAA2BgD,IAQpCH,EAAU/K,UAAUyN,WAAa,SAAUtC,GACvCtL,KAAKqI,IAAAA,EAA2BiD,IASpCJ,EAAU/K,UAAU0N,UAAY,SAAUC,GACtC9N,KAAKqI,IAAAA,EAA2ByF,IAKpC5C,EAAU/K,UAAUO,gBAAkB,WAC9BV,KAAK+L,SACL/L,KAAK+L,OAAOK,MAAQ,KACpBpM,KAAK+L,OAAS,MAElBrI,EAAOvD,UAAUO,gBAAgB2C,KAAKrD,OAEnCkL,EAtQPD,0DCxCW,eAMC,gBAOA,gBAOC,iBAQG,oBChCL,eAEJ,QCVP8C,GAA0B9H,eACtBlD,EAAgB,SAAUE,EAAGpC,UAC7BkC,EAAgBtD,OAAOyD,gBAAAA,CAChBC,UAAAA,cAA2B7B,OAAAA,SAAmB2B,EAAGpC,GAAKoC,EAAEE,UAAYtC,aAC7DoC,EAAGpC,WAAcuC,KAAKvC,EAAOpB,OAAOU,UAAUqC,eAAea,KAAKxC,EAAGuC,KAAIH,EAAEG,GAAKvC,EAAEuC,MAC3EH,EAAGpC,WAErB,SAAUoC,EAAGpC,GAEhB,SAAAyC,IAAgBtD,KAAKuD,YAAcN,EADnCF,EAAcE,EAAGpC,GAEjBoC,EAAE9C,UAAkB,OAANU,EAAapB,OAAO+D,OAAO3C,IAAMyC,EAAGnD,UAAYU,EAAEV,UAAAA,IAAemD,IAVzD2C,GAgG1B+H,GAAAA,SAAiCtK,GAKjC,SAAAuK,EAAe9C,OACPtH,EAAQ7D,KACRkO,EAAAA,EAAAA,GAAyB/C,UACtB+C,EAAY5L,QACnBuB,EAAQH,EAAOL,KAAKrD,KAAMkO,IAAgBlO,MAKpCmO,kBAAoB,KAK1BtK,EAAMuK,cAAgB,KAKtBvK,EAAMwK,iBAAmB,KAKzBxK,EAAMyK,UAAY,KAEdnD,EAAQoD,SACR1K,EAAM0K,OAASpD,EAAQoD,QAEvBpD,EAAQqD,KACR3K,EAAM4K,OAAOtD,EAAQqD,KAEzB3K,EAAMK,iBAAAA,EAAAA,mBAAAA,IAA2DL,EAAM6K,iCACnEpM,EAAS6I,EAAQ7I,OACY6I,EAAQ7I,OACnC,YACNuB,EAAM8K,UAAUrM,GACTuB,SAzCXkK,GAAUE,EAAOvK,GA+CjBuK,EAAM9N,UAAU+M,eAAiB,SAAUC,OACnCyB,EAAQzB,GAAYA,UACxByB,EAAM9L,KAAK9C,MACJ4O,GAMXX,EAAM9N,UAAUiN,oBAAsB,SAAUC,OACxCwB,EAASxB,GAAaA,UAC1BwB,EAAO/L,KAAK9C,KAAKiM,iBACV4C,GAQXZ,EAAM9N,UAAU2O,UAAY,kBACU9O,KAAKL,IAAAA,KAA8B,MAKzEsO,EAAM9N,UAAUuM,eAAiB,eACzBpK,EAAStC,KAAK8O,mBACVxM,EAAiCA,EAAOyM,WAAxCzM,IAKZ2L,EAAM9N,UAAU6O,oBAAsB,WAClChP,KAAKqG,WAKT4H,EAAM9N,UAAUuO,4BAA8B,WACtC1O,KAAKqO,qBACSrO,KAAKqO,kBACnBrO,KAAKqO,iBAAmB,UAExB/L,EAAStC,KAAK8O,YACdxM,IACAtC,KAAKqO,iBAAAA,EAA0B/L,EAAAA,EAA0BtC,KAAKgP,oBAAqBhP,OAEvFA,KAAKqG,WAOT4H,EAAM9N,UAAU8O,YAAc,SAAUC,UAC7BlP,KAAKsO,UAAUW,YAAYC,IAUtCjB,EAAM9N,UAAUoO,OAAS,SAAUY,EAAYjP,OACvCkP,EAAgBpP,KAAKqP,iBACrBD,EAAcE,aAAaH,UACpBC,EAAcG,YAAYJ,EAAYjP,IAerD+N,EAAM9N,UAAUsO,OAAS,SAAUD,GAC3BxO,KAAKmO,sBACSnO,KAAKmO,mBACnBnO,KAAKmO,kBAAoB,MAExBK,GACDxO,KAAKqG,UAELrG,KAAKoO,kBACSpO,KAAKoO,eACnBpO,KAAKoO,cAAgB,MAErBI,IACAxO,KAAKmO,kBAAAA,EAA2BK,EAAAA,IAAiC,SAAU/J,OAEnE+K,EADmE/K,EACpC0K,WAAWK,iBAC1CC,EAAazP,KAAKiM,eAAc,OAE5BuD,EAAiBE,MAAK,SAAUC,UAC7BA,EAAgBvD,QAAUqD,EAAWrD,SAC5C,IACJoD,EAAiB1M,KAAK2M,KACvBzP,MACHA,KAAKoO,cAAAA,EAAuBpO,KAAA4P,EAAwBpB,EAAID,OAAQC,GAChExO,KAAKqG,YASb4H,EAAM9N,UAAUwO,UAAY,SAAUrM,GAClCtC,KAAKqI,IAAAA,GAA0B/F,IAMnC2L,EAAM9N,UAAUkP,YAAc,kBACrBrP,KAAKsO,YACNtO,KAAKsO,UAAYtO,KAAK6P,kBAEnB7P,KAAKsO,WAKhBL,EAAM9N,UAAU2P,YAAc,mBACjB9P,KAAKsO,WAOlBL,EAAM9N,UAAU0P,eAAiB,kBACtB,MAKX5B,EAAM9N,UAAUO,gBAAkB,WAC9BV,KAAK2O,UAAU,MACfjL,EAAOvD,UAAUO,gBAAgB2C,KAAKrD,OAEnCiO,EAvMPD,YAgNG,SAAA+B,GAAgBN,EAAYO,OAC1BP,EAAWnE,eACL,MAEP2E,EAAaD,EAAUC,cACvBA,EAAaR,EAAW/D,eACxBuE,GAAcR,EAAWjE,qBAClB,MAEP0E,EAAOF,EAAUE,YACdA,EAAOT,EAAW9D,SAAWuE,GAAQT,EAAW7D,yFC1TvDuE,GAA0BlK,eACtBlD,EAAgB,SAAUE,EAAGpC,UAC7BkC,EAAgBtD,OAAOyD,gBAAAA,CAChBC,UAAAA,cAA2B7B,OAAAA,SAAmB2B,EAAGpC,GAAKoC,EAAEE,UAAYtC,aAC7DoC,EAAGpC,WAAcuC,KAAKvC,EAAOpB,OAAOU,UAAUqC,eAAea,KAAKxC,EAAGuC,KAAIH,EAAEG,GAAKvC,EAAEuC,MAC3EH,EAAGpC,WAErB,SAAUoC,EAAGpC,GAEhB,SAAAyC,IAAgBtD,KAAKuD,YAAcN,EADnCF,EAAcE,EAAGpC,GAEjBoC,EAAE9C,UAAkB,OAANU,EAAapB,OAAO+D,OAAO3C,IAAMyC,EAAGnD,UAAYU,EAAEV,UAAAA,IAAemD,IAVzD2C,GAqD1BmK,GAAAA,SAA0C1M,GAK1C,SAAA2M,EAAwBC,OAEhBnF,EAAUmF,GAAcA,UACpB5M,EAAOL,KAAKrD,KAAMmL,IAAYnL,YAP1CmQ,GAAUE,EAAgB3M,GAUnB2M,EAXPD,4EC9CM,KACG,KACD,KACD,KACA,ECXPG,GAA0BtK,eACtBlD,EAAgB,SAAUE,EAAGpC,UAC7BkC,EAAgBtD,OAAOyD,gBAAAA,CAChBC,UAAAA,cAA2B7B,OAAAA,SAAmB2B,EAAGpC,GAAKoC,EAAEE,UAAYtC,aAC7DoC,EAAGpC,WAAcuC,KAAKvC,EAAOpB,OAAOU,UAAUqC,eAAea,KAAKxC,EAAGuC,KAAIH,EAAEG,GAAKvC,EAAEuC,MAC3EH,EAAGpC,WAErB,SAAUoC,EAAGpC,GAEhB,SAAAyC,IAAgBtD,KAAKuD,YAAcN,EADnCF,EAAcE,EAAGpC,GAEjBoC,EAAE9C,UAAkB,OAANU,EAAapB,OAAO+D,OAAO3C,IAAMyC,EAAGnD,UAAYU,EAAEV,UAAAA,IAAemD,IAVzD2C,GAwB1BuK,GAAAA,SAAyC9M,GAKzC,SAAA+M,EAAuBrE,OACfvI,EAAQH,EAAOL,KAAKrD,OAASA,YAEjC6D,EAAM6M,wBAA0B7M,EAAM8M,mBAAmBjL,KAAK7B,GAK9DA,EAAM+M,OAASxE,EAIfvI,EAAMgN,uBAAyB,KACxBhN,SAjBX0M,GAAUE,EAAe/M,GAyBzB+M,EAActQ,UAAU8O,YAAc,SAAUC,eAShDuB,EAActQ,UAAUmP,aAAe,SAAUH,eAUjDsB,EAActQ,UAAUoP,YAAc,SAAUJ,EAAYjP,eAS5DuQ,EAActQ,UAAU2Q,mBAAqB,SAAUC,EAAOb,EAAMc,GAC3DD,EAAMb,KACPa,EAAMb,GAAAA,IAEVa,EAAMb,GAAMc,EAAKC,UAAUC,YAAcF,GAY7CP,EAActQ,UAAUgR,uBAAyB,SAAU7O,EAAQ8O,EAAYL,mBAQjEb,EAAMmB,OACRC,EAAWtR,KAAK8Q,mBAAmBpL,KAAK1F,KAAM+Q,EAAOb,UAClD5N,EAAOiP,kBAAkBH,EAAYlB,EAAMmB,EAAWC,IAC/D5L,KAAK1F,OAYXyQ,EAActQ,UAAUqR,2BAA6B,SAAUC,EAAYtC,EAAYuC,EAAcJ,EAAUK,KAY/GlB,EAActQ,UAAUyR,eAAiB,SAAU1C,EAAOC,EAAYuC,eAMtEjB,EAActQ,UAAU0R,SAAW,kBACxB7R,KAAK4Q,QAMhBH,EAActQ,UAAU2R,mBAAqB,aAM7CrB,EAActQ,UAAUwQ,mBAAqB,SAAUnM,GACOA,EAAMtE,OACtD6O,aAAAA,IACN/O,KAAK+R,2BAUbtB,EAActQ,UAAU6R,UAAY,SAAUC,OACtCC,EAAaD,EAAMlD,kBACnBmD,GAAAA,IAAmCA,GAAAA,IACnCD,EAAM/N,iBAAAA,EAAmClE,KAAK0Q,yBAE9CwB,GAAAA,KACAD,EAAME,OACND,EAAaD,EAAMlD,YAEhBmD,GAAAA,IAKXzB,EAActQ,UAAU4R,wBAA0B,eAC1C3F,EAAQpM,KAAK6R,WACbzF,EAAMO,cAAgBP,EAAMM,kBAAAA,IAC5BN,EAAM/F,WAGPoK,EA7JPD,8DCrBA4B,GAA0BnM,eACtBlD,EAAgB,SAAUE,EAAGpC,UAC7BkC,EAAgBtD,OAAOyD,gBAAAA,CAChBC,UAAAA,cAA2B7B,OAAAA,SAAmB2B,EAAGpC,GAAKoC,EAAEE,UAAYtC,aAC7DoC,EAAGpC,WAAcuC,KAAKvC,EAAOpB,OAAOU,UAAUqC,eAAea,KAAKxC,EAAGuC,KAAIH,EAAEG,GAAKvC,EAAEuC,MAC3EH,EAAGpC,WAErB,SAAUoC,EAAGpC,GAEhB,SAAAyC,IAAgBtD,KAAKuD,YAAcN,EADnCF,EAAcE,EAAGpC,GAEjBoC,EAAE9C,UAAkB,OAANU,EAAapB,OAAO+D,OAAO3C,IAAMyC,EAAGnD,UAAYU,EAAEV,UAAAA,IAAemD,IAVzD2C,GAc1BoM,GAAAA,SAAuC3O,GASvC,SAAA4O,EAAqBvS,EAAMwS,EAA2BC,EAAgBC,OAC9D5O,EAAQH,EAAOL,KAAKrD,KAAMD,IAASC,YAOvC6D,EAAM6O,sBAAwBH,EAM9B1O,EAAMsL,WAAaqD,EAOnB3O,EAAM8O,QAAUF,EACT5O,SA9BXuO,GAAUE,EAAa5O,GAgChB4O,EAjCPD,4CCQAO,IAAWtR,MAAM,GAwFd,SAAAuR,GAAeC,EAAWrB,OACzB/H,EAAI+H,EAAW,GACf9H,EAAI8H,EAAW,UACnBA,EAAW,GAAKqB,EAAU,GAAKpJ,EAAIoJ,EAAU,GAAKnJ,EAAImJ,EAAU,GAChErB,EAAW,GAAKqB,EAAU,GAAKpJ,EAAIoJ,EAAU,GAAKnJ,EAAImJ,EAAU,GACzDrB,EAwDJ,SAAAsB,GAAiBD,EAAWE,EAAKC,EAAKC,EAAIC,EAAIC,EAAOC,EAAKC,OACzDC,EAAMhK,KAAKgK,IAAIH,GACfI,EAAMjK,KAAKiK,IAAIJ,UACnBN,EAAU,GAAKI,EAAKM,EACpBV,EAAU,GAAKK,EAAKI,EACpBT,EAAU,IAAMI,EAAKK,EACrBT,EAAU,GAAKK,EAAKK,EACpBV,EAAU,GAAKO,EAAMH,EAAKM,EAAMF,EAAMJ,EAAKK,EAAMP,EACjDF,EAAU,GAAKO,EAAMF,EAAKI,EAAMD,EAAMH,EAAKK,EAAMP,EAC1CH,EAkCJ,SAAAW,GAAqBvT,EAAQoC,OAsBRoR,EArBpBC,GAqBoBD,EArBFpR,GAsBX,GAAKoR,EAAI,GAAKA,EAAI,GAAKA,EAAI,MArBvB,IAARC,EAAW,QACd/S,EAAI0B,EAAO,GACXzB,EAAIyB,EAAO,GACXsR,EAAItR,EAAO,GACXW,EAAIX,EAAO,GACXhD,EAAIgD,EAAO,GACXuR,EAAIvR,EAAO,UACfpC,EAAO,GAAK+C,EAAI0Q,EAChBzT,EAAO,IAAMW,EAAI8S,EACjBzT,EAAO,IAAM0T,EAAID,EACjBzT,EAAO,GAAKU,EAAI+S,EAChBzT,EAAO,IAAM0T,EAAIC,EAAI5Q,EAAI3D,GAAKqU,EAC9BzT,EAAO,KAAOU,EAAIiT,EAAIhT,EAAIvB,GAAKqU,EACxBzT,EAgBJ,SAAA4T,GAAkBJ,SACd,UAAYA,EAAIK,KAAK,MAAQ,WCjPvB,iBACC,kBACJ,cACC,eCHF,KACK,KACP,KACA,KACA,KACD,GCKH,SAAAC,GAAwBC,WACvBrH,EAASsH,KACJhT,EAAI,EAAGkB,EAAK6R,EAAYhT,OAAQC,EAAIkB,IAAMlB,EAC/CiT,GAAiBvH,EAAQqH,EAAY/S,WAElC0L,EAkEJ,SAAAwH,GAAkCxH,EAAQlD,EAAGC,OAC5CW,EAAIC,SAEJD,EADAZ,EAAIkD,EAAO,GACNA,EAAO,GAAKlD,EAEZkD,EAAO,GAAKlD,EACZA,EAAIkD,EAAO,GAGX,GAWGtC,GARRC,EADAZ,EAAIiD,EAAO,GACNA,EAAO,GAAKjD,EAEZiD,EAAO,GAAKjD,EACZA,EAAIiD,EAAO,GAGX,GAEarC,EAUnB,SAAA8J,GAA4BzH,EAAQ6E,UAChC6C,GAAW1H,EAAQ6E,EAAW,GAAIA,EAAW,IAcjD,SAAA8C,GAAwBC,EAASC,UAC5BD,EAAQ,IAAMC,EAAQ,IAC1BA,EAAQ,IAAMD,EAAQ,IACtBA,EAAQ,IAAMC,EAAQ,IACtBA,EAAQ,IAAMD,EAAQ,GAWvB,SAAAF,GAAoB1H,EAAQlD,EAAGC,UAC3BiD,EAAO,IAAMlD,GAAKA,GAAKkD,EAAO,IAAMA,EAAO,IAAMjD,GAAKA,GAAKiD,EAAO,GAStE,SAAA8H,GAAgC9H,EAAQ6E,OACvCkD,EAAO/H,EAAO,GACdgI,EAAOhI,EAAO,GACdiI,EAAOjI,EAAO,GACdkI,EAAOlI,EAAO,GACdlD,EAAI+H,EAAW,GACf9H,EAAI8H,EAAW,GACfsD,EAAAA,UACArL,EAAIiL,EACJI,GAAeA,GAEVrL,EAAImL,IACTE,GAAeA,IAEfpL,EAAIiL,EACJG,GAAeA,GAEVpL,EAAImL,IACTC,GAAeA,IAEfA,IAAAA,KACAA,EAAAA,IAEGA,EAOJ,SAAAb,YACKzI,EAAAA,EAAUA,EAAAA,GAAWA,EAAAA,GAAWA,EAAAA,GAWrC,SAAAuJ,GAAwBL,EAAMC,EAAMC,EAAMC,EAAMG,UAC/CA,GACAA,EAAW,GAAKN,EAChBM,EAAW,GAAKL,EAChBK,EAAW,GAAKJ,EAChBI,EAAW,GAAKH,EACTG,IAGCN,EAAMC,EAAMC,EAAMC,GAQ3B,SAAAI,GAA6BD,UACzBD,GAAevJ,EAAAA,EAAUA,EAAAA,GAAWA,EAAAA,GAAWA,EAAAA,EAAUwJ,GAiD7D,SAAAE,GAAgBX,EAASC,UACpBD,EAAQ,IAAMC,EAAQ,IAC1BD,EAAQ,IAAMC,EAAQ,IACtBD,EAAQ,IAAMC,EAAQ,IACtBD,EAAQ,IAAMC,EAAQ,GAyCvB,SAAAN,GAA0BvH,EAAQ6E,GACjCA,EAAW,GAAK7E,EAAO,KACvBA,EAAO,GAAK6E,EAAW,IAEvBA,EAAW,GAAK7E,EAAO,KACvBA,EAAO,GAAK6E,EAAW,IAEvBA,EAAW,GAAK7E,EAAO,KACvBA,EAAO,GAAK6E,EAAW,IAEvBA,EAAW,GAAK7E,EAAO,KACvBA,EAAO,GAAK6E,EAAW,IAQxB,SAAA2D,GAA2BxI,EAAQqH,WAC7B/S,EAAI,EAAGkB,EAAK6R,EAAYhT,OAAQC,EAAIkB,IAAMlB,EAC/CiT,GAAiBvH,EAAQqH,EAAY/S,WAElC0L,EAUJ,SAAAyI,GAA+BzI,EAAQ0I,EAAiBC,EAAQC,EAAKC,QACjEF,EAASC,EAAKD,GAAUE,EAC3BC,GAAS9I,EAAQ0I,EAAgBC,GAASD,EAAgBC,EAAS,WAEhE3I,EAkBJ,SAAA8I,GAAkB9I,EAAQlD,EAAGC,GAChCiD,EAAO,GAAKrD,KAAKF,IAAIuD,EAAO,GAAIlD,GAChCkD,EAAO,GAAKrD,KAAKF,IAAIuD,EAAO,GAAIjD,GAChCiD,EAAO,GAAKrD,KAAKD,IAAIsD,EAAO,GAAIlD,GAChCkD,EAAO,GAAKrD,KAAKD,IAAIsD,EAAO,GAAIjD,GAW7B,SAAAgM,GAAuB/I,EAAQ0E,OAC9BsE,SACJA,EAAMtE,EAASuE,GAAcjJ,OAI7BgJ,EAAMtE,EAASwE,GAAelJ,OAI9BgJ,EAAMtE,EAASyE,GAAYnJ,KANhBgJ,GAUXA,EAAMtE,EAAS0E,GAAWpJ,OAInB,EAQJ,SAAAqJ,GAAiBrJ,OAChBsJ,EAAO,SACNC,GAAQvJ,KACTsJ,EAAOE,GAASxJ,GAAUyJ,GAAUzJ,IAEjCsJ,EAQJ,SAAAL,GAAuBjJ,UAClBA,EAAO,GAAIA,EAAO,IAQvB,SAAAkJ,GAAwBlJ,UACnBA,EAAO,GAAIA,EAAO,IAQvB,SAAA0J,GAAmB1J,WACbA,EAAO,GAAKA,EAAO,IAAM,GAAIA,EAAO,GAAKA,EAAO,IAAM,GAQ5D,SAAA2J,GAAmB3J,EAAQ4J,OAC1B/E,SACA+E,IAAAA,GACA/E,EAAaoE,GAAcjJ,GAEtB4J,IAAAA,GACL/E,EAAaqE,GAAelJ,GAEvB4J,IAAAA,GACL/E,EAAauE,GAAWpJ,GAEnB4J,IAAAA,GACL/E,EAAasE,GAAYnJ,OAGlB,EAAO,IAEX6E,EAsBJ,SAAAgF,GAA2BC,EAAQzG,EAAY0G,EAAUC,EAAM3B,OAC9D3K,EAAM2F,EAAa2G,EAAK,GAAM,EAC9BrM,EAAM0F,EAAa2G,EAAK,GAAM,EAC9BC,EAActN,KAAKiK,IAAImD,GACvBG,EAAcvN,KAAKgK,IAAIoD,GACvBI,EAAOzM,EAAKuM,EACZG,EAAO1M,EAAKwM,EACZG,EAAO1M,EAAKsM,EACZK,EAAO3M,EAAKuM,EACZpN,EAAIgN,EAAO,GACX/M,EAAI+M,EAAO,GACXS,EAAKzN,EAAIqN,EAAOG,EAChBhN,EAAKR,EAAIqN,EAAOG,EAChB9M,EAAKV,EAAIqN,EAAOG,EAChBE,EAAK1N,EAAIqN,EAAOG,EAChBG,EAAK1N,EAAIqN,EAAOC,EAChB9M,EAAKR,EAAIqN,EAAOC,EAChB5M,EAAKV,EAAIqN,EAAOC,EAChBK,EAAK3N,EAAIqN,EAAOC,SACbjC,GAAezL,KAAKF,IAAI8N,EAAIjN,EAAIE,EAAIgN,GAAK7N,KAAKF,IAAIgO,EAAIlN,EAAIE,EAAIiN,GAAK/N,KAAKD,IAAI6N,EAAIjN,EAAIE,EAAIgN,GAAK7N,KAAKD,IAAI+N,EAAIlN,EAAIE,EAAIiN,GAAKrC,GAQ3H,SAAAoB,GAAmBzJ,UACfA,EAAO,GAAKA,EAAO,GAmBvB,SAAA2K,GAAyB/C,EAASC,EAASQ,OAC1CuC,EAAevC,IA1VXxJ,EAAAA,EAAUA,EAAAA,GAAAA,EAAAA,GAAWA,EAAAA,UA2VzBgM,GAAWjD,EAASC,IAChBD,EAAQ,GAAKC,EAAQ,GACrB+C,EAAa,GAAKhD,EAAQ,GAG1BgD,EAAa,GAAK/C,EAAQ,GAE1BD,EAAQ,GAAKC,EAAQ,GACrB+C,EAAa,GAAKhD,EAAQ,GAG1BgD,EAAa,GAAK/C,EAAQ,GAE1BD,EAAQ,GAAKC,EAAQ,GACrB+C,EAAa,GAAKhD,EAAQ,GAG1BgD,EAAa,GAAK/C,EAAQ,GAE1BD,EAAQ,GAAKC,EAAQ,GACrB+C,EAAa,GAAKhD,EAAQ,GAG1BgD,EAAa,GAAK/C,EAAQ,IAI9BS,GAAoBsC,GAEjBA,EAwBJ,SAAAxB,GAAoBpJ,UACfA,EAAO,GAAIA,EAAO,IAQvB,SAAAmJ,GAAqBnJ,UAChBA,EAAO,GAAIA,EAAO,IAQvB,SAAAwJ,GAAkBxJ,UACdA,EAAO,GAAKA,EAAO,GASvB,SAAA6K,GAAoBjD,EAASC,UACxBD,EAAQ,IAAMC,EAAQ,IAC1BD,EAAQ,IAAMC,EAAQ,IACtBD,EAAQ,IAAMC,EAAQ,IACtBD,EAAQ,IAAMC,EAAQ,GAQvB,SAAA0B,GAAiBvJ,UACbA,EAAO,GAAKA,EAAO,IAAMA,EAAO,GAAKA,EAAO,GAkGhD,SAAA8K,GAAwB9K,EAAQ+K,EAAa1C,EAAY2C,OACxD3D,EAAAA,MACA2D,EAAY,UACRC,EAAQjL,EAAO,GAAKA,EAAO,GAC3BkL,EAASlL,EAAO,GAAKA,EAAO,GACvB1L,EAAI,EAAGA,EAAI0W,IAAa1W,EAC7B+S,EAAYnR,KAAK8J,EAAO,GAAMiL,EAAQ3W,EAAK0W,EAAWhL,EAAO,GAAIA,EAAO,GAAIA,EAAO,GAAMkL,EAAS5W,EAAK0W,EAAWhL,EAAO,GAAMiL,EAAQ3W,EAAK0W,EAAWhL,EAAO,GAAIA,EAAO,GAAIA,EAAO,GAAMkL,EAAS5W,EAAK0W,QAI5M3D,EAAAA,CACIrH,EAAO,GACPA,EAAO,GACPA,EAAO,GACPA,EAAO,GACPA,EAAO,GACPA,EAAO,GACPA,EAAO,GACPA,EAAO,IAGf+K,EAAY1D,EAAaA,EAAa,WAClC8D,EAAAA,GACAC,EAAAA,GACYC,GAAP/W,EAAI,EAAO+S,EAAYhT,QAAQC,EAAI+W,EAAG/W,GAAK,EAChD6W,EAAGjV,KAAKmR,EAAY/S,IACpB8W,EAAGlV,KAAKmR,EAAY/S,EAAI,WAntBhC,SAA4B6W,EAAIC,EAAI/C,UAKzBD,GAJIzL,KAAKF,IAAIzD,MAAM,KAAMmS,GACrBxO,KAAKF,IAAIzD,MAAM,KAAMoS,GACrBzO,KAAKD,IAAI1D,MAAM,KAAMmS,GACrBxO,KAAKD,IAAI1D,MAAM,KAAMoS,GACc/C,GAgtBvCiD,CAAmBH,EAAIC,EAAI/C,OClvBlCkD,GAA0B,oBAAdC,gBAA4D,IAAxBA,UAAUC,UACxDD,UAAUC,UAAUC,cACpB,GAKKC,IAAqC,IAA3BJ,GAAG7T,QAAQ,WAUrBkU,KALmC,IAA1BL,GAAG7T,QAAQ,WAAoB6T,GAAG7T,QAAQ,UAKhB,IAA1B6T,GAAG7T,QAAQ,YAA2C,GAAvB6T,GAAG7T,QAAQ,SAKnDmU,IAAmC,IAA7BN,GAAG7T,QAAQ,aAQjBoU,GAAiD,oBAArBC,iBAAmCA,iBAAmB,EAMlFC,GAAuD,oBAAtBC,mBACb,oBAApBC,iBACPC,gBAAgBF,kBAKTG,GAAgC,oBAAVC,OAAyBA,MAAM9Y,UAAU+Y,OAI/DC,GAAAA,eACHC,GAAU,UAENjO,EAAU1L,OAAOC,eAAAA,GAAmB,UAAA,CACpCC,IAAK,WACDyZ,GAAU,KAGlBC,OAAOnV,iBAAiB,IAAK,KAAMiH,GACnCkO,OAAOtU,oBAAoB,IAAK,KAAMoG,SAEnCmO,WAGAF,EAdAD,GCtCJ,SAAAI,GAA+BC,EAAWC,EAAYC,OACrDC,EAASD,GAAkBA,EAAezY,OACxCyY,EAAeE,QAAAA,GAAAA,IAEPd,gBAAgBU,GAAa,IAAKC,GAAc,KACpDI,SAASC,cAAc,iBAC7BN,IACAG,EAAO9B,MAAQ2B,GAEfC,IACAE,EAAO7B,OAAS2B,GAG4BE,EAAOI,WAAW,MAgC/D,SAAAC,GAAqBC,EAASC,OAC7BC,EAASD,EAAQE,WACjBD,GACAA,EAAOE,aAAaJ,EAASC,GAO9B,SAAAI,GAAoBC,UAChBA,GAAQA,EAAKH,WAAaG,EAAKH,WAAWI,YAAYD,GAAQ,SCjD9DE,GAAe,YA4BfC,GAAgB,aAQhBC,GAAkB,eAKzBC,GAAAA,IAAgBC,OAAAA,CAChB,qDACA,4CACA,8DACA,gDACA,8EACA,gEACA,mCACF9G,KAAK,IAAK,KACR+G,GAAAA,CACA,QACA,UACA,SACA,OACA,aACA,UAQOC,GAAoB,SAAUC,OACjCC,EAAQD,EAASC,MAAML,QACtBK,SACM,aAEPC,EAAAA,CACAC,WAAY,SACZvE,KAAM,QACNsE,MAAO,SACPE,OAAQ,SACRC,QAAS,UAEJna,EAAI,EAAGkB,EAAK0Y,GAAoB7Z,OAAQC,EAAIkB,IAAMlB,EAAAA,KACnD4G,EAAQmT,EAAM/Z,EAAI,QACR+D,IAAV6C,IACAoT,EAAMJ,GAAoB5Z,IAAM4G,UAGxCoT,EAAMI,SAAWJ,EAAMK,OAAOxS,MAAM,QAC7BmS,GCoCAM,GAAAA,IAAAA,EAAAA,SASAC,IAAAA,EAAAA,SACAC,QAAU,WACjBC,QAAQC,KAAK,kCASbC,GAJAC,GAAiB,KAQVC,GAAAA,IAKAC,eAMHC,EAAUC,EAJVtF,EAAO,QACPuF,EAAAA,CAAkB,YAAa,SAC/B3V,EAAM2V,EAAelb,OACrBmb,EAAO,2BAQX,SAAAC,EAAqBC,EAAWC,EAAYC,WACpCC,GAAY,EACPvb,EAAI,EAAGA,EAAIsF,IAAOtF,EAAAA,KACnBwb,EAAgBP,EAAejb,MACnCgb,EAAiBS,GAAiBL,EAAY,IAAMC,EAAa,IAAM3F,EAAO8F,EAAeN,GACzFI,GAAcE,EAAAA,KACV7E,EAAQ8E,GAAiBL,EACzB,IACAC,EACA,IACA3F,EACA4F,EACA,IACAE,EAAeN,GAGnBK,EAAYA,GAAa5E,GAASqE,WAGtCO,EAKR,SAAAG,YACQC,GAAO,EACPC,EAAQtB,GAAazT,UAChB7G,EAAI,EAAGkB,EAAK0a,EAAM7b,OAAQC,EAAIkB,IAAMlB,EAAAA,KACrC6b,EAAOD,EAAM5b,GACbsa,GAAa7b,IAAIod,GAzCf,MA0CEV,EAAYzW,MAAM5F,KAAM+c,EAAKhU,MAAM,UAC7BgT,IAEND,GAAiB,KACjBD,QAAc5W,EACduW,GAAanT,IAAI0U,EA/CnB,OAkDEvB,GAAanT,IAAI0U,EAAMvB,GAAa7b,IAAIod,GAAQ,GAAG,GACnDF,GAAO,IAIfA,IACAG,cAAcf,GACdA,OAAWhX,IA1DZ+W,GAgIX,SAAAiB,GAAqBF,EAAMX,UAClBN,KACDA,GAAAA,GAAuC,EAAG,IAE1CiB,GAAQlB,KACRC,GAAeiB,KAAOA,EACtBlB,GAAcC,GAAeiB,MAE1BjB,GAAeoB,YAAYd,GAO/B,SAAAO,GAA0BI,EAAMX,UAC5Ba,GAAYF,EAAMX,GAAMvE,MAwC5B,SAAAsF,GAAwBxK,EAASgE,EAAUyG,EAASC,GACtC,IAAb1G,IACAhE,EAAQ2K,UAAUF,EAASC,GAC3B1K,EAAQ4K,OAAO5G,GACfhE,EAAQ2K,WAAWF,GAAUC,QA+DjCG,GAA8B,KAK3B,SAAAC,GAA+B3K,gBAEdA,IAGX0K,KACDA,GAAAA,GAAoD,EAAG,GAAG7D,QAE9D6D,GAA4BtC,MAAMpI,UAAAA,GAAqBA,GAChD0K,GAA4BtC,MAAMpI,eChb7C4K,GAA0BzX,eACtBlD,EAAgB,SAAUE,EAAGpC,UAC7BkC,EAAgBtD,OAAOyD,gBAAAA,CAChBC,UAAAA,cAA2B7B,OAAAA,SAAmB2B,EAAGpC,GAAKoC,EAAEE,UAAYtC,aAC7DoC,EAAGpC,WAAcuC,KAAKvC,EAAOpB,OAAOU,UAAUqC,eAAea,KAAKxC,EAAGuC,KAAIH,EAAEG,GAAKvC,EAAEuC,MAC3EH,EAAGpC,WAErB,SAAUoC,EAAGpC,GAEhB,SAAAyC,IAAgBtD,KAAKuD,YAAcN,EADnCF,EAAcE,EAAGpC,GAEjBoC,EAAE9C,UAAkB,OAANU,EAAapB,OAAO+D,OAAO3C,IAAMyC,EAAGnD,UAAYU,EAAEV,UAAAA,IAAemD,IAVzD2C,GA2B1B0X,GAAAA,SAA+Cja,GAK/C,SAAAka,EAA6BxR,OACrBvI,EAAQH,EAAOL,KAAKrD,KAAMoM,IAAUpM,YAKxC6D,EAAMga,UAAY,KAKlBha,EAAMia,mBAONja,EAAMka,eRnBF,EAAG,EAAG,EAAG,EAAG,EAAG,GQ0BnBla,EAAMma,gBR1BF,EAAG,EAAG,EAAG,EAAG,EAAG,GQiCnBna,EAAM6O,uBRjCF,EAAG,EAAG,EAAG,EAAG,EAAG,GQqCnB7O,EAAM8O,QAAU,KAIhB9O,EAAMoa,iBAAkB,EACjBpa,SA7CX6Z,GAAUE,EAAqBla,GAqD/Bka,EAAoBzd,UAAU+d,aAAe,SAAUhe,EAAQ4S,EAAWzH,OAElEwS,EAAWlL,EADXwL,EAAiBne,KAAK6R,WAAW7F,eAEjC9L,GACyB,KAAzBA,EAAOgb,MAAM7P,SACbnL,EAAO4L,YAAcqS,KACjBxE,EAASzZ,EAAOke,6BACEC,oBAClB1L,EAAUgH,EAAOI,WAAW,YAGhCpH,GAC0B,IAAzBA,EAAQgH,OAAO9B,OACZlF,EAAQgH,OAAOuB,MAAMpI,YAAcA,EAMlC9S,KAAKie,kBAEVje,KAAK6d,UAAY,KACjB7d,KAAK2S,QAAU,KACf3S,KAAKie,iBAAkB,IARvBje,KAAK6d,UAAY3d,EACjBF,KAAK2S,QAAUA,EACf3S,KAAKie,iBAAkB,IAQtBje,KAAK6d,UAAAA,EACNA,EAAYhE,SAASC,cAAc,QACzBhO,UAAYqS,MAClBjD,EAAQ2C,EAAU3C,MACtBA,EAAMoD,SAAW,WACjBpD,EAAMrD,MAAQ,OACdqD,EAAMpD,OAAS,WAEX6B,GADJhH,EAAAA,MACqBgH,OACrBkE,EAAUU,YAAY5E,IACtBuB,EAAQvB,EAAOuB,OACToD,SAAW,WACjBpD,EAAMsD,KAAO,IACbtD,EAAMuD,gBAAkB,WACxBze,KAAK6d,UAAYA,EACjB7d,KAAK2S,QAAUA,IASvBiL,EAAoBzd,UAAUue,KAAO,SAAU/L,EAASxD,EAAYvC,OAC5D+R,EAAaxP,EAAWwP,WACxBC,EAAazP,EAAWyH,KAAK,GAAK+H,EAAc,EAChDE,EAAc1P,EAAWyH,KAAK,GAAK+H,EAAc,EACjDhI,EAAWxH,EAAWa,UAAU2G,SAChCmI,EAAAA,GAAqBlS,GACrBmS,EAAAA,GAAuBnS,GACvBoS,EAAAA,GAA6BpS,GAC7BqS,EAAAA,GAA2BrS,MAChBuC,EAAW+P,2BAA4BJ,MACvC3P,EAAW+P,2BAA4BH,MACvC5P,EAAW+P,2BAA4BF,MACvC7P,EAAW+P,2BAA4BD,GACtDtM,EAAQwM,UACOxM,GAAUgE,EAAUiI,EAAWC,GAC9ClM,EAAQyM,YACRzM,EAAQ0M,OAAOP,EAAQ,GAAKH,EAAYG,EAAQ,GAAKH,GACrDhM,EAAQ2M,OAAOP,EAAS,GAAKJ,EAAYI,EAAS,GAAKJ,GACvDhM,EAAQ2M,OAAON,EAAY,GAAKL,EAAYK,EAAY,GAAKL,GAC7DhM,EAAQ2M,OAAOL,EAAW,GAAKN,EAAYM,EAAW,GAAKN,GAC3DhM,EAAQ+L,UACO/L,EAASgE,EAAUiI,EAAWC,IAQjDjB,EAAoBzd,UAAUof,cAAgB,SAAU5M,EAASxD,EAAYvC,OACrEkS,EAAAA,GAAqBlS,GACrBmS,EAAAA,GAAuBnS,GACvBoS,EAAAA,GAA6BpS,GAC7BqS,EAAAA,GAA2BrS,MAChBuC,EAAW+P,2BAA4BJ,MACvC3P,EAAW+P,2BAA4BH,MACvC5P,EAAW+P,2BAA4BF,MACvC7P,EAAW+P,2BAA4BD,OAClDO,EAAWxf,KAAK0S,yBACL8M,EAAUV,MACVU,EAAUT,MACVS,EAAUR,MACVQ,EAAUP,GACzBtM,EAAQwM,OACRxM,EAAQyM,YACRzM,EAAQ0M,OAAO9V,KAAKgD,MAAMuS,EAAQ,IAAKvV,KAAKgD,MAAMuS,EAAQ,KAC1DnM,EAAQ2M,OAAO/V,KAAKgD,MAAMwS,EAAS,IAAKxV,KAAKgD,MAAMwS,EAAS,KAC5DpM,EAAQ2M,OAAO/V,KAAKgD,MAAMyS,EAAY,IAAKzV,KAAKgD,MAAMyS,EAAY,KAClErM,EAAQ2M,OAAO/V,KAAKgD,MAAM0S,EAAW,IAAK1V,KAAKgD,MAAM0S,EAAW,KAChEtM,EAAQ+L,QAQZd,EAAoBzd,UAAUsf,qBAAuB,SAAU1f,EAAM4S,EAASxD,OACtE/C,EAAQpM,KAAK6R,cACbzF,EAAMlH,YAAYnF,GAAAA,KACd2f,EAAAA,IAAAA,GAAAA,QAA0B3f,EAAMC,KAAK0S,sBAAuBvD,EAAYwD,GAC5EvG,EAAM7H,cAAcmb,KAQ5B9B,EAAoBzd,UAAUwf,UAAY,SAAUhN,EAASxD,GACzDnP,KAAKyf,qBAAAA,GAAgD9M,EAASxD,IAOlEyO,EAAoBzd,UAAUyf,WAAa,SAAUjN,EAASxD,GAC1DnP,KAAKyf,qBAAAA,GAAiD9M,EAASxD,IAcnEyO,EAAoBzd,UAAU0f,mBAAqB,SAAUnJ,EAAQzG,EAAY0G,EAAUgI,EAAY9G,EAAOC,EAAQsF,OAC9GpK,EAAM6E,EAAQ,EACd5E,EAAM6E,EAAS,EACf5E,EAAKyL,EAAa1O,EAClBkD,GAAMD,EACNG,GAAOqD,EAAO,GAAK0G,EACnB9J,GAAOoD,EAAO,aACM1W,KAAK+d,cAAe/K,EAAKC,EAAKC,EAAIC,GAAKwD,EAAUtD,EAAKC,IAUlFsK,EAAoBzd,UAAUyR,eAAiB,SAAU1C,EAAOC,EAAYuC,OAYpEtQ,EAXA0e,EAAAA,GAA6B9f,KAAK0S,sBAAuBxD,EAAM6Q,SAC/DpN,EAAU3S,KAAK2S,QAEfqN,EADQhgB,KAAK6R,WACOhF,eACpBmT,OAGwBA,EAFpBC,GAAkC9Q,EAAW+Q,2BAA4BhR,EAAM6Q,iBAGxE,aAKPrW,EAAIH,KAAKgD,MAAMuT,EAAY,IAC3BnW,EAAIJ,KAAKgD,MAAMuT,EAAY,IAC3BK,EAAYtG,SAASC,cAAc,UACnCsG,EAAaD,EAAUpG,WAAW,MACtCoG,EAAUtI,MAAQ,EAClBsI,EAAUrI,OAAS,EACnBsI,EAAWC,UAAU,EAAG,EAAG,EAAG,GAC9BD,EAAWE,UAAU3N,EAAQgH,OAAQjQ,EAAGC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC1DvI,EAAOgf,EAAWG,aAAa,EAAG,EAAG,EAAG,GAAGnf,WAExCof,SACc,kBAAbA,EAAIxX,SAEOyX,WAERrf,SAEK,IAAZA,EAAK,GACE,KAEJA,GAEJwc,EAxPPD,4DCpBW,KACE,ECAb+C,GAKS,UALTA,GAUM,KAVNA,GAeQ,IAfRA,GAyBa,cAzBbA,GA8BQ,QAQDC,GAAAA,GAEXA,GAAgBD,IAAkB,EAAInX,KAAKqB,GAAK,QAAW,IAC3D+V,GAAgBD,IAAc,MAC9BC,GAAgBD,IAAgB,EAChCC,GAAgBD,IAAgB,KAAO,eCFnCE,GAAAA,WAIA,SAAAC,EAAoB1V,GAKhBnL,KAAK8gB,MAAQ3V,EAAQtC,KAQrB7I,KAAK+gB,OAAsD5V,EAAQ6V,MAQnEhhB,KAAKihB,aAA6Bhc,IAAnBkG,EAAQyB,OAAuBzB,EAAQyB,OAAS,KAQ/D5M,KAAKkhB,kBACuBjc,IAAxBkG,EAAQgW,YAA4BhW,EAAQgW,YAAc,KAK9DnhB,KAAKohB,sBAC2Bnc,IAA5BkG,EAAQkW,gBAAgClW,EAAQkW,gBAAkB,MAKtErhB,KAAKshB,aAA6Brc,IAAnBkG,EAAQoW,QAAuBpW,EAAQoW,OAKtDvhB,KAAKwhB,aAAexhB,KAAKshB,UAAWthB,KAAKihB,SAKzCjhB,KAAKyhB,wBAA0BtW,EAAQuW,mBAKvC1hB,KAAK2hB,iBAAmB,KAKxB3hB,KAAK4hB,eAAiBzW,EAAQ0W,qBAKlChB,EAAW1gB,UAAU2hB,SAAW,kBACrB9hB,KAAKwhB,WAOhBX,EAAW1gB,UAAU4hB,QAAU,kBACpB/hB,KAAK8gB,OAOhBD,EAAW1gB,UAAU0M,UAAY,kBACtB7M,KAAKihB,SAOhBJ,EAAW1gB,UAAU6hB,SAAW,kBACrBhiB,KAAK+gB,QAShBF,EAAW1gB,UAAU8hB,iBAAmB,kBAC7BjiB,KAAK4hB,gBAAAA,GAAkC5hB,KAAK+gB,SAOvDF,EAAW1gB,UAAU+hB,eAAiB,kBAC3BliB,KAAKkhB,cAahBL,EAAW1gB,UAAUgiB,mBAAqB,kBAC/BniB,KAAKohB,kBAOhBP,EAAW1gB,UAAUiiB,SAAW,kBACrBpiB,KAAKshB,SAOhBT,EAAW1gB,UAAUkiB,UAAY,SAAUd,GACvCvhB,KAAKshB,QAAUC,EACfvhB,KAAKwhB,aAAeD,IAAUvhB,KAAKihB,UAKvCJ,EAAW1gB,UAAUmiB,mBAAqB,kBAC/BtiB,KAAK2hB,kBAKhBd,EAAW1gB,UAAUoiB,mBAAqB,SAAUC,GAChDxiB,KAAK2hB,iBAAmBa,GAO5B3B,EAAW1gB,UAAUmN,UAAY,SAAUV,GACvC5M,KAAKihB,QAAUrU,EACf5M,KAAKwhB,aAAexhB,KAAKshB,UAAW1U,IAQxCiU,EAAW1gB,UAAUsiB,eAAiB,SAAUtB,GAC5CnhB,KAAKkhB,aAAeC,GAQxBN,EAAW1gB,UAAUuiB,sBAAwB,SAAUC,GACnD3iB,KAAKyhB,wBAA0BkB,GAOnC9B,EAAW1gB,UAAUyiB,uBAAyB,kBACnC5iB,KAAKyhB,yBAETZ,EAjMPD,GCjDAiC,GAA0B5c,eACtBlD,EAAgB,SAAUE,EAAGpC,UAC7BkC,EAAgBtD,OAAOyD,gBAAAA,CAChBC,UAAAA,cAA2B7B,OAAAA,SAAmB2B,EAAGpC,GAAKoC,EAAEE,UAAYtC,aAC7DoC,EAAGpC,WAAcuC,KAAKvC,EAAOpB,OAAOU,UAAUqC,eAAea,KAAKxC,EAAGuC,KAAIH,EAAEG,GAAKvC,EAAEuC,MAC3EH,EAAGpC,WAErB,SAAUoC,EAAGpC,GAEhB,SAAAyC,IAAgBtD,KAAKuD,YAAcN,EADnCF,EAAcE,EAAGpC,GAEjBoC,EAAE9C,UAAkB,OAANU,EAAapB,OAAO+D,OAAO3C,IAAMyC,EAAGnD,UAAYU,EAAEV,UAAAA,IAAemD,IAVzD2C,GAyBnB6c,GAAS,QAKTC,GAAYxZ,KAAKqB,GAAKkY,GAKtBE,GAAAA,EAAWD,IAAYA,GAAWA,GAAWA,IAK7CE,GAAAA,EAAiB,KAAM,GAAI,IAAK,IAMhCC,GAAaJ,GAASvZ,KAAKQ,IAAIR,KAAK4Z,IAAI5Z,KAAKqB,GAAK,IAKzDwY,GAAAA,SAA8C1f,GAK9C,SAAA2f,EAA4Bxa,UACjBnF,EAAOL,KAAKrD,KAAA,CACf6I,KAAMA,EACNmY,MAAAA,GACApU,OAAQoW,GACRzB,QAAQ,EACRJ,YAAa8B,GACbvB,mBAAoB,SAAUzR,EAAYqT,UAC/BrT,EAAAA,GAAkBqT,EAAM,GAAKR,QAEtC9iB,YAdV6iB,GAAUQ,EAAoB3f,GAgBvB2f,EAjBPD,KAyBOG,GAAAA,CAAAA,IACHH,GAAmB,aAAA,IACnBA,GAAmB,eAAA,IACnBA,GAAmB,eAAA,IACnBA,GAAmB,eAAA,IACnBA,GAAmB,iDAUpB,SAAAI,GAAsBC,EAAOC,EAAYC,OACxC1iB,EAASwiB,EAAMxiB,OACf2iB,EAAYD,EAAgB,EAAIA,EAAgB,EAChDxhB,EAASuhB,OACEze,IAAX9C,IAGIA,EAFAyhB,EAAY,EAEHH,EAAM1D,QAGf5d,IAAab,MAAML,YAGlBC,EAAI,EAAGA,EAAID,EAAQC,GAAK0iB,EAAAA,CAC7BzhB,EAAOjB,GAAM6hB,GAAYU,EAAMviB,GAAM,QACjCyI,EAAImZ,GAASvZ,KAAKQ,IAAIR,KAAK4Z,IAAK5Z,KAAKqB,KAAO6Y,EAAMviB,EAAI,GAAK,IAAO,MAClEyI,EAAIuZ,GACJvZ,EAAIuZ,GAECvZ,GAAKuZ,KACVvZ,GAAKuZ,IAET/gB,EAAOjB,EAAI,GAAKyI,SAEbxH,EAUJ,SAAA0hB,GAAoBJ,EAAOC,EAAYC,OACtC1iB,EAASwiB,EAAMxiB,OACf2iB,EAAYD,EAAgB,EAAIA,EAAgB,EAChDxhB,EAASuhB,OACEze,IAAX9C,IAGIA,EAFAyhB,EAAY,EAEHH,EAAM1D,QAGf5d,IAAab,MAAML,YAGlBC,EAAI,EAAGA,EAAID,EAAQC,GAAK0iB,EAC7BzhB,EAAOjB,GAAM,IAAMuiB,EAAMviB,GAAM6hB,GAC/B5gB,EAAOjB,EAAI,GACN,IAAMqI,KAAKua,KAAKva,KAAKK,IAAI6Z,EAAMviB,EAAI,GAAK4hB,KAAYvZ,KAAKqB,GAAK,UAEhEzI,gJC/IP4hB,GAA0B9d,eACtBlD,EAAgB,SAAUE,EAAGpC,UAC7BkC,EAAgBtD,OAAOyD,gBAAAA,CAChBC,UAAAA,cAA2B7B,OAAAA,SAAmB2B,EAAGpC,GAAKoC,EAAEE,UAAYtC,aAC7DoC,EAAGpC,WAAcuC,KAAKvC,EAAOpB,OAAOU,UAAUqC,eAAea,KAAKxC,EAAGuC,KAAIH,EAAEG,GAAKvC,EAAEuC,MAC3EH,EAAGpC,WAErB,SAAUoC,EAAGpC,GAEhB,SAAAyC,IAAgBtD,KAAKuD,YAAcN,EADnCF,EAAcE,EAAGpC,GAEjBoC,EAAE9C,UAAkB,OAANU,EAAapB,OAAO+D,OAAO3C,IAAMyC,EAAGnD,UAAYU,EAAEV,UAAAA,IAAemD,IAVzD2C,GA+BnB+d,GAAAA,EAAW,KAAM,GAAI,IAAK,IAK1BC,GAZS,QAYU1a,KAAKqB,GAAe,IAS9CsZ,GAAAA,SAA8CxgB,GAM9C,SAAAygB,EAA4Btb,EAAMub,UACvB1gB,EAAOL,KAAKrD,KAAA,CACf6I,KAAMA,EACNmY,MAAAA,GACApU,OAAQoX,GACR3C,gBAAiB+C,EACjB7C,QAAQ,EACRM,cAAeoC,GACf9C,YAAa6C,MACXhkB,YAdV+jB,GAAUI,EAAoBzgB,GAgBvBygB,EAjBPD,KAyBOG,GAAAA,CAAAA,IACHH,GAAmB,UAAA,IACnBA,GAAmB,YAAa,OAAA,IAChCA,GAAmB,iCAAA,IACnBA,GAAmB,4BAAA,IACnBA,GAAmB,+CAAgD,wDCrEvEI,GAAAA,OCEAC,GAAAA,GAeG,SAAAC,GAAaliB,EAAQmiB,EAAa9M,OACjC+M,EAAapiB,EAAOyf,UACpB4C,EAAkBF,EAAY1C,UAC5B2C,KAAcH,KAChBA,GAAWG,GAAAA,IAEfH,GAAWG,GAAYC,GAAmBhN,SCnBnC,WAEM,gBACJ,aAKD,SCGDiN,GAAiB,UAUrB,SAAAC,GAAqBC,EAAIC,EAAIC,OAC5BC,EAASD,GAAcJ,GACvBM,EAAAA,GAAiBJ,EAAG,IACpBK,EAAAA,GAAiBJ,EAAG,IACpBK,GAAeD,EAAOD,GAAQ,EAC9BG,EAAAA,GAAwBN,EAAG,GAAKD,EAAG,IAAM,EACzClkB,EAAI2I,KAAKgK,IAAI6R,GAAe7b,KAAKgK,IAAI6R,GACrC7b,KAAKgK,IAAI8R,GACL9b,KAAKgK,IAAI8R,GACT9b,KAAKiK,IAAI0R,GACT3b,KAAKiK,IAAI2R,UACV,EAAIF,EAAS1b,KAAK+b,MAAM/b,KAAKgc,KAAK3kB,GAAI2I,KAAKgc,KAAK,EAAI3kB,ICsLxD,SAAA4kB,GAAgBC,EAAaC,WAC5BC,GAAS,EACJzkB,EAAIukB,EAAYxkB,OAAS,EAAGC,GAAK,IAAKA,KACvCukB,EAAYvkB,IAAMwkB,EAAYxkB,GAAAA,CAC9BykB,GAAS,eAIVA,EAoBJ,SAAAC,GAAgBnU,EAAY2B,OAC3ByS,EAAWtc,KAAKiK,IAAIJ,GACpB0S,EAAWvc,KAAKgK,IAAIH,GACpB1J,EAAI+H,EAAW,GAAKoU,EAAWpU,EAAW,GAAKqU,EAC/Cnc,EAAI8H,EAAW,GAAKoU,EAAWpU,EAAW,GAAKqU,SACnDrU,EAAW,GAAK/H,EAChB+H,EAAW,GAAK9H,EACT8H,EA8HJ,SAAAsU,GAAetU,EAAYL,MAC1BA,EAAW0Q,WAAAA,KACPkE,EAAAA,GAAsB5U,EAAWvE,aACjCoZ,EAaL,SAAuBxU,EAAYL,EAAY8U,OAC9CC,EAAmB/U,EAAWvE,YAC9BoZ,EAAa,KACb7U,EAAW0Q,aACVrQ,EAAW,GAAK0U,EAAiB,IAAM1U,EAAW,GAAK0U,EAAiB,IAAA,KACrEC,EAAoBF,GAAAA,GAAkCC,GAC1DF,EAAa1c,KAAK8c,OAAO5U,EAAW,GAAK0U,EAAiB,IAAMC,UAE7DH,EArBcK,CAAc7U,EAAYL,EAAY4U,GACnDC,IACAxU,EAAW,IAAMwU,EAAaD,UAG/BvU,ECjTJ,SAAA8U,GAAwB9C,EAAOC,EAAYC,OAC1CxhB,UACe8C,IAAfye,EAAeze,SACN/D,EAAI,EAAGkB,EAAKqhB,EAAMxiB,OAAQC,EAAIkB,IAAMlB,EACzCwiB,EAAWxiB,GAAKuiB,EAAMviB,GAE1BiB,EAASuhB,OAGTvhB,EAASshB,EAAM1D,eAEZ5d,EAQJ,SAAAqkB,GAA2B/C,EAAOC,EAAYC,WAC9B1e,IAAfye,GAA4BD,IAAUC,EAAAA,SAC7BxiB,EAAI,EAAGkB,EAAKqhB,EAAMxiB,OAAQC,EAAIkB,IAAMlB,EACzCwiB,EAAWxiB,GAAKuiB,EAAMviB,GAE1BuiB,EAAQC,SAELD,EASJ,SAAAgD,GAAuBrV,IL/FvB,SAAavI,EAAMuI,GACtBkT,GAAMzb,GAAQuI,GK+FNA,EAAW2Q,UAAW3Q,MACbA,EAAYA,EAAYmV,IAiBtC,SAAAG,GAAaC,SACiB,iBAAnBA,EL5HNrC,GADQzb,EK8HqB8d,IL5HjCrC,GAAMzb,EAAK+d,QAAQ,yCAA0C,aAC7D,KK4H6BD,GAAmB,KL/HjD,IAAa9d,EKqJb,SAAAge,GAA4BzV,EAAYnB,EAAYqT,EAAOwD,OAE1DC,EACAC,GAFJ5V,EAAasV,GAAItV,IAEOwR,4BACpBoE,EAAAA,IACAD,EAAkBC,EAAO/W,EAAYqT,GACjCwD,GAAaA,IAAc1V,EAAW4Q,YAClCH,EAAgBzQ,EAAW6Q,sBAE3B8E,EACKA,EAAkBlF,EAAAA,GAAiCiF,aAK5D9F,EAAQ5P,EAAW4Q,cAClBhB,GAAAA,KAA2B8F,GAAcA,GAAAA,GAC1CC,EAAkB9W,WA2Bd4R,EArBAoF,EAAeC,GAA4B9V,EAAYsV,GAAI,iBAC3DO,IAAiBT,IAAqBxF,IAAAA,GAEtC+F,EAAkB9W,EAAamB,EAAW6Q,4BAGtCkF,EAAAA,CACA7D,EAAM,GAAKrT,EAAa,EACxBqT,EAAM,GACNA,EAAM,GAAKrT,EAAa,EACxBqT,EAAM,GACNA,EAAM,GACNA,EAAM,GAAKrT,EAAa,EACxBqT,EAAM,GACNA,EAAM,GAAKrT,EAAa,GAK5B8W,GAFIlP,IADJsP,EAAWF,EAAaE,EAAUA,EAAU,IACXpH,MAAM,EAAG,GAAIoH,EAASpH,MAAM,EAAG,IAC5DjI,GAAqBqP,EAASpH,MAAM,EAAG,GAAIoH,EAASpH,MAAM,EAAG,KAC5B,OAKnB9a,KAHlB4c,EAAgBiF,EAAAA,GACEA,GAChB1V,EAAW6Q,sBAEb8E,GAAmBlF,WAIxBkF,EASJ,SAAAK,GAAkCC,IAlGlC,SAAwBA,GAC3BA,EAAYC,QAAQb,IAkGpBc,CAAeF,GACfA,EAAYC,SAAQ,SAAUhlB,GAC1B+kB,EAAYC,SAAQ,SAAU7C,GACtBniB,IAAWmiB,MACMniB,EAAQmiB,EAAa8B,UAsC/C,SAAAiB,GAA0BpW,EAAYqW,UACpCrW,EAG0B,iBAAfA,EACLsV,GAAItV,GAGuBA,EAN3BsV,GAAIe,GAuGZ,SAAAC,GAAoBC,EAAaC,MAChCD,IAAgBC,SACT,MAEPC,EAAaF,EAAY3F,aAAe4F,EAAY5F,kBACpD2F,EAAY5F,YAAc6F,EAAY7F,WAIlBmF,GAA4BS,EAAaC,KACpCrB,KAJlBsB,EAgBR,SAAAX,GAAqCY,EAAkBC,OAGtDC,EJzVD,SAAatD,EAAYC,OACxB7R,SACA4R,KAAcH,IAAcI,KAAmBJ,GAAWG,KAC1D5R,EAAYyR,GAAWG,GAAYC,IAEhC7R,EIoVHkV,CAFaF,EAAiB/F,UACZgG,EAAsBhG,kBAEvCiG,IACDA,EAAgBxB,IAEbwB,EAYJ,SAAAC,GAAsB3lB,EAAQmiB,UAG1ByC,GAFgBR,GAAIpkB,GACCokB,GAAIjC,IAiB7B,SAAAyD,GAAmBzW,EAAYnP,EAAQmiB,UACtBwD,GAAa3lB,EAAQmiB,EAClCuD,CAAcvW,OAAYxM,EAAWwM,EAAWxQ,QAcpD,SAAAknB,GAAyBvb,EAAQtK,EAAQmiB,EAAa7M,aAEnChL,EADFqb,GAAa3lB,EAAQmiB,QACIxf,EAAW2S,OA3MNwQ,GAAcC,GAAkBC,GA4NlFC,GAAiB,KA0Cd,SAAAC,GAA0B/W,EAAYqW,UACpCS,GAGEL,GAAUzW,EAAYqW,EAAkBS,IAFpC9W,EAWR,SAAAgX,GAA4BhX,EAAYiX,UACtCH,GAGEL,GAAUzW,EAAY8W,GAAgBG,GAFlCjX,EAwBR,SAAAkX,GAAwB/b,EAAQ8b,UAC9BH,GAGEJ,GAAgBvb,EAAQ2b,GAAgBG,GAFpC9b,EAiDXwa,GAAAA,GAAAA,aACAA,GAAAA,GAAAA,aAjWkDgB,GAoWlDQ,GAAAA,YApWgEP,GAoWhEO,GAAAA,aApWkFN,GAoWlFM,GAAAA,WAAAA,GAAAA,YAnWatB,SAAQ,SAAUK,GAC3BS,GAAad,SAAQ,SAAUM,MACVD,EAAaC,EAAaS,OAC1BT,EAAaD,EAAaW,cC/PnDO,GAA0B5iB,eACtBlD,EAAgB,SAAUE,EAAGpC,UAC7BkC,EAAgBtD,OAAOyD,gBAAAA,CAChBC,UAAAA,cAA2B7B,OAAAA,SAAmB2B,EAAGpC,GAAKoC,EAAEE,UAAYtC,aAC7DoC,EAAGpC,WAAcuC,KAAKvC,EAAOpB,OAAOU,UAAUqC,eAAea,KAAKxC,EAAGuC,KAAIH,EAAEG,GAAKvC,EAAEuC,MAC3EH,EAAGpC,WAErB,SAAUoC,EAAGpC,GAEhB,SAAAyC,IAAgBtD,KAAKuD,YAAcN,EADnCF,EAAcE,EAAGpC,GAEjBoC,EAAE9C,UAAkB,OAANU,EAAapB,OAAO+D,OAAO3C,IAAMyC,EAAGnD,UAAYU,EAAEV,UAAAA,IAAemD,IAVzD2C,GA8B1B6iB,GAAAA,SAAoDplB,GAKpD,SAAAqlB,EAAkCC,OAC1BnlB,EAAQH,EAAOL,KAAKrD,KAAMgpB,IAAehpB,YAK7C6D,EAAMolB,OAAS,KACRplB,SAXXglB,GAAUE,EAA0BrlB,GAgBpCqlB,EAAyB5oB,UAAU+oB,SAAW,kBAClClpB,KAAKipB,OAAgBjpB,KAAKipB,OAAOC,WAAnB,MAO1BH,EAAyB5oB,UAAUmP,aAAe,SAAUH,OACpDM,EAAaN,EAAWK,iBAAiBL,EAAWga,YACpDxK,EAAaxP,EAAWwP,WACxB3O,EAAYb,EAAWa,UACvBoZ,EAAiBpZ,EAAUC,WAC3BoZ,EAAcrpB,KAAK6R,WAAW/C,YAC9Bwa,EAAQna,EAAWoa,UACnBC,EAAiBra,EAAWvC,eACN3H,IAAtBwK,EAAW7C,SACX4c,EAAAA,GAAiCA,EAAAA,GAA+B/Z,EAAW7C,OAAQoD,EAAUoB,eAE5FkY,EAAAA,MACAA,EAAAA,MAAeG,GACPD,MACLH,EAAAA,KACIjY,EAAapB,EAAUoB,WAOvBa,EAAQoX,EAAYH,SAASM,EAAgBJ,EAAgBzK,EAAYvN,GACzEa,GAASjS,KAAKgS,UAAUC,KACxBjS,KAAKipB,OAAShX,QAIlBjS,KAAKipB,OAAS,aAGbjpB,KAAKipB,QAQlBF,EAAyB5oB,UAAUoP,YAAc,SAAUJ,EAAYjP,OAC/D+R,EAAQjS,KAAKipB,OACbS,EAAczX,EAAMpF,YACpB8c,EAAkB1X,EAAM2X,gBACxBC,EAAkB5X,EAAM6X,gBACxBra,EAAaN,EAAWK,iBAAiBL,EAAWga,YACpDxK,EAAaxP,EAAWwP,WACxB3O,EAAYb,EAAWa,UACvB+Z,EAAa/Z,EAAU0G,OACvB0S,EAAiBpZ,EAAUC,WAC3B2G,EAAOzH,EAAWyH,KAClBoT,EAASrL,EAAagL,GAAoBP,EAAiBS,GAC3DhS,EAAQtO,KAAKgD,MAAMqK,EAAK,GAAK+H,GAC7B7G,EAASvO,KAAKgD,MAAMqK,EAAK,GAAK+H,GAC9BhI,EAAW3G,EAAU2G,YACrBA,EAAAA,KACIsT,EAAS1gB,KAAKgD,MAAMhD,KAAKgc,KAAK1N,EAAQA,EAAQC,EAASA,IAC3DD,EAAQoS,EACRnS,EAASmS,KAGIjqB,KAAKge,eAAgB7O,EAAWyH,KAAK,GAAK,EAAGzH,EAAWyH,KAAK,GAAK,EAAG,EAAI+H,EAAY,EAAIA,EAAYhI,GAAWkB,EAAQ,GAAIC,EAAS,MAC1I9X,KAAK0S,sBAAuB1S,KAAKge,oBACzCkM,EAAAA,GAAwClqB,KAAKge,gBACjDhe,KAAKke,aAAahe,EAAQgqB,EAAiBza,EAAWpE,aAClDsH,EAAU3S,KAAK2S,QACfgH,EAAShH,EAAQgH,OACjBA,EAAO9B,OAASA,GAAS8B,EAAO7B,QAAUA,GAC1C6B,EAAO9B,MAAQA,EACf8B,EAAO7B,OAASA,GAEV9X,KAAKie,iBACXtL,EAAQ0N,UAAU,EAAG,EAAGxI,EAAOC,OAG/BqS,GAAU,KACV1a,EAAW7C,OAAAA,KACPoT,EAAAA,GAA6BvQ,EAAW7C,OAAQoD,EAAUoB,aAC9D+Y,GAAAA,GACoBnK,EAAa7Q,EAAWvC,SAAAA,GACzBoT,EAAa7Q,EAAWvC,UAEvC5M,KAAKuf,cAAc5M,EAASxD,EAAY6Q,OAG5CoK,EAAMnY,EAAMiX,WACZpW,EAAAA,GAA6B9S,KAAK+d,cAAelG,EAAQ,EAAGC,EAAS,EAAGkS,EAAOA,EAAO,EAAIH,GAAmBH,EAAY,GAAKK,EAAW,IAAOJ,EAAkBE,GAAmBE,EAAW,GAAKL,EAAY,IAAOC,GAC5N3pB,KAAK8d,mBAAsB6L,EAAkBhL,EAAckL,MACvDvf,EAAKwI,EAAU,GACfvI,EAAKuI,EAAU,GACfuX,EAAKD,EAAIvS,MAAQ/E,EAAU,GAC3BwX,EAAKF,EAAItS,OAAShF,EAAU,QACzBH,EAAS3S,KAAK6R,WAAW/C,YAAYyb,qBAC5CvqB,KAAK2f,UAAUhN,EAASxD,GACpBkb,GAAM,IAAOC,GAAM,GAAA,KACfjf,EAAUoE,EAAWpE,QACrBmf,OAAAA,EACY,IAAZnf,IACAmf,EAAgBxqB,KAAK2S,QAAQ8X,YAC7BzqB,KAAK2S,QAAQ8X,YAAcpf,GAE/BrL,KAAK2S,QAAQ2N,UAAU8J,EAAK,EAAG,GAAIA,EAAIvS,OAAQuS,EAAItS,OAAQvO,KAAKgD,MAAMjC,GAAKf,KAAKgD,MAAMhC,GAAKhB,KAAKgD,MAAM8d,GAAK9gB,KAAKgD,MAAM+d,IACtG,IAAZjf,IACArL,KAAK2S,QAAQ8X,YAAcD,UAGnCxqB,KAAK4f,WAAWjN,EAASxD,GACrBgb,GACAxX,EAAQ+X,UAERR,IAAoBvQ,EAAOuB,MAAMpI,YACjC6G,EAAOuB,MAAMpI,UAAYoX,GAEtBlqB,KAAK6d,WAETkL,EA3IPD,yDC9BA6B,GAA0B1kB,eACtBlD,EAAgB,SAAUE,EAAGpC,UAC7BkC,EAAgBtD,OAAOyD,gBAAAA,CAChBC,UAAAA,cAA2B7B,OAAAA,SAAmB2B,EAAGpC,GAAKoC,EAAEE,UAAYtC,aAC7DoC,EAAGpC,WAAcuC,KAAKvC,EAAOpB,OAAOU,UAAUqC,eAAea,KAAKxC,EAAGuC,KAAIH,EAAEG,GAAKvC,EAAEuC,MAC3EH,EAAGpC,WAErB,SAAUoC,EAAGpC,GAEhB,SAAAyC,IAAgBtD,KAAKuD,YAAcN,EADnCF,EAAcE,EAAGpC,GAEjBoC,EAAE9C,UAAkB,OAANU,EAAapB,OAAO+D,OAAO3C,IAAMyC,EAAGnD,UAAYU,EAAEV,UAAAA,IAAemD,IAVzD2C,GA4B1B2kB,GAAAA,SAAsClnB,GAKtC,SAAAmnB,EAAoBva,UACT5M,EAAOL,KAAKrD,KAAMsQ,IAAgBtQ,YAL7C2qB,GAAUE,EAAYnnB,GAWtBmnB,EAAW1qB,UAAU0P,eAAiB,iCACE7P,OAEjC6qB,EAfPD,6DCrBOE,GAAsB,QAKtBC,GAAAA,CACPC,uBAAuB,EACvBC,yBAAyB,qBCdzBC,GAA0BjlB,eACtBlD,EAAgB,SAAUE,EAAGpC,UAC7BkC,EAAgBtD,OAAOyD,gBAAAA,CAChBC,UAAAA,cAA2B7B,OAAAA,SAAmB2B,EAAGpC,GAAKoC,EAAEE,UAAYtC,aAC7DoC,EAAGpC,WAAcuC,KAAKvC,EAAOpB,OAAOU,UAAUqC,eAAea,KAAKxC,EAAGuC,KAAIH,EAAEG,GAAKvC,EAAEuC,MAC3EH,EAAGpC,WAErB,SAAUoC,EAAGpC,GAEhB,SAAAyC,IAAgBtD,KAAKuD,YAAcN,EADnCF,EAAcE,EAAGpC,GAEjBoC,EAAE9C,UAAkB,OAANU,EAAapB,OAAO+D,OAAO3C,IAAMyC,EAAGnD,UAAYU,EAAEV,UAAAA,IAAemD,IAVzD2C,GAsB1BklB,GAAAA,SAAqCznB,GAQrC,SAAA0nB,EAAmBxe,EAAQqD,EAAY0O,EAAYxS,OAC3CtI,EAAQH,EAAOL,KAAKrD,OAASA,YAKjC6D,EAAM+I,OAASA,EAKf/I,EAAMwnB,YAAc1M,EAKpB9a,EAAMoM,WAAaA,EAKnBpM,EAAMsI,MAAQA,EACPtI,SA7BXqnB,GAAUE,EAAW1nB,GAkCrB0nB,EAAUjrB,UAAUkG,QAAU,WAC1BrG,KAAKuE,cAAAA,IAKT6mB,EAAUjrB,UAAU0M,UAAY,kBACrB7M,KAAK4M,QAMhBwe,EAAUjrB,UAAU+oB,SAAW,uBAM/BkC,EAAUjrB,UAAU2pB,cAAgB,kBACzB9pB,KAAKqrB,aAKhBD,EAAUjrB,UAAUypB,cAAgB,kBACF5pB,KAAKiQ,YAKvCmb,EAAUjrB,UAAU4O,SAAW,kBACpB/O,KAAKmM,OAMhBif,EAAUjrB,UAAUgS,KAAO,gBAGpBiZ,EA5EPD,wDCbAG,GCyBAC,GAAAA,WASA,SAAAC,EAAuBC,EAAYC,EAAYC,EAAcC,EAAiBC,EAAgBC,GAK1F9rB,KAAK+rB,YAAcN,EAKnBzrB,KAAKgsB,YAAcN,MAEfO,EAAAA,GACAC,EAAAA,GAA4BlsB,KAAKgsB,YAAahsB,KAAK+rB,aAMvD/rB,KAAKmsB,cAAgB,SAAUvY,OACvBrR,EAAMqR,EAAE,GAAK,IAAMA,EAAE,UACpBqY,EAAkB1pB,KACnB0pB,EAAkB1pB,GAAO2pB,EAAatY,IAEnCqY,EAAkB1pB,IAM7BvC,KAAKosB,iBAAmBR,EAKxB5rB,KAAKqsB,uBAAyBR,EAAiBA,EAK/C7rB,KAAKssB,WAAAA,GAMLtsB,KAAKusB,iBAAkB,EAKvBvsB,KAAKwsB,kBACDxsB,KAAK+rB,YAAYjK,cACX8J,KACA5rB,KAAK+rB,YAAYlf,aAAAA,GACV+e,IAAAA,GAA6B5rB,KAAK+rB,YAAYlf,aAK/D7M,KAAKysB,kBAAoBzsB,KAAK+rB,YAAYlf,YAAAA,GAC3B7M,KAAK+rB,YAAYlf,aAC1B,KAKN7M,KAAK0sB,kBAAoB1sB,KAAKgsB,YAAYnf,YAAAA,GAC3B7M,KAAKgsB,YAAYnf,aAC1B,SACF8f,EAAAA,GAAgChB,GAChCiB,EAAAA,GAAkCjB,GAClCkB,EAAAA,GAAwClB,GACxCmB,EAAAA,GAAsCnB,GACtCoB,EAAgB/sB,KAAKmsB,cAAcQ,GACnCK,EAAiBhtB,KAAKmsB,cAAcS,GACpCK,EAAoBjtB,KAAKmsB,cAAcU,GACvCK,EAAmBltB,KAAKmsB,cAAcW,GAWtCK,EAhHU,IAiHTrB,EACKviB,KAAKD,IAAI,EAAGC,KAAK6jB,KAAAA,GAAAA,GAAkBzB,IAChCG,EACGA,EACA,IACA,QACN,MACV9rB,KAAKqtB,SAASV,EAAoBC,EAAqBC,EAAwBC,EAAuBC,EAAeC,EAAgBC,EAAmBC,EAAkBC,GACtKntB,KAAKusB,gBAAAA,KACDe,EAAc7hB,EAAAA,EAClBzL,KAAKssB,WAAWhF,SAAQ,SAAUiG,EAAUrsB,EAAGH,GAC3CusB,EAAc/jB,KAAKF,IAAIikB,EAAaC,EAASjrB,OAAO,GAAG,GAAIirB,EAASjrB,OAAO,GAAG,GAAIirB,EAASjrB,OAAO,GAAG,OAIzGtC,KAAKssB,WAAWhF,QAAAA,SAAkBiG,MAC1BhkB,KAAKD,IAAIikB,EAASjrB,OAAO,GAAG,GAAIirB,EAASjrB,OAAO,GAAG,GAAIirB,EAASjrB,OAAO,GAAG,IAC1EgrB,EACAttB,KAAKysB,kBAAoB,EAAA,KACrBe,EAAAA,CAAAA,CACCD,EAASjrB,OAAO,GAAG,GAAIirB,EAASjrB,OAAO,GAAG,IAAA,CAC1CirB,EAASjrB,OAAO,GAAG,GAAIirB,EAASjrB,OAAO,GAAG,IAAA,CAC1CirB,EAASjrB,OAAO,GAAG,GAAIirB,EAASjrB,OAAO,GAAG,KAE3CkrB,EAAY,GAAG,GAAKF,EAActtB,KAAKysB,kBAAoB,IAC3De,EAAY,GAAG,IAAMxtB,KAAKysB,mBAE1Be,EAAY,GAAG,GAAKF,EAActtB,KAAKysB,kBAAoB,IAC3De,EAAY,GAAG,IAAMxtB,KAAKysB,mBAE1Be,EAAY,GAAG,GAAKF,EAActtB,KAAKysB,kBAAoB,IAC3De,EAAY,GAAG,IAAMxtB,KAAKysB,uBAK1B9X,EAAOpL,KAAKF,IAAImkB,EAAY,GAAG,GAAIA,EAAY,GAAG,GAAIA,EAAY,GAAG,IAC9DjkB,KAAKD,IAAIkkB,EAAY,GAAG,GAAIA,EAAY,GAAG,GAAIA,EAAY,GAAG,IAC9D7Y,EAAO3U,KAAKysB,kBAAoB,IACvCc,EAASjrB,OAASkrB,KAG5B9nB,KAAK1F,OAEXisB,EAAAA,UAYJT,EAAcrrB,UAAUstB,aAAe,SAAU7sB,EAAGC,EAAG+S,EAAG8Z,EAAMC,EAAMC,GAClE5tB,KAAKssB,WAAWxpB,KAAAA,CACZR,OAAAA,CAASorB,EAAMC,EAAMC,GACrB1tB,OAAAA,CAASU,EAAGC,EAAG+S,MAmBvB4X,EAAcrrB,UAAUktB,SAAW,SAAUzsB,EAAGC,EAAG+S,EAAG3Q,EAAGyqB,EAAMC,EAAMC,EAAMC,EAAMV,OACzEW,EAAAA,GAAAA,CAAmCJ,EAAMC,EAAMC,EAAMC,IACrDE,EAAkB/tB,KAAKysB,kBAAAA,GACZqB,GAAoB9tB,KAAKysB,kBAClC,KACFuB,EAA0ChuB,KAAKysB,kBAG/CwB,EAASjuB,KAAK+rB,YAAYjK,YAC1BiM,EAAkB,IAClBA,EAAkB,EAClBG,GAAmB,KACnBf,EAAiB,EAAA,IACbntB,KAAKgsB,YAAY5J,YAAcpiB,KAAK0sB,kBAGpCwB,EADIC,GADAC,GAAAA,CAAmCxtB,EAAGC,EAAG+S,EAAG3Q,KACGjD,KAAK0sB,kBArM/C,KAuMmCwB,GAE3CD,GAAUjuB,KAAK+rB,YAAY3J,YAAc2L,IAC1CG,EACIH,EA3MK,KA2MmCG,SAG/CA,GAAoBluB,KAAKosB,kBACtBiC,SAASP,EAAiB,KAC1BO,SAASP,EAAiB,KAC1BO,SAASP,EAAiB,KAC1BO,SAASP,EAAiB,SACVA,EAAkB9tB,KAAKosB,uBAM3CkC,EAAc,OACbJ,GACIG,SAASX,EAAK,KACdW,SAASX,EAAK,KACdW,SAASV,EAAK,KACdU,SAASV,EAAK,KACdU,SAAST,EAAK,KACdS,SAAST,EAAK,KACdS,SAASR,EAAK,KACdQ,SAASR,EAAK,QACXV,EAAiB,EACjBe,GAAmB,UAUA,IALnBI,GACMD,SAASX,EAAK,KAAQW,SAASX,EAAK,IAAU,EAAJ,IACtCW,SAASV,EAAK,KAAQU,SAASV,EAAK,IAAU,EAAJ,IAC1CU,SAAST,EAAK,KAAQS,SAAST,EAAK,IAAU,EAAJ,IAC1CS,SAASR,EAAK,KAAQQ,SAASR,EAAK,IAAU,EAAJ,KAEjC,GAAfS,GACe,GAAfA,GACe,GAAfA,YAMZnB,EAAiB,EAAA,KACZe,EAAAA,KACGxX,EAAAA,EAAW9V,EAAE,GAAKgT,EAAE,IAAM,GAAIhT,EAAE,GAAKgT,EAAE,IAAM,GAC7C2a,EAAYvuB,KAAKmsB,cAAczV,GAC/BpM,OAAAA,KACA2jB,EAIA3jB,GAHIkkB,GAA0Bd,EAAK,GAAIM,GAAAA,GAC5BJ,EAAK,GAAII,IAChB,EACCQ,GAAyBD,EAAU,GAAIP,QAG5C1jB,GAAMojB,EAAK,GAAKE,EAAK,IAAM,EAAIW,EAAU,OAEzChkB,GAAMmjB,EAAK,GAAKE,EAAK,IAAM,EAAIW,EAAU,GAE7CL,EAD4B5jB,EAAKA,EAAKC,EAAKA,EACAvK,KAAKqsB,0BAEhD6B,EAAAA,IACI3kB,KAAKklB,IAAI7tB,EAAE,GAAKgT,EAAE,KAAOrK,KAAKklB,IAAI7tB,EAAE,GAAKgT,EAAE,IAAA,KAEvC8a,EAAAA,EAAO7tB,EAAE,GAAK+S,EAAE,IAAM,GAAI/S,EAAE,GAAK+S,EAAE,IAAM,GACzC+a,EAAQ3uB,KAAKmsB,cAAcuC,GAC3BE,EAAAA,EAAO3rB,EAAE,GAAKrC,EAAE,IAAM,GAAIqC,EAAE,GAAKrC,EAAE,IAAM,GACzCiuB,EAAQ7uB,KAAKmsB,cAAcyC,GAC/B5uB,KAAKqtB,SAASzsB,EAAGC,EAAG6tB,EAAIE,EAAIlB,EAAMC,EAAMgB,EAAOE,EAAO1B,EAAiB,GACvEntB,KAAKqtB,SAASuB,EAAIF,EAAI9a,EAAG3Q,EAAG4rB,EAAOF,EAAOf,EAAMC,EAAMV,EAAiB,YAInE2B,EAAAA,EAAOluB,EAAE,GAAKC,EAAE,IAAM,GAAID,EAAE,GAAKC,EAAE,IAAM,GACzCkuB,EAAQ/uB,KAAKmsB,cAAc2C,GAC3BE,EAAAA,EAAOpb,EAAE,GAAK3Q,EAAE,IAAM,GAAI2Q,EAAE,GAAK3Q,EAAE,IAAM,GACzCgsB,EAAQjvB,KAAKmsB,cAAc6C,GAC/BhvB,KAAKqtB,SAASzsB,EAAGkuB,EAAIE,EAAI/rB,EAAGyqB,EAAMqB,EAAOE,EAAOpB,EAAMV,EAAiB,GACvEntB,KAAKqtB,SAASyB,EAAIjuB,EAAG+S,EAAGob,EAAID,EAAOpB,EAAMC,EAAMqB,EAAO9B,EAAiB,cAK/Ec,EAAAA,KACKjuB,KAAKwsB,yBAGVxsB,KAAKusB,iBAAkB,EAMA,IAAR,GAAd+B,IACDtuB,KAAKytB,aAAa7sB,EAAGgT,EAAG3Q,EAAGyqB,EAAME,EAAMC,GAEhB,IAAR,GAAdS,IACDtuB,KAAKytB,aAAa7sB,EAAGgT,EAAG/S,EAAG6sB,EAAME,EAAMD,GAEvCW,IAE2B,IAAR,GAAdA,IACDtuB,KAAKytB,aAAa5sB,EAAGoC,EAAGrC,EAAG+sB,EAAME,EAAMH,GAEhB,IAAR,EAAdY,IACDtuB,KAAKytB,aAAa5sB,EAAGoC,EAAG2Q,EAAG+Z,EAAME,EAAMD,MASnDpC,EAAcrrB,UAAU+uB,sBAAwB,eACxCtiB,GtB7JAnB,EAAAA,EAAUA,EAAAA,GAAAA,EAAAA,GAAWA,EAAAA,UsB8JzBzL,KAAKssB,WAAWhF,SAAQ,SAAUiG,EAAUrsB,EAAGH,OACvCouB,EAAM5B,EAASjrB,UACFsK,EAAQuiB,EAAI,OACZviB,EAAQuiB,EAAI,OACZviB,EAAQuiB,EAAI,OAE1BviB,GAKX4e,EAAcrrB,UAAUivB,aAAe,kBAC5BpvB,KAAKssB,YAETd,EAxUPD,GDdJ,SAAA8D,GAA0BC,EAAKC,EAAIC,EAAIC,EAAIC,GACvCJ,EAAIlQ,YACJkQ,EAAIjQ,OAAO,EAAG,GACdiQ,EAAIhQ,OAAOiQ,EAAIC,GACfF,EAAIhQ,OAAOmQ,EAAIC,GACfJ,EAAIK,YACJL,EAAInQ,OACJmQ,EAAI5Q,OACJ4Q,EAAIM,SAAS,EAAG,EAAGrmB,KAAKD,IAAIimB,EAAIE,GAAM,EAAGlmB,KAAKD,IAAIkmB,EAAIE,IACtDJ,EAAI5E,UAUR,SAAAmF,GAAuCzuB,EAAMmU,UAEjChM,KAAKklB,IAAIrtB,EAAc,EAATmU,GAAc,KAAO,GACvChM,KAAKklB,IAAIrtB,EAAc,EAATmU,EAAa,GAAK,QAAc,EAuC/C,SAAAua,GAAmCrE,EAAYC,EAAYqE,EAAcC,OACxEC,EAAAA,GAAyBF,EAAcrE,EAAYD,GAEnDyE,EAAAA,GAAsCxE,EAAYsE,EAAkBD,GACpEI,EAAsBzE,EAAWzJ,wBACThd,IAAxBkrB,IACAD,GAAoBC,OAEpBC,EAAsB3E,EAAWxJ,wBACThd,IAAxBmrB,IACAF,GAAoBE,OAKpBC,EAAe5E,EAAW5e,gBACzBwjB,GAAAA,GAAmCA,EAAcJ,GAAAA,KAC9CK,EAAAA,GAAwC7E,EAAYyE,EAAkBD,GACtEC,EACA7B,SAASiC,IAAuBA,EAAqB,IACrDJ,GAAoBI,UAGrBJ,EA6CJ,SAAAK,GAAgB1Y,EAAOC,EAAQ6G,EAAYuR,EAAkBG,EAAcL,EAAkBrE,EAAc6E,EAAeC,EAASC,EAAQC,EAAiBC,OAC3Jje,EAAAA,GAAgCpJ,KAAKgD,MAAMoS,EAAa9G,GAAQtO,KAAKgD,MAAMoS,EAAa7G,SACrFnF,EAASie,GACO,IAAnBH,EAAQxvB,cACD0R,EAAQgH,OAGnB,SAAAkX,EAAoB/oB,UACTyB,KAAKgD,MAAMzE,EAAQ6W,GAAcA,EAF5ChM,EAAQqX,MAAMrL,EAAYA,GAI1BhM,EAAQme,yBAA2B,cAC/BC,GrB8BItlB,EAAAA,EAAUA,EAAAA,GAAAA,EAAAA,GAAWA,EAAAA,GqB7B7BglB,EAAQnJ,SAAQ,SAAU6H,EAAKjuB,EAAGH,GrBqI/B,IAAgByT,EAASC,EAATD,EqBpIRuc,GrBoIiBtc,EqBpIC0a,EAAIviB,QrBqIrB,GAAK4H,EAAQ,KACrBA,EAAQ,GAAKC,EAAQ,IAErBA,EAAQ,GAAKD,EAAQ,KACrBA,EAAQ,GAAKC,EAAQ,IAErBA,EAAQ,GAAKD,EAAQ,KACrBA,EAAQ,GAAKC,EAAQ,IAErBA,EAAQ,GAAKD,EAAQ,KACrBA,EAAQ,GAAKC,EAAQ,WqB7IrBuc,EAAAA,GAA8BD,GAC9BE,EAAAA,GAAgCF,GAChCG,EAAAA,GAAsC3nB,KAAKgD,MAAOoS,EAAaqS,EAAsBd,GAAmB3mB,KAAKgD,MAAOoS,EAAasS,EAAuBf,MACrJgB,EAAeN,OAClBO,EAAcxS,EAAauR,EAC/BO,EAAQnJ,SAAQ,SAAU6H,EAAKjuB,EAAGH,OAC1BqwB,EAAOjC,EAAIviB,OAAO,GAAKmkB,EAAiB,GACxCM,IAASlC,EAAIviB,OAAO,GAAKmkB,EAAiB,IAC1CO,EAAAA,GAAoBnC,EAAIviB,QACxB2kB,EAAAA,GAAsBpC,EAAIviB,QAE1BuiB,EAAIld,MAAM4F,MAAQ,GAAKsX,EAAIld,MAAM6F,OAAS,GAC1CoZ,EAAc5Q,UAAU6O,EAAIld,MAAOye,EAAQA,EAAQvB,EAAIld,MAAM4F,MAAQ,EAAI6Y,EAAQvB,EAAIld,MAAM6F,OAAS,EAAI4Y,EAAQU,EAAOD,EAAaE,EAAOF,EAAaG,EAAWH,EAAaI,EAAYJ,UAGhMK,EAAAA,GAA2B7F,UAC/B6E,EAAcpB,eAAe9H,SAAQ,SAAUiG,EAAUrsB,EAAGH,OAqBpDuB,EAASirB,EAASjrB,OAClBpC,EAASqtB,EAASrtB,OAClBiX,EAAK7U,EAAO,GAAG,GAAI+U,EAAK/U,EAAO,GAAG,GAClC4H,EAAK5H,EAAO,GAAG,GAAI6H,EAAK7H,EAAO,GAAG,GAClC8H,EAAK9H,EAAO,GAAG,GAAI+H,EAAK/H,EAAO,GAAG,GAElCmvB,EAAKZ,GAAY3wB,EAAO,GAAG,GAAKsxB,EAAc,IAAMxB,GACpD0B,EAAKb,IAAa3wB,EAAO,GAAG,GAAKsxB,EAAc,IAAMxB,GACrDT,EAAKsB,GAAY3wB,EAAO,GAAG,GAAKsxB,EAAc,IAAMxB,GACpDR,EAAKqB,IAAa3wB,EAAO,GAAG,GAAKsxB,EAAc,IAAMxB,GACrDP,EAAKoB,GAAY3wB,EAAO,GAAG,GAAKsxB,EAAc,IAAMxB,GACpDN,EAAKmB,IAAa3wB,EAAO,GAAG,GAAKsxB,EAAc,IAAMxB,GAIrD2B,EAAwBxa,EACxBya,EAAwBva,EAC5BF,EAAK,EACLE,EAAK,MAWDwa,EjCtHL,SAA2Bne,WAC1BnU,EAAImU,EAAIzS,OACHC,EAAI,EAAGA,EAAI3B,EAAG2B,IAAAA,SAEf4wB,EAAS5wB,EACT6wB,EAAQxoB,KAAKklB,IAAI/a,EAAIxS,GAAGA,IACnB4J,EAAI5J,EAAI,EAAG4J,EAAIvL,EAAGuL,IAAAA,KACnBknB,EAAWzoB,KAAKklB,IAAI/a,EAAI5I,GAAG5J,IAC3B8wB,EAAWD,IACXA,EAAQC,EACRF,EAAShnB,MAGH,IAAVinB,SACO,SAGPE,EAAMve,EAAIoe,GACdpe,EAAIoe,GAAUpe,EAAIxS,GAClBwS,EAAIxS,GAAK+wB,UAEAC,EAAIhxB,EAAI,EAAGgxB,EAAI3yB,EAAG2yB,YACnBC,GAAQze,EAAIwe,GAAGhxB,GAAKwS,EAAIxS,GAAGA,GACtBkxB,EAAIlxB,EAAGkxB,EAAI7yB,EAAI,EAAG6yB,IACnBlxB,GAAKkxB,EACL1e,EAAIwe,GAAGE,GAAK,EAGZ1e,EAAIwe,GAAGE,IAAMD,EAAOze,EAAIxS,GAAGkxB,WAMvC1oB,EAAAA,IAAQpI,MAAM/B,GACT0Y,EAAI1Y,EAAI,EAAG0Y,GAAK,EAAGA,IAAAA,CACxBvO,EAAEuO,GAAKvE,EAAIuE,GAAG1Y,GAAKmU,EAAIuE,GAAGA,WACjBoa,EAAIpa,EAAI,EAAGoa,GAAK,EAAGA,IACxB3e,EAAI2e,GAAG9yB,IAAMmU,EAAI2e,GAAGpa,GAAKvO,EAAEuO,UAG5BvO,EiC6ECmoB,CANAS,CAAAA,CAJJpoB,GAAMynB,EACNxnB,GAAMynB,EAIO,EAAG,EAAGrC,EAAKkC,GAAAA,CAHxBrnB,GAAMunB,EACNtnB,GAAMunB,EAGO,EAAG,EAAGnC,EAAKgC,GAAAA,CACnB,EAAG,EAAGvnB,EAAIC,EAAIqlB,EAAKkC,GAAAA,CACnB,EAAG,EAAGtnB,EAAIC,EAAIqlB,EAAKgC,QAGnBG,MAGLlf,EAAQwM,OACRxM,EAAQyM,YArLhB,mBACqCna,IAA7BqmB,GAA6BrmB,KACzBqqB,EAAMzV,SAASC,cAAc,UAAUC,WAAW,MACtDuV,EAAIwB,yBAA2B,UAC/BxB,EAAIiD,UAAY,wBAChBlD,GAAiBC,EAAK,EAAG,EAAG,EAAG,GAC/BD,GAAiBC,EAAK,EAAG,EAAG,EAAG,OAC3BluB,EAAOkuB,EAAI/O,aAAa,EAAG,EAAG,EAAG,GAAGnf,KACxCkqB,GACIuE,GAA8BzuB,EAAM,IAChCyuB,GAA8BzuB,EAAM,IACpCyuB,GAA8BzuB,EAAM,UAEzCkqB,GAyKCkH,IACA5B,IAAAA,GAAAA,CAEAje,EAAQ0M,OAAOkQ,EAAIC,WAGfiD,EAAKhB,EAAKlC,EACVmD,EAAKhB,EAAKlC,EACLmD,EAAO,EAAGA,EAHP,EAGqBA,IAE7BhgB,EAAQ2M,OAAOiQ,EAAKsB,GAAa8B,EAAO,GAAKF,EALrC,GAKmDjD,EAAKqB,EAAY8B,EAAOD,EAAAA,IAEvEE,GAARD,GACAhgB,EAAQ2M,OAAOiQ,EAAKsB,GAAa8B,EAAO,GAAKF,EARzC,GAQuDjD,EAAKqB,GAAa8B,EAAO,GAAKD,EAAAA,IAIjG/f,EAAQ2M,OAAOmQ,EAAIC,QAGnB/c,EAAQ0M,OAAOkQ,EAAIC,GACnB7c,EAAQ2M,OAAOmS,EAAIC,GACnB/e,EAAQ2M,OAAOmQ,EAAIC,GAEvB/c,EAAQ+L,OACR/L,EAAQG,UAAU+e,EAAY,GAAIA,EAAY,GAAIA,EAAY,GAAIA,EAAY,GAAIJ,EAAIC,GACtF/e,EAAQ2K,UAAUyT,EAAiB,GAAKY,EAAuBZ,EAAiB,GAAKa,GACrFjf,EAAQqX,MAAMkG,EAAmBvR,GAAauR,EAAmBvR,GACjEhM,EAAQ2N,UAAU4Q,EAAcvX,OAAQ,EAAG,GAC3ChH,EAAQ+X,cAERiG,IACAhe,EAAQwM,OACRxM,EAAQme,yBAA2B,cACnCne,EAAQkgB,YAAc,QACtBlgB,EAAQmgB,UAAY,EACpBtC,EAAcpB,eAAe9H,SAAQ,SAAUiG,EAAUrsB,EAAGH,OACpDb,EAASqtB,EAASrtB,OAClBuxB,GAAMvxB,EAAO,GAAG,GAAKsxB,EAAc,IAAMxB,EACzC0B,IAAOxxB,EAAO,GAAG,GAAKsxB,EAAc,IAAMxB,EAC1CT,GAAMrvB,EAAO,GAAG,GAAKsxB,EAAc,IAAMxB,EACzCR,IAAOtvB,EAAO,GAAG,GAAKsxB,EAAc,IAAMxB,EAC1CP,GAAMvvB,EAAO,GAAG,GAAKsxB,EAAc,IAAMxB,EACzCN,IAAOxvB,EAAO,GAAG,GAAKsxB,EAAc,IAAMxB,EAC9Crd,EAAQyM,YACRzM,EAAQ0M,OAAOkQ,EAAIC,GACnB7c,EAAQ2M,OAAOmS,EAAIC,GACnB/e,EAAQ2M,OAAOmQ,EAAIC,GACnB/c,EAAQgd,YACRhd,EAAQogB,YAEZpgB,EAAQ+X,WAEL/X,EAAQgH,WEjSfqZ,GAA0B/sB,eACtBlD,EAAgB,SAAUE,EAAGpC,UAC7BkC,EAAgBtD,OAAOyD,gBAAAA,CAChBC,UAAAA,cAA2B7B,OAAAA,SAAmB2B,EAAGpC,GAAKoC,EAAEE,UAAYtC,aAC7DoC,EAAGpC,WAAcuC,KAAKvC,EAAOpB,OAAOU,UAAUqC,eAAea,KAAKxC,EAAGuC,KAAIH,EAAEG,GAAKvC,EAAEuC,MAC3EH,EAAGpC,WAErB,SAAUoC,EAAGpC,GAEhB,SAAAyC,IAAgBtD,KAAKuD,YAAcN,EADnCF,EAAcE,EAAGpC,GAEjBoC,EAAE9C,UAAkB,OAANU,EAAapB,OAAO+D,OAAO3C,IAAMyC,EAAGnD,UAAYU,EAAEV,UAAAA,IAAemD,IAVzD2C,GAgC1BgtB,GAAAA,SAAuCvvB,GAYvC,SAAAwvB,EAAqBzH,EAAYC,EAAYC,EAAcqE,EAAkBrR,EAAYwU,EAAkBvC,OACnG/sB,EAAQ7D,KACR4rB,EAAkBH,EAAW5e,YAC7BumB,EAAkB1H,EAAW7e,YAC7BwmB,EAAsBD,EAAAA,GACJzH,EAAcyH,GAC9BzH,EAEFuE,EAAAA,GAA6CzE,EAAYC,EADzDqE,GAAyBsD,GAC0DrD,GAEnFQ,EAAAA,IAAAA,GAAkC/E,EAAYC,EAAY2H,EAAqBzH,EC9C9D,GD8C+EsE,EAA2CF,GAE3IsD,EAAcH,EADC3C,EAActB,wBACgBgB,EAAkBvR,GAC/DxS,EAAQmnB,EAAAA,GAAyBC,GACjCC,EAAmBF,EAAcA,EAAYxJ,gBAAkB,SACnEjmB,EAAQH,EAAOL,KAAKrD,KAAM2rB,EAAcqE,EAAkBwD,EAAkBrnB,IAAUnM,MAKhFgsB,YAAcN,EAKpB7nB,EAAMuoB,iBAAmBR,EAKzB/nB,EAAM4vB,eAAiBjD,EAKvB3sB,EAAM6vB,kBAAoB1D,EAK1BnsB,EAAM8vB,cAAgBhI,EAKtB9nB,EAAM+vB,aAAeN,EAKrBzvB,EAAMgwB,kBAAoBL,EAK1B3vB,EAAMiwB,gBAAkBlD,EAKxB/sB,EAAMkwB,QAAU,KAKhBlwB,EAAMmwB,mBAAqB,KACpBnwB,SA7EXmvB,GAAUE,EAAaxvB,GAkFvBwvB,EAAY/yB,UAAUO,gBAAkB,WAChCV,KAAKmM,OAAAA,IACLnM,KAAKi0B,kBAETvwB,EAAOvD,UAAUO,gBAAgB2C,KAAKrD,OAK1CkzB,EAAY/yB,UAAU+oB,SAAW,kBACtBlpB,KAAK+zB,SAKhBb,EAAY/yB,UAAU+zB,cAAgB,kBAC3Bl0B,KAAKgsB,aAKhBkH,EAAY/yB,UAAUg0B,WAAa,eAC3B1nB,EAAczM,KAAK4zB,aAAa7kB,cAChCtC,GAAAA,GAA0B2nB,KACtBvc,EAAAA,GAAiB7X,KAAK2zB,eAAiB3zB,KAAK0zB,kBAC5C5b,EAAAA,GAAmB9X,KAAK2zB,eAAiB3zB,KAAK0zB,kBAClD1zB,KAAK+zB,QAAAA,GAA4Blc,EAAOC,EAAQ9X,KAAK6zB,kBAAmB7zB,KAAK4zB,aAAahK,gBAAiB5pB,KAAKosB,iBAAkBpsB,KAAK0zB,kBAAmB1zB,KAAK2zB,cAAe3zB,KAAKyzB,eAAAA,CAAAA,CAE3K7mB,OAAQ5M,KAAK4zB,aAAa/mB,YAC1BoF,MAAOjS,KAAK4zB,aAAa1K,aAE9B,OAAGjkB,EAAWjF,KAAK8zB,iBAE1B9zB,KAAKmM,MAAQM,EACbzM,KAAKqG,WAKT6sB,EAAY/yB,UAAUgS,KAAO,cACrBnS,KAAKmM,OAAAA,GAAoBonB,CACzBvzB,KAAKmM,MAAAA,GACLnM,KAAKqG,cACDoG,EAAczM,KAAK4zB,aAAa7kB,WAChCtC,GAAAA,IAAoCA,GAAAA,GACpCzM,KAAKm0B,cAGLn0B,KAAKg0B,mBAAAA,EAA4Bh0B,KAAK4zB,aAAAA,GAAgC,SAAUt0B,OACxEmN,EAAczM,KAAK4zB,aAAa7kB,WAChCtC,GAAAA,IACAA,GAAAA,KACAzM,KAAKi0B,kBACLj0B,KAAKm0B,gBAEVn0B,MACHA,KAAK4zB,aAAazhB,UAO9B+gB,EAAY/yB,UAAU8zB,gBAAkB,aAEcj0B,KAAKg0B,oBACvDh0B,KAAKg0B,mBAAqB,MAEvBd,EAvJPD,+DEhCAoB,GAA0BpuB,eACtBlD,EAAgB,SAAUE,EAAGpC,UAC7BkC,EAAgBtD,OAAOyD,gBAAAA,CAChBC,UAAAA,cAA2B7B,OAAAA,SAAmB2B,EAAGpC,GAAKoC,EAAEE,UAAYtC,aAC7DoC,EAAGpC,WAAcuC,KAAKvC,EAAOpB,OAAOU,UAAUqC,eAAea,KAAKxC,EAAGuC,KAAIH,EAAEG,GAAKvC,EAAEuC,MAC3EH,EAAGpC,WAErB,SAAUoC,EAAGpC,GAEhB,SAAAyC,IAAgBtD,KAAKuD,YAAcN,EADnCF,EAAcE,EAAGpC,GAEjBoC,EAAE9C,UAAkB,OAANU,EAAapB,OAAO+D,OAAO3C,IAAMyC,EAAGnD,UAAYU,EAAEV,UAAAA,IAAemD,IAVzD2C,GAsD1BquB,GAAAA,SAAkC5wB,GAKlC,SAAA6wB,EAAgBppB,OACRtH,EAAQH,EAAOL,KAAKrD,OAASA,YAKjC6D,EAAM2wB,YAAAA,GAA4BrpB,EAAQiG,YAK1CvN,EAAM4wB,cAAgBC,GAAkBvpB,EAAQwpB,cAKhD9wB,EAAM+wB,8BACkC3vB,IAApCkG,EAAQ0pB,yBACF1pB,EAAQ0pB,wBAOlBhxB,EAAMixB,SAAU,EAKhBjxB,EAAMkI,YACgB9G,IAAlBkG,EAAQgB,MAAsBhB,EAAQgB,MAAAA,GAK1CtI,EAAMkxB,YAA2B9vB,IAAlBkG,EAAQ6pB,OAAsB7pB,EAAQ6pB,MAC9CnxB,SAzCXwwB,GAAUE,EAAQ7wB,GA+ClB6wB,EAAOp0B,UAAU80B,gBAAkB,kBACxBj1B,KAAKy0B,eAKhBF,EAAOp0B,UAAU+0B,2BAA6B,kBACnCl1B,KAAK40B,0BAOhBL,EAAOp0B,UAAU+zB,cAAgB,kBACtBl0B,KAAKw0B,aAMhBD,EAAOp0B,UAAUg1B,eAAiB,uBAQlCZ,EAAOp0B,UAAU4O,SAAW,kBACjB/O,KAAK+L,QAKhBwoB,EAAOp0B,UAAUi1B,SAAW,kBACjBp1B,KAAK+0B,QAKhBR,EAAOp0B,UAAUoqB,kBAAoB,aAOrCgK,EAAOp0B,UAAUk1B,QAAU,WACvBr1B,KAAKqG,WASTkuB,EAAOp0B,UAAUm1B,gBAAkB,SAAUX,GACzC30B,KAAKy0B,cAAgBC,GAAkBC,GACvC30B,KAAKqG,WAMTkuB,EAAOp0B,UAAUo1B,SAAW,SAAUppB,GAClCnM,KAAK+L,OAASI,EACdnM,KAAKqG,WAEFkuB,EAtHPD,YA6HJ,SAAAI,GAA2Bc,UAClBA,EAGDl0B,MAAMC,QAAQi0B,GACP,SAAUrmB,UACNqmB,GAGgB,mBAApBA,EACAA,EAEJ,SAAUrmB,UACLqmB,IAXD,iDCrLXC,GAA0BxvB,eACtBlD,EAAgB,SAAUE,EAAGpC,UAC7BkC,EAAgBtD,OAAOyD,gBAAAA,CAChBC,UAAAA,cAA2B7B,OAAAA,SAAmB2B,EAAGpC,GAAKoC,EAAEE,UAAYtC,aAC7DoC,EAAGpC,WAAcuC,KAAKvC,EAAOpB,OAAOU,UAAUqC,eAAea,KAAKxC,EAAGuC,KAAIH,EAAEG,GAAKvC,EAAEuC,MAC3EH,EAAGpC,WAErB,SAAUoC,EAAGpC,GAEhB,SAAAyC,IAAgBtD,KAAKuD,YAAcN,EADnCF,EAAcE,EAAGpC,GAEjBoC,EAAE9C,UAAkB,OAANU,EAAapB,OAAO+D,OAAO3C,IAAMyC,EAAGnD,UAAYU,EAAEV,UAAAA,IAAemD,IAVzD2C,GA6BnByvB,GAMS,iBANTA,GAYO,eAZPA,GAkBS,iBAOhBC,GAAAA,SAA4CjyB,GAM5C,SAAAkyB,EAA0B71B,EAAMkS,OACxBpO,EAAQH,EAAOL,KAAKrD,KAAMD,IAASC,YAMvC6D,EAAMoO,MAAQA,EACPpO,SAbX4xB,GAAUG,EAAkBlyB,GAerBkyB,EAhBPD,IAoCAE,GAAAA,SAAuCnyB,GAKvC,SAAAoyB,EAAqB3qB,OACbtH,EAAQH,EAAOL,KAAKrD,KAAA,CACpB20B,aAAcxpB,EAAQwpB,aACtBvjB,WAAYjG,EAAQiG,WACpBjF,MAAOhB,EAAQgB,SACbnM,YAKN6D,EAAMkyB,kBACsB9wB,IAAxBkG,EAAQ6qB,YAA4B7qB,EAAQ6qB,YAAc,KAK9DnyB,EAAMoyB,kBAAoB,KAK1BpyB,EAAMqyB,qBAAuB,EAK7BryB,EAAMiwB,iBACyB,IAA3B3oB,EAAQgrB,eAAmBpL,QAAmC9lB,EAC3DpB,SAhCX4xB,GAAUK,EAAapyB,GAqCvBoyB,EAAY31B,UAAUg1B,eAAiB,kBAC5Bn1B,KAAK+1B,cAKhBD,EAAY31B,UAAUoqB,kBAAoB,kBAC/BvqB,KAAK8zB,iBAOhBgC,EAAY31B,UAAUi2B,sBAAwB,SAAUnmB,MAChDjQ,KAAK+1B,aAAAA,KACDM,EAAAA,EAAwBr2B,KAAK+1B,aAAc9lB,EAAY,GAC3DA,EAAajQ,KAAK+1B,aAAaM,UAE5BpmB,GASX6lB,EAAY31B,UAAU+oB,SAAW,SAAUtc,EAAQqD,EAAY0O,EAAYvN,OACnE0W,EAAmB9nB,KAAKk0B,mBAEvBpM,GACA1W,IAAAA,GACU0W,EAAkB1W,OAOzBpR,KAAKi2B,kBAAAA,IACDj2B,KAAKk2B,sBAAwBl2B,KAAKsG,eAAAA,GACvBtG,KAAKi2B,kBAAkB/B,gBAAiB9iB,IACnDpR,KAAKi2B,kBAAkBrM,iBAAmB3Z,GAAAA,GACnCjQ,KAAKi2B,kBAAkBppB,YAAaD,UACpC5M,KAAKi2B,kBAEhBj2B,KAAKi2B,kBAAkBx1B,UACvBT,KAAKi2B,kBAAoB,YAE7Bj2B,KAAKi2B,kBAAAA,IAAAA,GAAAA,QAAoCnO,EAAkB1W,EAAYxE,EAAQqD,EAAY0O,EAAAA,SAAsB/R,EAAQqD,EAAY0O,UAC1H3e,KAAKs2B,iBAAiB1pB,EAAQqD,EAAY0O,EAAYmJ,IAC/DpiB,KAAK1F,MAAOA,KAAK8zB,iBACnB9zB,KAAKk2B,qBAAuBl2B,KAAKsG,cAC1BtG,KAAKi2B,yBApBRnO,IACA1W,EAAa0W,GAEV9nB,KAAKs2B,iBAAiB1pB,EAAQqD,EAAY0O,EAAYvN,IA6BrE0kB,EAAY31B,UAAUm2B,iBAAmB,SAAU1pB,EAAQqD,EAAY0O,EAAYvN,eAQnF0kB,EAAY31B,UAAUo2B,kBAAoB,SAAU/xB,OAC5CyN,EAAsDzN,EAAMtE,cACxD+R,EAAMlD,oBAEN/O,KAAK80B,SAAU,EACf90B,KAAKuE,cAAAA,IAAkBoxB,GAAiBD,GAAqCzjB,kBAG7EjS,KAAK80B,SAAU,EACf90B,KAAKuE,cAAAA,IAAkBoxB,GAAiBD,GAAmCzjB,kBAG3EjS,KAAK80B,SAAU,EACf90B,KAAKuE,cAAAA,IAAkBoxB,GAAiBD,GAAqCzjB,MAMlF6jB,EAnIPD,aA2IG,SAAAW,GAAkCvkB,EAAOkd,GACMld,EAAMiX,WAAYiG,IAAMA,6GCtO1EsH,GAA0BxwB,eACtBlD,EAAgB,SAAUE,EAAGpC,UAC7BkC,EAAgBtD,OAAOyD,gBAAAA,CAChBC,UAAAA,cAA2B7B,OAAAA,SAAmB2B,EAAGpC,GAAKoC,EAAEE,UAAYtC,aAC7DoC,EAAGpC,WAAcuC,KAAKvC,EAAOpB,OAAOU,UAAUqC,eAAea,KAAKxC,EAAGuC,KAAIH,EAAEG,GAAKvC,EAAEuC,MAC3EH,EAAGpC,WAErB,SAAUoC,EAAGpC,GAEhB,SAAAyC,IAAgBtD,KAAKuD,YAAcN,EADnCF,EAAcE,EAAGpC,GAEjBoC,EAAE9C,UAAkB,OAANU,EAAapB,OAAO+D,OAAO3C,IAAMyC,EAAGnD,UAAYU,EAAEV,UAAAA,IAAemD,IAVzD2C,GAuC1BywB,GAAAA,SAAwChzB,GAUxC,SAAAizB,EAAsB/pB,EAAQqD,EAAY0O,EAAYwQ,EAAKyH,EAAaC,OAChEhzB,EAAQH,EAAOL,KAAKrD,KAAM4M,EAAQqD,EAAY0O,EAAAA,KAAgC3e,YAKlF6D,EAAMizB,KAAO3H,EAKbtrB,EAAMolB,OAAAA,IAAahQ,MACC,OAAhB2d,IACA/yB,EAAMolB,OAAO2N,YAAcA,GAM/B/yB,EAAMkzB,UAAY,KAKlBlzB,EAAMsI,MAAAA,GAKNtI,EAAMmzB,mBAAqBH,EACpBhzB,SAvCX4yB,GAAUE,EAAcjzB,GA6CxBizB,EAAax2B,UAAU+oB,SAAW,kBACvBlpB,KAAKipB,QAOhB0N,EAAax2B,UAAU82B,kBAAoB,WACvCj3B,KAAKmM,MAAAA,GACLnM,KAAKk3B,iBACLl3B,KAAKqG,WAOTswB,EAAax2B,UAAUg3B,iBAAmB,gBACdlyB,IAApBjF,KAAKiQ,aACLjQ,KAAKiQ,WAAAA,GAAuBjQ,KAAK4M,QAAU5M,KAAKipB,OAAOnR,QAE3D9X,KAAKmM,MAAAA,GACLnM,KAAKk3B,iBACLl3B,KAAKqG,WAQTswB,EAAax2B,UAAUgS,KAAO,WACtBnS,KAAKmM,OAAAA,IAA4BnM,KAAKmM,OAAAA,KACtCnM,KAAKmM,MAAAA,GACLnM,KAAKqG,UACLrG,KAAKg3B,mBAAmBh3B,KAAMA,KAAK82B,MACnC92B,KAAK+2B,UAAYK,GAAYp3B,KAAKipB,OAAQjpB,KAAKm3B,iBAAiBzxB,KAAK1F,MAAOA,KAAKi3B,kBAAkBvxB,KAAK1F,SAMhH22B,EAAax2B,UAAUk3B,SAAW,SAAUplB,GACxCjS,KAAKipB,OAAShX,GAOlB0kB,EAAax2B,UAAU+2B,eAAiB,WAChCl3B,KAAK+2B,YACL/2B,KAAK+2B,YACL/2B,KAAK+2B,UAAY,OAGlBJ,EAvGPD,aA+GG,SAAAU,GAAqBnlB,EAAOqlB,EAAaC,OACxCnN,EAAuCnY,KACvCmY,EAAI+E,KAAAA,GAAAA,KACAqI,EAAUpN,EAAIlR,SACdue,GAAc,SAIlBD,EACKE,MAAK,WACFD,GACAH,OAGHK,OAAM,SAAUre,GACbme,IAGmB,kBAAfne,EAAMtQ,MACY,wBAAlBsQ,EAAMxQ,QACNwuB,IAGAC,QAlBG,WACXE,GAAc,OAuBlBG,EAAAA,CAAAA,EACWxN,EAAAA,EAAqBkN,GAAAA,EACrBlN,EAAAA,EAAsBmN,WAE9B,WACHK,EAAatQ,QAAAA,+FC1KA,oBAKN,eAKA,eAKL,OClBH,SAAAuQ,GAAsBC,EAAKC,OAC1BC,EAAAA,GAEJv4B,OAAO2F,KAAK2yB,GAAQzQ,SAAQ,SAAU8K,GAChB,OAAd2F,EAAO3F,SAA6BntB,IAAd8yB,EAAO3F,IAC7B4F,EAAUl1B,KAAKsvB,EAAI,IAAM6F,mBAAmBF,EAAO3F,YAGvD8F,EAAKF,EAAUjkB,KAAK,YAIxB+jB,GAA4B,KAF5BA,EAAMA,EAAIlR,QAAQ,QAAS,KAEjBtiB,QAAQ,KAAcwzB,EAAM,IAAMA,EAAM,KACrCI,MCrBbC,GAA0BlyB,eACtBlD,EAAgB,SAAUE,EAAGpC,UAC7BkC,EAAgBtD,OAAOyD,gBAAAA,CAChBC,UAAAA,cAA2B7B,OAAAA,SAAmB2B,EAAGpC,GAAKoC,EAAEE,UAAYtC,aAC7DoC,EAAGpC,WAAcuC,KAAKvC,EAAOpB,OAAOU,UAAUqC,eAAea,KAAKxC,EAAGuC,KAAIH,EAAEG,GAAKvC,EAAEuC,MAC3EH,EAAGpC,WAErB,SAAUoC,EAAGpC,GAEhB,SAAAyC,IAAgBtD,KAAKuD,YAAcN,EADnCF,EAAcE,EAAGpC,GAEjBoC,EAAE9C,UAAkB,OAANU,EAAapB,OAAO+D,OAAO3C,IAAMyC,EAAGnD,UAAYU,EAAEV,UAAAA,IAAemD,IAVzD2C,GA6B1BmyB,GAAAA,CAA6B,IAAK,KAgClCC,GAAAA,SAAoC30B,GAKpC,SAAA40B,EAAkBhoB,OACVzM,EAAQ7D,KACRmL,EAAUmF,GAAcA,UAC5BzM,EAAQH,EAAOL,KAAKrD,KAAA,CAChB20B,aAAcxpB,EAAQwpB,aACtBwB,eAAgBhrB,EAAQgrB,eACxB/kB,WAAYjG,EAAQiG,WACpB4kB,YAAa7qB,EAAQ6qB,eACnBh2B,MAKAu4B,kBACsBtzB,IAAxBkG,EAAQyrB,YAA4BzrB,EAAQyrB,YAAc,KAK9D/yB,EAAM20B,KAAOrtB,EAAQstB,IAKrB50B,EAAMmzB,wBAC4B/xB,IAA9BkG,EAAQ0rB,kBACF1rB,EAAQ0rB,kBAAAA,GAAAA,yBAMlBhzB,EAAM60B,QAAUvtB,EAAQ4sB,QAAAA,GAKxBl0B,EAAM80B,MAAO,EACb90B,EAAM+0B,aAKN/0B,EAAMg1B,YAA6E1tB,EAAQ2tB,WAK3Fj1B,EAAMk1B,YAA2B9zB,IAAlBkG,EAAQ6tB,OAAsB7tB,EAAQ6tB,MAKrDn1B,EAAMolB,OAAS,KAKfplB,EAAMo1B,WAAAA,CAAc,EAAG,GAKvBp1B,EAAMq1B,kBAAoB,EAK1Br1B,EAAMs1B,YAA2Bl0B,IAAlBkG,EAAQiuB,MAAsBjuB,EAAQiuB,MAAQ,IACtDv1B,SAzEXs0B,GAAUG,EAAU50B,GAyFpB40B,EAASn4B,UAAUk5B,kBAAoB,SAAU5nB,EAAYxB,EAAYmB,EAAY2mB,WAC/D9yB,IAAdjF,KAAKw4B,UAGLc,EAAAA,GAA8BloB,GAC9BmoB,EAAsBv5B,KAAKk0B,gBAC3BqF,GAAuBA,IAAwBD,IAC/CrpB,EAAAA,GAAuCspB,EAAqBD,EAAe7nB,EAAYxB,GACvFwB,EAAAA,GAAuBA,EAAY6nB,EAAeC,QAElD3sB,EAAAA,GAA2B6E,EAAYxB,EAAY,EAAGmoB,IACtDoB,EAAAA,CACAC,QAAW,MACXC,QAAA5O,GACA6O,QAAW,iBACXC,OAAU,YACVC,aAAe,EACfC,aAAgB95B,KAAK04B,QAAQ,UAE1Bc,EAAYx5B,KAAK04B,QAASX,OAC7BruB,EAAIH,KAAK8c,OAAO5U,EAAW,GAAK7E,EAAO,IAAMqD,GAC7CtG,EAAIJ,KAAK8c,OAAOzZ,EAAO,GAAK6E,EAAW,IAAMxB,UACjDupB,EAAWx5B,KAAK24B,KAAO,IAAM,KAAOjvB,EACpC8vB,EAAWx5B,KAAK24B,KAAO,IAAM,KAAOhvB,EAC7B3J,KAAK+5B,eAAentB,EAAQwrB,GAA2B,EAAGmB,GAAuBD,EAAeE,KAgB3GlB,EAASn4B,UAAU65B,aAAe,SAAU/pB,EAAY8nB,WAClC9yB,IAAdjF,KAAKw4B,UAGLgB,EAAAA,CACAC,QAAW,MACXC,QAAA5O,GACA6O,QAAW,mBACXC,OAAU,qBAEC30B,IAAX8yB,QAA4C9yB,IAApB8yB,EAAO,MAAa9yB,KACxCg1B,EAASj6B,KAAK04B,QAAQwB,aACL54B,MAAMC,QAAQ04B,IAA6B,IAAlBA,EAAOh5B,eAIrDu4B,EAAW,MAAWS,UAEPh1B,IAAfgL,EAAehL,KACXk1B,EAAMn6B,KAAKk0B,gBACTl0B,KAAKk0B,gBAAgBjS,mBACrB,EAENuX,EAAW,MAAYvpB,EAAakqB,EADpB,eAGbX,EAAYzB,MACwB/3B,KAAKw4B,KAAOgB,KAQ3DlB,EAASn4B,UAAUi6B,UAAY,kBACpBp6B,KAAK04B,SAShBJ,EAASn4B,UAAUm2B,iBAAmB,SAAU1pB,EAAQqD,EAAY0O,EAAYvN,WAC1DnM,IAAdjF,KAAKw4B,YACE,KAEXvoB,EAAajQ,KAAKo2B,sBAAsBnmB,GACtB,GAAd0O,GAAqB3e,KAAK+4B,aAA+B9zB,IAArBjF,KAAK64B,cACzCla,EAAa,OAEbgL,EAAkB1Z,EAAa0O,EAC/BjI,EAAAA,GAAmB9J,GAGnBytB,EAAAA,GAA+B3jB,EAAQiT,EAAiB,EAAA,CAF5CpgB,KAAK6jB,KAAAA,GAAcxgB,GAAU+c,GAC5BpgB,KAAK6jB,KAAAA,GAAexgB,GAAU+c,KAO3C2Q,EAAAA,GAAkC5jB,EAAQiT,EAAiB,EAAA,CAF5CpgB,KAAK6jB,KAAMptB,KAAKm5B,OAAAA,GAAkBvsB,GAAW+c,GAC5CpgB,KAAK6jB,KAAMptB,KAAKm5B,OAAAA,GAAmBvsB,GAAW+c,KAK9D1X,EAAQjS,KAAKipB,UACbhX,GACAjS,KAAKk5B,mBAAqBl5B,KAAKsG,eAC/B2L,EAAM2X,iBAAmB3Z,GACzBgC,EAAM6X,iBAAmBnL,GAAAA,GACV1M,EAAMpF,YAAawtB,UAC3BpoB,MAEP8lB,EAAAA,CACA0B,QAAW,MACXC,QAAA5O,GACA6O,QAAW,SACXC,OAAU,YACVC,aAAe,KAEZ9B,EAAQ/3B,KAAK04B,SACpB14B,KAAKi5B,WAAW,GAAK1vB,KAAKgD,MAAAA,GAAe+tB,GAAiB3Q,GAC1D3pB,KAAKi5B,WAAW,GAAK1vB,KAAKgD,MAAAA,GAAgB+tB,GAAiB3Q,OACvD8O,EAAMz4B,KAAK+5B,eAAeO,EAAet6B,KAAKi5B,WAAYta,EAAYvN,EAAY2mB,UACtF/3B,KAAKipB,OAAAA,IAAAA,GAAAA,QAA0BqR,EAAerqB,EAAY0O,EAAY8Z,EAAKz4B,KAAKu4B,aAAcv4B,KAAKg3B,oBACnGh3B,KAAKk5B,kBAAoBl5B,KAAKsG,cAC9BtG,KAAKipB,OAAO/kB,iBAAAA,EAAmClE,KAAKu2B,kBAAkB7wB,KAAK1F,OACpEA,KAAKipB,QAOhBqP,EAASn4B,UAAUo6B,qBAAuB,kBAC/Bv6B,KAAKg3B,oBAWhBsB,EAASn4B,UAAU45B,eAAiB,SAAUntB,EAAQgK,EAAM+H,EAAYvN,EAAY2mB,cAC3D9yB,IAAdjF,KAAKw4B,KAAoB,GAChCT,EAAO/3B,KAAK24B,KAAO,MAAQ,OAASvnB,EAAW2Q,UACzC,WAAY/hB,KAAK04B,UACnBX,EAAO,OAAY,IAEL,GAAdpZ,SACQ3e,KAAK64B,yBAED2B,EAAO,GAAK7b,EAAa,GAAO,EAChC,mBAAoBoZ,EACpBA,EAAO,gBAAqB,QAAUyC,EAGtCzC,EAAO,eAAoB,OAASyC,gBAIxCzC,EAAO,eAAoB,GAAKpZ,wBAIhCoZ,EAAO,IAAS,GAAKpZ,oBAGd,EAAO,GAI1BoZ,EAAO,MAAWnhB,EAAK,GACvBmhB,EAAO,OAAYnhB,EAAK,OAEpB6jB,EADApZ,EAAkBjQ,EAAW+Q,4BAG7BsY,EADAz6B,KAAK24B,MAAwC,MAAhCtX,EAAgBqZ,OAAO,EAAG,GACvCD,CAAQ7tB,EAAO,GAAIA,EAAO,GAAIA,EAAO,GAAIA,EAAO,IAGzCA,EAEXmrB,EAAO,KAAU0C,EAAK1mB,KAAK,QACgB/T,KAAKw4B,KAAOT,IAO3DO,EAASn4B,UAAUw6B,OAAS,kBACjB36B,KAAKw4B,MAOhBF,EAASn4B,UAAUy6B,qBAAuB,SAAU/D,GAChD72B,KAAKipB,OAAS,KACdjpB,KAAKg3B,mBAAqBH,EAC1B72B,KAAKqG,WAOTiyB,EAASn4B,UAAU06B,OAAS,SAAUpC,GAC9BA,GAAOz4B,KAAKw4B,OACZx4B,KAAKw4B,KAAOC,EACZz4B,KAAKipB,OAAS,KACdjpB,KAAKqG,YAQbiyB,EAASn4B,UAAU26B,aAAe,SAAU/C,KACjC/3B,KAAK04B,QAASX,GACrB/3B,KAAK44B,aACL54B,KAAKipB,OAAS,KACdjpB,KAAKqG,WAKTiyB,EAASn4B,UAAUy4B,WAAa,eACxBmC,EAAU/6B,KAAK04B,QAAQ,SAAA5N,GAC3B9qB,KAAK24B,KC9WN,SAAyBnJ,EAAIE,WAC5BsL,GAAM,GAAKxL,GAAIzmB,MAAM,KACrBkyB,GAAM,GAAKvL,GAAI3mB,MAAM,KAChB7H,EAAI,EAAGA,EAAIqI,KAAKD,IAAI0xB,EAAG/5B,OAAQg6B,EAAGh6B,QAASC,IAAAA,KAC5Cg6B,EAAKC,SAASH,EAAG95B,IAAM,IAAK,IAC5Bk6B,EAAKD,SAASF,EAAG/5B,IAAM,IAAK,OAC5Bg6B,EAAKE,SACE,KAEPA,EAAKF,SACG,SAGT,EDiWEvC,CAAuBoC,EAAS,QAAU,GAE5CzC,EAvUPD,2EE7CAgD,GAAgB,oDAOhBC,GAAkB,4BAOf,SAAAC,GAAkBC,SACA,iBAAVA,EACAA,EAgKR,SAAkBA,OACjB1wB,EAAI0wB,EAAM,GACV1wB,IAAU,EAAJA,KACNA,EAAKA,EAAI,GAAO,OAEhB2wB,EAAID,EAAM,GACVC,IAAU,EAAJA,KACNA,EAAKA,EAAI,GAAO,OAEhB56B,EAAI26B,EAAM,GACV36B,IAAU,EAAJA,KACNA,EAAKA,EAAI,GAAO,OAEhBD,OAAiBqE,IAAbu2B,EAAM,GAAmB,EAAIA,EAAM,SACpC,QAAU1wB,EAAI,IAAM2wB,EAAI,IAAM56B,EAAI,IAAMD,EAAI,IA3KxC86B,CAASF,OAqChBG,GAIAC,GAJAD,GAAAA,GAIAC,GAAY,EAyGb,SAAAC,GAAmBL,UACtBA,EAAM,GAAApyB,GAAYoyB,EAAM,GAAK,GAAO,EAAG,EAAG,KAC1CA,EAAM,GAAApyB,GAAYoyB,EAAM,GAAK,GAAO,EAAG,EAAG,KAC1CA,EAAM,GAAApyB,GAAYoyB,EAAM,GAAK,GAAO,EAAG,EAAG,KAC1CA,EAAM,GAAApyB,GAAWoyB,EAAM,GAAI,EAAG,GACvBA,EC/FX,SAAAM,GAAgB3M,EAAKyH,EAAa4E,UAEvB5E,EAAc,IAAMzH,EAAM,KADfqM,EAAAA,GAAiBA,GAAS,YASrCO,GAAAA,IAhGPC,WACA,SAAAC,IAKIj8B,KAAKk8B,OAAAA,GAKLl8B,KAAKm8B,WAAa,EAKlBn8B,KAAKo8B,cAAgB,UAKzBH,EAAe97B,UAAUk8B,MAAQ,WAC7Br8B,KAAKk8B,OAAAA,GACLl8B,KAAKm8B,WAAa,GAKtBF,EAAe97B,UAAUm8B,eAAiB,kBAC/Bt8B,KAAKm8B,WAAan8B,KAAKo8B,eAKlCH,EAAe97B,UAAUo8B,OAAS,cAC1Bv8B,KAAKs8B,iBAAAA,KACDp7B,EAAI,UACCqB,KAAOvC,KAAKk8B,OAAAA,KACbM,EAAYx8B,KAAKk8B,OAAO35B,GACV,IAAP,EAANrB,MAAmBs7B,EAAUt3B,uBACvBlF,KAAKk8B,OAAO35B,KACjBvC,KAAKm8B,eAWvBF,EAAe97B,UAAUR,IAAM,SAAUwvB,EAAKyH,EAAa4E,OACnDj5B,EAAMu5B,GAAO3M,EAAKyH,EAAa4E,UAC5Bj5B,KAAOvC,KAAKk8B,OAASl8B,KAAKk8B,OAAO35B,GAAO,MAQnD05B,EAAe97B,UAAUkI,IAAM,SAAU8mB,EAAKyH,EAAa4E,EAAOgB,OAC1Dj6B,EAAMu5B,GAAO3M,EAAKyH,EAAa4E,GACnCx7B,KAAKk8B,OAAO35B,GAAOi6B,IACjBx8B,KAAKm8B,YASXF,EAAe97B,UAAUub,QAAU,SAAU+gB,GACzCz8B,KAAKo8B,cAAgBK,EACrBz8B,KAAKu8B,UAEFN,EA9EPD,ICRAU,GAA0Bz2B,eACtBlD,EAAgB,SAAUE,EAAGpC,UAC7BkC,EAAgBtD,OAAOyD,gBAAAA,CAChBC,UAAAA,cAA2B7B,OAAAA,SAAmB2B,EAAGpC,GAAKoC,EAAEE,UAAYtC,aAC7DoC,EAAGpC,WAAcuC,KAAKvC,EAAOpB,OAAOU,UAAUqC,eAAea,KAAKxC,EAAGuC,KAAIH,EAAEG,GAAKvC,EAAEuC,MAC3EH,EAAGpC,WAErB,SAAUoC,EAAGpC,GAEhB,SAAAyC,IAAgBtD,KAAKuD,YAAcN,EADnCF,EAAcE,EAAGpC,GAEjBoC,EAAE9C,UAAkB,OAANU,EAAapB,OAAO+D,OAAO3C,IAAMyC,EAAGnD,UAAYU,EAAEV,UAAAA,IAAemD,IAVzD2C,GAoC1B02B,GAAAA,SAAuCj5B,GAKvC,SAAAk5B,EAAqBpuB,OACb3K,EAAQH,EAAOL,KAAKrD,OAASA,YAKjC6D,EAAMg5B,KAAOruB,EACN3K,SAXX64B,GAAUE,EAAal5B,GAkBvBk5B,EAAYz8B,UAAU28B,oBAAsB,SAAU/8B,EAAMoP,QAO5DytB,EAAYz8B,UAAU48B,oBAAsB,SAAU5tB,OAC9Ca,EAAYb,EAAWa,UACvBkP,EAA6B/P,EAAW+P,2BACxCgB,EAA6B/Q,EAAW+Q,8BAC3BhB,EAA4B/P,EAAWyH,KAAK,GAAK,EAAGzH,EAAWyH,KAAK,GAAK,EAAG,EAAI5G,EAAUC,YAAa,EAAID,EAAUC,YAAaD,EAAU2G,UAAW3G,EAAU0G,OAAO,IAAK1G,EAAU0G,OAAO,OACnMwJ,EAA4BhB,IAiB5C0d,EAAYz8B,UAAUqR,2BAA6B,SAAUC,EAAYtC,EAAYuC,EAAcsrB,EAAc1rB,EAAU2rB,EAASC,EAAaC,OACzIC,EACAptB,EAAYb,EAAWa,UAQ3B,SAAAwB,EAAoCnF,EAASgxB,EAASjxB,EAAOkxB,UAClDhsB,EAASjO,KAAK45B,EAASI,EAAShxB,EAAUD,EAAQ,KAAMkxB,OAE/DlsB,EAAapB,EAAUoB,WACvBmsB,EAAAA,GAA6B9rB,EAAWsO,QAAS3O,GACjDosB,EAAAA,CAAAA,CAAY,EAAG,OACfpsB,EAAW0Q,YAAckb,EAAAA,KAErBhX,EAAAA,GADmB5U,EAAWvE,aAElC2wB,EAAQ16B,KAAAA,EAAOkjB,EAAY,GAAA,CAAKA,EAAY,YAE5CyX,EAActuB,EAAWK,iBACzBkuB,EAAYD,EAAYx8B,OACxB0Q,EAAAA,GACAgsB,EAAAA,GACKz8B,EAAI,EAAGA,EAAIs8B,EAAQv8B,OAAQC,YACvBgxB,EAAIwL,EAAY,EAAGxL,GAAK,IAAKA,EAAAA,KAC9BziB,EAAaguB,EAAYvL,GACzB9lB,EAAQqD,EAAWrD,SACnBA,EAAM0D,eAAAA,EAAAA,OACCL,EAAYO,IACnBktB,EAAY75B,KAAK85B,EAAU/wB,GAAAA,KACvBgD,EAAgBhD,EAAMiD,cACtB/M,EAAS8J,EAAM0C,eACfM,GAAiB9M,EAAAA,KACb2R,EAAc3R,EAAO8yB,WACnBmI,EACA9rB,EACFmsB,EAAapsB,EAA2B9L,KAAK,KAAM+J,EAAWpD,SAClEsxB,EAAS,GAAK1pB,EAAY,GAAKupB,EAAQt8B,GAAG,GAC1Cy8B,EAAS,GAAK1pB,EAAY,GAAKupB,EAAQt8B,GAAG,GAC1Ck8B,EAAShuB,EAAcoC,2BAA2BmsB,EAAUxuB,EAAYuC,EAAcksB,EAAYjsB,MAElGyrB,SACOA,MAKA,IAAnBzrB,EAAQ1Q,YAGR48B,EAAQ,EAAIlsB,EAAQ1Q,cACxB0Q,EAAQ2V,SAAQ,SAAU+K,EAAGnxB,UAAamxB,EAAEyL,YAAc58B,EAAI28B,KAC9DlsB,EAAQosB,MAAK,SAAUn9B,EAAGC,UAAYD,EAAEk9B,WAAaj9B,EAAEi9B,cACvDnsB,EAAQjC,MAAK,SAAU2iB,UACX+K,EAAS/K,EAAE/gB,SAAS+gB,EAAEgL,QAAShL,EAAEjmB,MAAOimB,EAAEiL,aAE/CF,IAgBXR,EAAYz8B,UAAU69B,oBAAsB,SAAU9uB,EAAOC,EAAYuC,EAAcJ,EAAU4rB,eAgBjGN,EAAYz8B,UAAU89B,uBAAyB,SAAUxsB,EAAYtC,EAAYuC,EAAcsrB,EAAcE,EAAaD,eAEhGh4B,IADLjF,KAAKwR,2BAA2BC,EAAYtC,EAAYuC,EAAcsrB,EAAAA,EAAoBh9B,KAAMk9B,EAAaD,IAMlIL,EAAYz8B,UAAU+9B,OAAS,kBACpBl+B,KAAK68B,MAOhBD,EAAYz8B,UAAUoP,YAAc,SAAUJ,QAO9CytB,EAAYz8B,UAAUg+B,wBAA0B,SAAUhvB,MACnCmtB,kBACfntB,EAAWivB,oBAAoBt7B,KAAKu7B,KAGrCzB,EArKPD,IA2KJ,SAAA0B,GAAyB7vB,EAAKW,MACXotB,qDChNf+B,GAA0Br4B,eACtBlD,EAAgB,SAAUE,EAAGpC,UAC7BkC,EAAgBtD,OAAOyD,gBAAAA,CAChBC,UAAAA,cAA2B7B,OAAAA,SAAmB2B,EAAGpC,GAAKoC,EAAEE,UAAYtC,aAC7DoC,EAAGpC,WAAcuC,KAAKvC,EAAOpB,OAAOU,UAAUqC,eAAea,KAAKxC,EAAGuC,KAAIH,EAAEG,GAAKvC,EAAEuC,MAC3EH,EAAGpC,WAErB,SAAUoC,EAAGpC,GAEhB,SAAAyC,IAAgBtD,KAAKuD,YAAcN,EADnCF,EAAcE,EAAGpC,GAEjBoC,EAAE9C,UAAkB,OAANU,EAAapB,OAAO+D,OAAO3C,IAAMyC,EAAGnD,UAAYU,EAAEV,UAAAA,IAAemD,IAVzD2C,GA+B1Bs4B,GAAAA,SAAgD76B,GAKhD,SAAA86B,EAA8BhwB,OACtB3K,EAAQH,EAAOL,KAAKrD,KAAMwO,IAAQxO,KAItC6D,EAAM46B,uBAAAA,EAAAA,GAAAA,EAA8EjwB,EAAIkwB,WAAWh5B,KAAK8I,IAKxG3K,EAAM86B,SAAW9kB,SAASC,cAAc,WACpCoB,EAAQrX,EAAM86B,SAASzjB,MAC3BA,EAAMoD,SAAW,WACjBpD,EAAMrD,MAAQ,OACdqD,EAAMpD,OAAS,OACfoD,EAAM3P,OAAS,IACf1H,EAAM86B,SAAS7yB,UAAAA,gCACX+R,EAAYrP,EAAIowB,qBACpB/gB,EAAUghB,aAAah7B,EAAM86B,SAAU9gB,EAAUihB,YAAc,MAK/Dj7B,EAAMk7B,UAAAA,GAKNl7B,EAAMm7B,kBAAmB,EAClBn7B,SAjCXy6B,GAAUE,EAAsB96B,GAuChC86B,EAAqBr+B,UAAU28B,oBAAsB,SAAU/8B,EAAMoP,OAC7DX,EAAMxO,KAAKk+B,YACX1vB,EAAItJ,YAAYnF,GAAAA,KACZ2f,EAAAA,IAAAA,GAAAA,QAA0B3f,OAAMkF,EAAWkK,GAC/CX,EAAIjK,cAAcmb,KAG1B8e,EAAqBr+B,UAAUO,gBAAkB,aAC/BV,KAAKy+B,wBACnBz+B,KAAK2+B,SAASvkB,WAAWI,YAAYxa,KAAK2+B,UAC1Cj7B,EAAOvD,UAAUO,gBAAgB2C,KAAKrD,OAM1Cw+B,EAAqBr+B,UAAUoP,YAAc,SAAUJ,MAC9CA,GAOLnP,KAAK+8B,oBAAoB5tB,GACzBnP,KAAK88B,oBAAAA,GAAgD3tB,OACjDK,EAAmBL,EAAWK,iBAAiBuuB,MAAK,SAAUn9B,EAAGC,UAC1DD,EAAE2K,OAAS1K,EAAE0K,UAEpByE,EAAYb,EAAWa,UAC3BhQ,KAAK++B,UAAU99B,OAAS,UAIpBg+B,EAAAA,GACAC,EAAkB,KACbh+B,EAAI,EAAGkB,EAAKoN,EAAiBvO,OAAQC,EAAIkB,IAAMlB,EAAAA,KAChDuO,EAAaD,EAAiBtO,MAClCiO,EAAWga,WAAajoB,WACZuO,EAAYO,KACnBP,EAAWhD,aAAAA,IACRgD,EAAWhD,aAAAA,SAGfL,EAAQqD,EAAWrD,MACnB+yB,EAAU/yB,EAAMmC,OAAOY,EAAY+vB,GAClCC,IAGDA,IAAYD,IACZl/B,KAAK++B,UAAUj8B,KAAKq8B,GACpBD,EAAkBC,GAElB,iBAAkB/yB,GAClB6yB,EAAgBn8B,KAAKsJ,SAGpBlL,EAAI+9B,EAAgBh+B,OAAS,EAAGC,GAAK,IAAKA,EAC/C+9B,EAAgB/9B,GAAGk+B,gBAAgBjwB,IjC3CxC,SAAyBoL,EAAM8kB,WAC9BC,EAAc/kB,EAAKglB,WACdr+B,EAAI,KAAWA,EAAAA,KAChBs+B,EAAWF,EAAYp+B,GACvBu+B,EAAWJ,EAASn+B,OAEnBs+B,IAAaC,QAIdD,IAAaC,IAIZD,EAKAC,EAMLllB,EAAKskB,aAAaY,EAAUD,IALxBjlB,EAAKC,YAAYglB,KACft+B,GANFqZ,EAAKgE,YAAYkhB,MiC8BLz/B,KAAK2+B,SAAU3+B,KAAK++B,WACpC/+B,KAAK88B,oBAAAA,GAAiD3tB,GACjDnP,KAAKg/B,mBACNh/B,KAAK2+B,SAASzjB,MAAMwkB,QAAU,GAC9B1/B,KAAKg/B,kBAAmB,GAE5Bh/B,KAAKm+B,wBAAwBhvB,QAhDrBnP,KAAKg/B,mBACLh/B,KAAK2+B,SAASzjB,MAAMwkB,QAAU,OAC9B1/B,KAAKg/B,kBAAmB,IA6DpCR,EAAqBr+B,UAAU69B,oBAAsB,SAAU9uB,EAAOC,EAAYuC,EAAcJ,EAAU4rB,WAClGltB,EAAYb,EAAWa,UACvBytB,EAActuB,EAAWK,iBAEpBtO,EADOu8B,EAAYx8B,OACH,EAAGC,GAAK,IAAKA,EAAAA,KAC9BuO,EAAaguB,EAAYv8B,GACzBkL,EAAQqD,EAAWrD,SACnBA,EAAM0D,eAAAA,EAAAA,OACCL,EAAYO,IACnBktB,EAAY9wB,GAAAA,KAERhL,EADgBgL,EAAMiD,cACDuC,eAAe1C,EAAOC,EAAYuC,MACvDtQ,EAAAA,KACIg8B,EAAS9rB,EAASlF,EAAOhL,MACzBg8B,SACOA,MAOpBoB,EA/IPD,wECnBK,SAMG,SClBRoB,GAA0B15B,eACtBlD,EAAgB,SAAUE,EAAGpC,UAC7BkC,EAAgBtD,OAAOyD,gBAAAA,CAChBC,UAAAA,cAA2B7B,OAAAA,SAAmB2B,EAAGpC,GAAKoC,EAAEE,UAAYtC,aAC7DoC,EAAGpC,WAAcuC,KAAKvC,EAAOpB,OAAOU,UAAUqC,eAAea,KAAKxC,EAAGuC,KAAIH,EAAEG,GAAKvC,EAAEuC,MAC3EH,EAAGpC,WAErB,SAAUoC,EAAGpC,GAEhB,SAAAyC,IAAgBtD,KAAKuD,YAAcN,EADnCF,EAAcE,EAAGpC,GAEjBoC,EAAE9C,UAAkB,OAANU,EAAapB,OAAO+D,OAAO3C,IAAMyC,EAAGnD,UAAYU,EAAEV,UAAAA,IAAemD,IAVzD2C,GAwB1B25B,GACQ,SAORC,GAAAA,SAA2Cn8B,GAO3C,SAAAo8B,EAAyB//B,EAAMggC,EAAaC,OACpCn8B,EAAQH,EAAOL,KAAKrD,KAAMD,IAASC,YAMvC6D,EAAMs7B,QAAUY,EAMhBl8B,EAAMwB,MAAQ26B,EACPn8B,SApBX87B,GAAUG,EAAiBp8B,GAsBpBo8B,EAvBPD,IA4CAI,GAAAA,SAAsCv8B,GAMtC,SAAAw8B,EAAoB/yB,EAAWmD,OACvBzM,EAAQH,EAAOL,KAAKrD,OAASA,KAC7BmL,EAAUmF,GAAAA,MAKdzM,EAAMs8B,UAAYh1B,EAAQi1B,OAK1Bv8B,EAAMw8B,OAASlzB,GAAYA,GACvBtJ,EAAMs8B,gBACGj/B,EAAI,EAAGkB,EAAKyB,EAAMw8B,OAAOp/B,OAAQC,EAAIkB,IAAMlB,EAChD2C,EAAMy8B,cAAcz8B,EAAMw8B,OAAOn/B,GAAIA,UAG7C2C,EAAM08B,gBACC18B,SAxBX87B,GAAUO,EAAYx8B,GA8BtBw8B,EAAW//B,UAAUk8B,MAAQ,gBAClBr8B,KAAKwgC,YAAc,GACtBxgC,KAAKygC,OAUbP,EAAW//B,UAAUugC,OAAS,SAAU3/B,WAC3BG,EAAI,EAAGkB,EAAKrB,EAAIE,OAAQC,EAAIkB,IAAMlB,EACvClB,KAAK8C,KAAK/B,EAAIG,WAEXlB,MASXkgC,EAAW//B,UAAUmnB,QAAU,SAAUzT,WACjCjF,EAAQ5O,KAAKqgC,OACRn/B,EAAI,EAAGkB,EAAKwM,EAAM3N,OAAQC,EAAIkB,IAAMlB,EACzC2S,EAAEjF,EAAM1N,GAAIA,EAAG0N,IAWvBsxB,EAAW//B,UAAUwgC,SAAW,kBACrB3gC,KAAKqgC,QAQhBH,EAAW//B,UAAUygC,KAAO,SAAUv7B,UAC3BrF,KAAKqgC,OAAOh7B,IAQvB66B,EAAW//B,UAAUqgC,UAAY,kBACtBxgC,KAAKL,IAAIigC,KAQpBM,EAAW//B,UAAU0gC,SAAW,SAAUx7B,EAAOy7B,GACzC9gC,KAAKmgC,SACLngC,KAAKsgC,cAAcQ,GAEvB9gC,KAAKqgC,OAAO/6B,OAAOD,EAAO,EAAGy7B,GAC7B9gC,KAAKugC,gBACLvgC,KAAKuE,cAAAA,IAAkBs7B,GAAAA,GAAyCiB,EAAMz7B,KAQ1E66B,EAAW//B,UAAUsgC,IAAM,kBAChBzgC,KAAK+gC,SAAS/gC,KAAKwgC,YAAc,IAQ5CN,EAAW//B,UAAU2C,KAAO,SAAUg+B,GAC9B9gC,KAAKmgC,SACLngC,KAAKsgC,cAAcQ,OAEnBvhC,EAAIS,KAAKwgC,mBACbxgC,KAAK6gC,SAASthC,EAAGuhC,GACV9gC,KAAKwgC,aAQhBN,EAAW//B,UAAU6gC,OAAS,SAAUF,WAChC//B,EAAMf,KAAKqgC,OACNn/B,EAAI,EAAGkB,EAAKrB,EAAIE,OAAQC,EAAIkB,IAAMlB,KACnCH,EAAIG,KAAO4/B,SACJ9gC,KAAK+gC,SAAS7/B,IAYjCg/B,EAAW//B,UAAU4gC,SAAW,SAAU17B,OAClC47B,EAAOjhC,KAAKqgC,OAAOh7B,UACvBrF,KAAKqgC,OAAO/6B,OAAOD,EAAO,GAC1BrF,KAAKugC,gBACLvgC,KAAKuE,cAAAA,IAAkBs7B,GAAAA,GAA4CoB,EAAM57B,IAClE47B,GAQXf,EAAW//B,UAAU+gC,MAAQ,SAAU77B,EAAOy7B,OACtCvhC,EAAIS,KAAKwgC,eACTn7B,EAAQ9F,EAAAA,CACJS,KAAKmgC,SACLngC,KAAKsgC,cAAcQ,EAAMz7B,OAEzB47B,EAAOjhC,KAAKqgC,OAAOh7B,GACvBrF,KAAKqgC,OAAOh7B,GAASy7B,EACrB9gC,KAAKuE,cAAAA,IAAkBs7B,GAAAA,GAA4CoB,EAAM57B,IACzErF,KAAKuE,cAAAA,IAAkBs7B,GAAAA,GAAyCiB,EAAMz7B,iBAG7D6sB,EAAI3yB,EAAG2yB,EAAI7sB,IAAS6sB,EACzBlyB,KAAK6gC,SAAS3O,OAAGjtB,GAErBjF,KAAK6gC,SAASx7B,EAAOy7B,KAM7BZ,EAAW//B,UAAUogC,cAAgB,WACjCvgC,KAAKqI,IAAIu3B,GAAiB5/B,KAAKqgC,OAAOp/B,SAO1Ci/B,EAAW//B,UAAUmgC,cAAgB,SAAUQ,EAAMK,WACxCjgC,EAAI,EAAGkB,EAAKpC,KAAKqgC,OAAOp/B,OAAQC,EAAIkB,IAAMlB,KAC3ClB,KAAKqgC,OAAOn/B,KAAO4/B,GAAQ5/B,IAAMigC,uBACR,KAI9BjB,EAvMPD,8DC5EAmB,GAA0Bn7B,eACtBlD,EAAgB,SAAUE,EAAGpC,UAC7BkC,EAAgBtD,OAAOyD,gBAAAA,CAChBC,UAAAA,cAA2B7B,OAAAA,SAAmB2B,EAAGpC,GAAKoC,EAAEE,UAAYtC,aAC7DoC,EAAGpC,WAAcuC,KAAKvC,EAAOpB,OAAOU,UAAUqC,eAAea,KAAKxC,EAAGuC,KAAIH,EAAEG,GAAKvC,EAAEuC,MAC3EH,EAAGpC,WAErB,SAAUoC,EAAGpC,GAEhB,SAAAyC,IAAgBtD,KAAKuD,YAAcN,EADnCF,EAAcE,EAAGpC,GAEjBoC,EAAE9C,UAAkB,OAANU,EAAapB,OAAO+D,OAAO3C,IAAMyC,EAAGnD,UAAYU,EAAEV,UAAAA,IAAemD,IAVzD2C,GAwD1Bo7B,GACQ,SAURC,GAAAA,SAAsC59B,GAKtC,SAAA69B,EAAoBjxB,OACZzM,EAAQ7D,KACRmL,EAAUmF,GAAAA,GACVpC,EAAAA,EAAAA,GAAiD/C,UAC9C+C,EAAY+rB,WACfA,EAAS9uB,EAAQ8uB,cACrBp2B,EAAQH,EAAOL,KAAKrD,KAAMkO,IAAgBlO,MAKpCwhC,oBAAAA,GAKN39B,EAAM49B,cAAAA,GACN59B,EAAMK,iBAAAA,EAAAA,mBAAoCm9B,IAAkBx9B,EAAM69B,sBAC9DzH,EACI34B,MAAMC,QAAQ04B,GACdA,EAAAA,IAAAA,GAAAA,QAAwBA,EAAOla,QAAAA,CAAWqgB,QAAQ,OAGK,mBAAtBnG,EAAQ0G,SAA0B,IAIvE1G,EAAAA,IAAAA,GAAAA,aAAwBh1B,EAAAA,CAAam7B,QAAQ,IAEjDv8B,EAAM89B,UAAU1H,GACTp2B,SAlCXu9B,GAAUG,EAAY79B,GAuCtB69B,EAAWphC,UAAUyhC,mBAAqB,WACtC5hC,KAAKqG,WAKTk7B,EAAWphC,UAAUuhC,qBAAuB,WACxC1hC,KAAKwhC,oBAAoBla,QAAAA,GACzBtnB,KAAKwhC,oBAAoBvgC,OAAS,MAC9Bg5B,EAASj6B,KAAK6hC,oBAETC,KADT9hC,KAAKwhC,oBAAoB1+B,KAAAA,EAAYm3B,EAAAA,GAAiCj6B,KAAK+hC,iBAAkB/hC,MAAAuF,EAAc00B,EAAAA,GAAoCj6B,KAAKgiC,oBAAqBhiC,OAC1JA,KAAKyhC,cAChBzhC,KAAKyhC,cAAcK,GAAIxa,QAAAA,KAErBtnB,KAAKyhC,uBACPQ,EAAchI,EAAO0G,WAChBz/B,EAAI,EAAGkB,EAAK6/B,EAAYhhC,OAAQC,EAAIkB,EAAIlB,IAAAA,KACzCkL,EAAQ61B,EAAY/gC,GACxBlB,KAAKyhC,cAAAA,EAAqBr1B,IAAAA,CAAAA,EACfA,EAAAA,EAAuCpM,KAAK4hC,mBAAoB5hC,MAAAuF,EAChE6G,EAAAA,EAAyBpM,KAAK4hC,mBAAoB5hC,OAGjEA,KAAKqG,WAMTk7B,EAAWphC,UAAU4hC,iBAAmB,SAAUG,OAC1C91B,EAAoD81B,EAAgB/C,QACxEn/B,KAAKyhC,cAAAA,EAAqBr1B,IAAAA,CAAAA,EACfA,EAAAA,EAAuCpM,KAAK4hC,mBAAoB5hC,MAAAuF,EAChE6G,EAAAA,EAAyBpM,KAAK4hC,mBAAoB5hC,OAE7DA,KAAKqG,WAMTk7B,EAAWphC,UAAU6hC,oBAAsB,SAAUE,OAE7C3/B,EAAAA,EADoD2/B,EAAgB/C,SAExEn/B,KAAKyhC,cAAcl/B,GAAK+kB,QAAAA,UACjBtnB,KAAKyhC,cAAcl/B,GAC1BvC,KAAKqG,WAUTk7B,EAAWphC,UAAU0hC,UAAY,kBAC2D7hC,KAAKL,IAAI0hC,KAUrGE,EAAWphC,UAAUwhC,UAAY,SAAU1H,GACvCj6B,KAAKqI,IAAIg5B,GAAiBpH,IAM9BsH,EAAWphC,UAAU+M,eAAiB,SAAUC,OACxCyB,OAAsB3J,IAAdkI,EAA0BA,EAAAA,UACtCnN,KAAK6hC,YAAYva,SAAQ,SAAUlb,GAC/BA,EAAMc,eAAe0B,MAElBA,GAMX2yB,EAAWphC,UAAUiN,oBAAsB,SAAUC,OAC7CwB,OAAwB5J,IAAfoI,EAA2BA,EAAAA,GACpC80B,EAAMtzB,EAAO5N,OACjBjB,KAAK6hC,YAAYva,SAAQ,SAAUlb,GAC/BA,EAAMgB,oBAAoByB,cAE1BuzB,EAAgBpiC,KAAKiM,gBAChB/K,EAAIihC,EAAK//B,EAAKyM,EAAO5N,OAAQC,EAAIkB,EAAIlB,IAAAA,KACtCuO,EAAaZ,EAAO3N,GACxBuO,EAAWpE,SAAW+2B,EAAc/2B,QACpCoE,EAAWnE,QAAUmE,EAAWnE,SAAW82B,EAAc92B,QACzDmE,EAAWjE,cAAgBjC,KAAKF,IAAIoG,EAAWjE,cAAe42B,EAAc52B,eAC5EiE,EAAW/D,cAAgBnC,KAAKD,IAAImG,EAAW/D,cAAe02B,EAAc12B,eAC5E+D,EAAW9D,QAAUpC,KAAKD,IAAImG,EAAW9D,QAASy2B,EAAcz2B,SAChE8D,EAAW7D,QAAUrC,KAAKF,IAAIoG,EAAW7D,QAASw2B,EAAcx2B,cACnC3G,IAAzBm9B,EAAcx1B,cACY3H,IAAtBwK,EAAW7C,OACX6C,EAAW7C,OAAAA,GAAyB6C,EAAW7C,OAAQw1B,EAAcx1B,QAGrE6C,EAAW7C,OAASw1B,EAAcx1B,eAIvCiC,GAKX0yB,EAAWphC,UAAUuM,eAAiB,sBAG/B60B,EA7JPD,oECnEAe,GAA0Bp8B,eACtBlD,EAAgB,SAAUE,EAAGpC,UAC7BkC,EAAgBtD,OAAOyD,gBAAAA,CAChBC,UAAAA,cAA2B7B,OAAAA,SAAmB2B,EAAGpC,GAAKoC,EAAEE,UAAYtC,aAC7DoC,EAAGpC,WAAcuC,KAAKvC,EAAOpB,OAAOU,UAAUqC,eAAea,KAAKxC,EAAGuC,KAAIH,EAAEG,GAAKvC,EAAEuC,MAC3EH,EAAGpC,WAErB,SAAUoC,EAAGpC,GAEhB,SAAAyC,IAAgBtD,KAAKuD,YAAcN,EADnCF,EAAcE,EAAGpC,GAEjBoC,EAAE9C,UAAkB,OAANU,EAAapB,OAAO+D,OAAO3C,IAAMyC,EAAGnD,UAAYU,EAAEV,UAAAA,IAAemD,IAVzD2C,GAsB1Bq8B,GAAAA,SAAoC5+B,GAOpC,SAAA6+B,EAAkBxiC,EAAMyO,EAAKgE,OACrB3O,EAAQH,EAAOL,KAAKrD,KAAMD,IAASC,YAMvC6D,EAAM2K,IAAMA,EAMZ3K,EAAMsL,gBAAgClK,IAAnBuN,EAA+BA,EAAiB,KAC5D3O,SApBXw+B,GAAUE,EAAU7+B,GAsBb6+B,EAvBPD,gDCtBAE,GAA0Bv8B,eACtBlD,EAAgB,SAAUE,EAAGpC,UAC7BkC,EAAgBtD,OAAOyD,gBAAAA,CAChBC,UAAAA,cAA2B7B,OAAAA,SAAmB2B,EAAGpC,GAAKoC,EAAEE,UAAYtC,aAC7DoC,EAAGpC,WAAcuC,KAAKvC,EAAOpB,OAAOU,UAAUqC,eAAea,KAAKxC,EAAGuC,KAAIH,EAAEG,GAAKvC,EAAEuC,MAC3EH,EAAGpC,WAErB,SAAUoC,EAAGpC,GAEhB,SAAAyC,IAAgBtD,KAAKuD,YAAcN,EADnCF,EAAcE,EAAGpC,GAEjBoC,EAAE9C,UAAkB,OAANU,EAAapB,OAAO+D,OAAO3C,IAAMyC,EAAGnD,UAAYU,EAAEV,UAAAA,IAAemD,IAVzD2C,GAuB1Bw8B,GAAAA,SAA2C/+B,GAS3C,SAAAg/B,EAAyB3iC,EAAMyO,EAAKm0B,EAAeC,EAAcpwB,OACzD3O,EAAQH,EAAOL,KAAKrD,KAAMD,EAAMyO,EAAKgE,IAAmBxS,YAO5D6D,EAAM8+B,cAAgBA,EAKtB9+B,EAAMg/B,OAAS,KAKfh/B,EAAMi/B,YAAc,KAQpBj/B,EAAMk/B,cAA4B99B,IAAjB29B,GAA6BA,EACvC/+B,SAnCX2+B,GAAUE,EAAiBh/B,GAqC3BjE,OAAOC,eAAegjC,EAAgBviC,UAAW,QAAA,CAM7CR,IAAK,kBACIK,KAAK6iC,SACN7iC,KAAK6iC,OAAS7iC,KAAKwO,IAAIw0B,cAAchjC,KAAK2iC,gBAEvC3iC,KAAK6iC,QAEhBx6B,IAAK,SAAU6G,GACXlP,KAAK6iC,OAAS3zB,GAElBtP,YAAY,EACZqjC,cAAc,IAElBxjC,OAAOC,eAAegjC,EAAgBviC,UAAW,aAAA,CAO7CR,IAAK,kBACIK,KAAK8iC,cACN9iC,KAAK8iC,YAAc9iC,KAAKwO,IAAI00B,uBAAuBljC,KAAKkP,QAErDlP,KAAK8iC,aAEhBz6B,IAAK,SAAUoJ,GACXzR,KAAK8iC,YAAcrxB,GAEvB7R,YAAY,EACZqjC,cAAc,IAOlBP,EAAgBviC,UAAUC,eAAiB,WACvCsD,EAAOvD,UAAUC,eAAeiD,KAAKrD,MACrCA,KAAK2iC,cAAcviC,kBAOvBsiC,EAAgBviC,UAAUE,gBAAkB,WACxCqD,EAAOvD,UAAUE,gBAAgBgD,KAAKrD,MACtCA,KAAK2iC,cAActiC,mBAEhBqiC,EA7FPD,mECRAU,YAAa,cAMbC,MAAAA,EAMAC,SAAAA,EAMAC,YAAa,cAObC,YAAa,cACbC,YAAa,cACbC,UAAW,YACXC,YAAa,cACbC,WAAY,aACZC,aAAc,eACdC,aAAc,eACdC,cAAe,oBCvCF,iBACA,cCNbC,GAA0B99B,eACtBlD,EAAgB,SAAUE,EAAGpC,UAC7BkC,EAAgBtD,OAAOyD,gBAAAA,CAChBC,UAAAA,cAA2B7B,OAAAA,SAAmB2B,EAAGpC,GAAKoC,EAAEE,UAAYtC,aAC7DoC,EAAGpC,WAAcuC,KAAKvC,EAAOpB,OAAOU,UAAUqC,eAAea,KAAKxC,EAAGuC,KAAIH,EAAEG,GAAKvC,EAAEuC,MAC3EH,EAAGpC,WAErB,SAAUoC,EAAGpC,GAEhB,SAAAyC,IAAgBtD,KAAKuD,YAAcN,EADnCF,EAAcE,EAAGpC,GAEjBoC,EAAE9C,UAAkB,OAANU,EAAapB,OAAO+D,OAAO3C,IAAMyC,EAAGnD,UAAYU,EAAEV,UAAAA,IAAemD,IAVzD2C,GAoB1B+9B,GAAAA,SAAkDtgC,GAMlD,SAAAugC,EAAgCz1B,EAAK01B,OAC7BrgC,EAAQH,EAAOL,KAAKrD,KAAMwO,IAAQxO,KAMtC6D,EAAMg5B,KAAOruB,EAKb3K,EAAMsgC,gBAKNtgC,EAAMugC,gBAAiB,EAKvBvgC,EAAMwgC,WAAY,EAKlBxgC,EAAMygC,kBAAAA,GAKNzgC,EAAM0gC,eAAiBL,EACjBA,EAAAA,GAAAA,GAQNrgC,EAAM2gC,MAAQ,SACVrF,EAAUt7B,EAAMg5B,KAAK+B,qBAKzB/6B,EAAM4gC,gBAAkB,EAKxB5gC,EAAM6gC,gBAAAA,GACN7gC,EAAM86B,SAAWQ,EAKjBt7B,EAAM8gC,wBAAAA,EAAiCxF,EAAAA,GAAuCt7B,EAAM+gC,mBAAoB/gC,GAKxGA,EAAMghC,0BAKNhhC,EAAMihC,oBAAAA,EAA6B3F,EAAAA,GAAuCt7B,EAAMkhC,YAAalhC,GAI7FA,EAAMmhC,sBAAwBnhC,EAAMohC,iBAAiBv/B,KAAK7B,GAC1DA,EAAM86B,SAASz6B,iBAAAA,EAAsCL,EAAMmhC,wBAAAA,IAAAA,CAAmD5rB,SAAS,IAChHvV,SA/EXkgC,GAAUE,EAAwBvgC,GAsFlCugC,EAAuB9jC,UAAU+kC,cAAgB,SAAUC,OACnDC,EAAAA,IAAAA,GAAAA,QAAAA,GAAmDhC,MAAOpjC,KAAK68B,KAAMsI,GACzEnlC,KAAKuE,cAAc6gC,QACUngC,IAAzBjF,KAAKmkC,iBAELkB,aAAarlC,KAAKmkC,iBAClBnkC,KAAKmkC,qBAAkBl/B,EACvBmgC,EAAAA,IAAAA,GAAAA,QAAAA,GAAmD/B,SAAUrjC,KAAK68B,KAAMsI,GACxEnlC,KAAKuE,cAAc6gC,IAInBplC,KAAKmkC,gBAAkBmB,sBAGnBtlC,KAAKmkC,qBAAkBl/B,MACnBmgC,EAAAA,IAAAA,GAAAA,QAAAA,GAAmDjC,YAAanjC,KAAK68B,KAAMsI,GAC/EnlC,KAAKuE,cAAc6gC,IACrB1/B,KAAK1F,MAAO,MAUtBikC,EAAuB9jC,UAAUolC,sBAAwB,SAAUJ,OAC3D3gC,EAAQ2gC,EACR3gC,EAAMzE,MAAAA,GAA4B0jC,WAClCj/B,EAAMzE,MAAAA,GAA4B+jC,qBAC3B9jC,KAAK0kC,gBAAgBlgC,EAAMghC,WAE7BhhC,EAAMzE,MAAAA,GAA4ByjC,cACvCxjC,KAAK0kC,gBAAgBlgC,EAAMghC,YAAa,GAE5CxlC,KAAKykC,gBAAkBhlC,OAAO2F,KAAKpF,KAAK0kC,iBAAiBzjC,QAO7DgjC,EAAuB9jC,UAAUslC,iBAAmB,SAAUN,GAC1DnlC,KAAKulC,sBAAsBJ,OACvBC,EAAAA,IAAAA,GAAAA,QAAAA,GAAmD3B,UAAWzjC,KAAK68B,KAAMsI,GAC7EnlC,KAAKuE,cAAc6gC,GAOfplC,KAAKokC,iBACJgB,EAASnlC,qBACTD,KAAKqkC,WACNrkC,KAAK0lC,qBAAqBP,IAC1BnlC,KAAKklC,cAAcllC,KAAKwkC,OAEC,IAAzBxkC,KAAKykC,kBACLzkC,KAAKskC,kBAAkBhd,QAAAA,GACvBtnB,KAAKskC,kBAAkBrjC,OAAS,EAChCjB,KAAKqkC,WAAY,EACjBrkC,KAAKwkC,MAAQ,OASrBP,EAAuB9jC,UAAUulC,qBAAuB,SAAUP,UAC/B,IAAxBA,EAAaQ,QAOxB1B,EAAuB9jC,UAAUykC,mBAAqB,SAAUO,GAC5DnlC,KAAKokC,eAA0C,IAAzBpkC,KAAKykC,gBAC3BzkC,KAAKulC,sBAAsBJ,OACvBC,EAAAA,IAAAA,GAAAA,QAAAA,GAAmD5B,YAAaxjC,KAAK68B,KAAMsI,MAC/EnlC,KAAKuE,cAAc6gC,GACnBplC,KAAKwkC,MAAQW,EACyB,IAAlCnlC,KAAKskC,kBAAkBrjC,OAAW,KAC9B2kC,EAAM5lC,KAAK68B,KAAKgJ,mBACpB7lC,KAAKskC,kBAAkBxhC,KAAAA,EAAY8iC,EAAAA,GAAyBrC,YAAavjC,KAAK8lC,mBAAoB9lC,MAAAuF,EAAcqgC,EAAAA,GAAyBnC,UAAWzjC,KAAKylC,iBAAkBzlC,QAcpKA,KAAK2+B,SAAAA,GAA8BmF,cAAe9jC,KAAKylC,iBAAkBzlC,OAC5EA,KAAK2+B,SAASoH,aAAe/lC,KAAK2+B,SAASoH,gBAAkBH,GAC7D5lC,KAAKskC,kBAAkBxhC,KAAAA,EAAY9C,KAAK2+B,SAASoH,cAAAA,GAAmCtC,UAAWzjC,KAAKylC,iBAAkBzlC,SASlIikC,EAAuB9jC,UAAU2lC,mBAAqB,SAAUX,MAIxDnlC,KAAKgmC,UAAUb,GAAAA,CACfnlC,KAAKqkC,WAAY,MACbe,EAAAA,IAAAA,GAAAA,QAAAA,GAAmD9B,YAAatjC,KAAK68B,KAAMsI,EAAcnlC,KAAKqkC,WAClGrkC,KAAKuE,cAAc6gC,KAU3BnB,EAAuB9jC,UAAU4kC,YAAc,SAAUI,GACrDnlC,KAAK6kC,0BAA4BM,MAC7BpC,KAAc/iC,KAAKwkC,QAASxkC,KAAKgmC,UAAUb,IAC/CnlC,KAAKuE,cAAAA,IAAAA,GAAAA,QAAkC4gC,EAAaplC,KAAMC,KAAK68B,KAAMsI,EAAcpC,KAUvFkB,EAAuB9jC,UAAU8kC,iBAAmB,SAAUzgC,GAGrDxE,KAAK6kC,4BACN7kC,KAAK6kC,0BAA0BoB,kBAC/BzhC,EAAMpE,kBASd6jC,EAAuB9jC,UAAU6lC,UAAY,SAAUb,UAC3CnlC,KAAKqkC,WACT96B,KAAKklB,IAAI0W,EAAae,QAAUlmC,KAAKwkC,MAAM0B,SACvClmC,KAAKukC,gBACTh7B,KAAKklB,IAAI0W,EAAagB,QAAUnmC,KAAKwkC,MAAM2B,SAAWnmC,KAAKukC,gBAKnEN,EAAuB9jC,UAAUO,gBAAkB,WAC3CV,KAAK8kC,wBACS9kC,KAAK8kC,qBACnB9kC,KAAK8kC,oBAAsB,MAE/B9kC,KAAK2+B,SAAS55B,oBAAAA,EAAyC/E,KAAKglC,uBACxDhlC,KAAK2kC,4BACS3kC,KAAK2kC,yBACnB3kC,KAAK2kC,wBAA0B,MAEnC3kC,KAAKskC,kBAAkBhd,QAAAA,GACvBtnB,KAAKskC,kBAAkBrjC,OAAS,EAChCjB,KAAK2+B,SAAW,KAChBj7B,EAAOvD,UAAUO,gBAAgB2C,KAAKrD,OAEnCikC,EA7QPD,2DCXY,gBAMD,eAMF,aCjBG,gBACN,UACE,YACF,aCFCoC,GAAO36B,EAAAA,EAad46B,GAAAA,WAKA,SAAAC,EAAuBC,EAAkBC,GAKrCxmC,KAAKymC,kBAAoBF,EAKzBvmC,KAAK0mC,aAAeF,EAKpBxmC,KAAK2mC,UAAAA,GAKL3mC,KAAK4mC,YAAAA,GAKL5mC,KAAK6mC,gBAAAA,UAKTP,EAAcnmC,UAAUk8B,MAAQ,WAC5Br8B,KAAK2mC,UAAU1lC,OAAS,EACxBjB,KAAK4mC,YAAY3lC,OAAS,IACpBjB,KAAK6mC,kBAMfP,EAAcnmC,UAAU2mC,QAAU,eAC1BC,EAAW/mC,KAAK2mC,UAChBK,EAAahnC,KAAK4mC,YAClBzH,EAAU4H,EAAS,GACA,GAAnBA,EAAS9lC,QACT8lC,EAAS9lC,OAAS,EAClB+lC,EAAW/lC,OAAS,IAGpB8lC,EAAS,GAAKA,EAAStG,MACvBuG,EAAW,GAAKA,EAAWvG,MAC3BzgC,KAAKinC,QAAQ,QAEbC,EAAalnC,KAAK0mC,aAAavH,iBAC5Bn/B,KAAK6mC,gBAAgBK,GACrB/H,GAOXmH,EAAcnmC,UAAUgnC,QAAU,SAAUhI,QAC/Bn/B,KAAK0mC,aAAavH,KAAYn/B,KAAK6mC,iBAAkB,QAC1DO,EAAWpnC,KAAKymC,kBAAkBtH,UAClCiI,GAAYhB,KACZpmC,KAAK2mC,UAAU7jC,KAAKq8B,GACpBn/B,KAAK4mC,YAAY9jC,KAAKskC,GACtBpnC,KAAK6mC,gBAAgB7mC,KAAK0mC,aAAavH,KAAY,EACnDn/B,KAAKqnC,UAAU,EAAGrnC,KAAK2mC,UAAU1lC,OAAS,IACnC,IAOfqlC,EAAcnmC,UAAUmnC,SAAW,kBACxBtnC,KAAK2mC,UAAU1lC,QAQ1BqlC,EAAcnmC,UAAUonC,mBAAqB,SAAUliC,UACpC,EAARA,EAAY,GAQvBihC,EAAcnmC,UAAUqnC,oBAAsB,SAAUniC,UACrC,EAARA,EAAY,GAQvBihC,EAAcnmC,UAAUsnC,gBAAkB,SAAUpiC,UACxCA,EAAQ,GAAM,GAM1BihC,EAAcnmC,UAAUunC,SAAW,eAC3BxmC,MACCA,GAAKlB,KAAK2mC,UAAU1lC,QAAU,GAAK,EAAGC,GAAK,EAAGA,IAC/ClB,KAAKinC,QAAQ/lC,IAMrBolC,EAAcnmC,UAAUwnC,QAAU,kBACG,IAA1B3nC,KAAK2mC,UAAU1lC,QAM1BqlC,EAAcnmC,UAAUynC,YAAc,SAAUrlC,UACrCA,KAAOvC,KAAK6mC,iBAMvBP,EAAcnmC,UAAU0nC,SAAW,SAAU1I,UAClCn/B,KAAK4nC,YAAY5nC,KAAK0mC,aAAavH,KAM9CmH,EAAcnmC,UAAU8mC,QAAU,SAAU5hC,WACpC0hC,EAAW/mC,KAAK2mC,UAChBK,EAAahnC,KAAK4mC,YAClBkB,EAAQf,EAAS9lC,OACjBk+B,EAAU4H,EAAS1hC,GACnB+hC,EAAWJ,EAAW3hC,GACtB0iC,EAAa1iC,EACVA,EAAQyiC,GAAS,GAAA,KAChBE,EAAShoC,KAAKunC,mBAAmBliC,GACjC4iC,EAASjoC,KAAKwnC,oBAAoBniC,GAClC6iC,EAAoBD,EAASH,GAASd,EAAWiB,GAAUjB,EAAWgB,GACpEC,EACAD,EACNjB,EAAS1hC,GAAS0hC,EAASmB,GAC3BlB,EAAW3hC,GAAS2hC,EAAWkB,GAC/B7iC,EAAQ6iC,EAEZnB,EAAS1hC,GAAS85B,EAClB6H,EAAW3hC,GAAS+hC,EACpBpnC,KAAKqnC,UAAUU,EAAY1iC,IAO/BihC,EAAcnmC,UAAUknC,UAAY,SAAUU,EAAY1iC,WAClD0hC,EAAW/mC,KAAK2mC,UAChBK,EAAahnC,KAAK4mC,YAClBzH,EAAU4H,EAAS1hC,GACnB+hC,EAAWJ,EAAW3hC,GACnBA,EAAQ0iC,GAAAA,KACPI,EAAcnoC,KAAKynC,gBAAgBpiC,QACnC2hC,EAAWmB,GAAef,SAC1BL,EAAS1hC,GAAS0hC,EAASoB,GAC3BnB,EAAW3hC,GAAS2hC,EAAWmB,GAC/B9iC,EAAQ8iC,EAMhBpB,EAAS1hC,GAAS85B,EAClB6H,EAAW3hC,GAAS+hC,GAKxBd,EAAcnmC,UAAUioC,aAAe,eAM/BjJ,EAASj+B,EAAGkmC,EALZb,EAAmBvmC,KAAKymC,kBACxBM,EAAW/mC,KAAK2mC,UAChBK,EAAahnC,KAAK4mC,YAClBvhC,EAAQ,EACR9F,EAAIwnC,EAAS9lC,WAEZC,EAAI,EAAGA,EAAI3B,IAAK2B,GAEjBkmC,EAAWb,EADXpH,EAAU4H,EAAS7lC,MAEHklC,UACLpmC,KAAK6mC,gBAAgB7mC,KAAK0mC,aAAavH,KAG9C6H,EAAW3hC,GAAS+hC,EACpBL,EAAS1hC,KAAW85B,GAG5B4H,EAAS9lC,OAASoE,EAClB2hC,EAAW/lC,OAASoE,EACpBrF,KAAK0nC,YAEFpB,EAvNPD,MCdM,KACG,KACD,KAKD,KACA,ECfPgC,GAA0BpiC,eACtBlD,EAAgB,SAAUE,EAAGpC,UAC7BkC,EAAgBtD,OAAOyD,gBAAAA,CAChBC,UAAAA,cAA2B7B,OAAAA,SAAmB2B,EAAGpC,GAAKoC,EAAEE,UAAYtC,aAC7DoC,EAAGpC,WAAcuC,KAAKvC,EAAOpB,OAAOU,UAAUqC,eAAea,KAAKxC,EAAGuC,KAAIH,EAAEG,GAAKvC,EAAEuC,MAC3EH,EAAGpC,WAErB,SAAUoC,EAAGpC,GAEhB,SAAAyC,IAAgBtD,KAAKuD,YAAcN,EADnCF,EAAcE,EAAGpC,GAEjBoC,EAAE9C,UAAkB,OAANU,EAAapB,OAAO+D,OAAO3C,IAAMyC,EAAGnD,UAAYU,EAAEV,UAAAA,IAAemD,IAVzD2C,GAsB1BqiC,GAAAA,SAAqC5kC,GAMrC,SAAA6kC,EAAmBC,EAAsBC,OACjC5kC,EAAQH,EAAOL,KAAKrD,MAKxB,SAAUm/B,UACCqJ,EAAqB5iC,MAAM,KAAMu5B,MAM5C,SAAUA,UAC6CA,EAAQ,GAAIuJ,aAC7D1oC,YAEN6D,EAAM8kC,uBAAyB9kC,EAAM+kC,iBAAiBljC,KAAK7B,GAK3DA,EAAMglC,oBAAsBJ,EAK5B5kC,EAAMilC,cAAgB,EAKtBjlC,EAAMklC,kBAAAA,GACCllC,SAtCXwkC,GAAUE,EAAW7kC,GA4CrB6kC,EAAUpoC,UAAUgnC,QAAU,SAAUhI,OAChC6J,EAAQtlC,EAAOvD,UAAUgnC,QAAQ9jC,KAAKrD,KAAMm/B,GAC5C6J,GACW7J,EAAQ,GACdj7B,iBAAAA,EAAmClE,KAAK2oC,+BAE1CK,GAKXT,EAAUpoC,UAAU8oC,gBAAkB,kBAC3BjpC,KAAK8oC,eAMhBP,EAAUpoC,UAAUyoC,iBAAmB,SAAUpkC,OACzCwM,EAAmDxM,EAAMtE,OACzDiM,EAAQ6E,EAAKjC,cACZiC,EAAKk4B,MAAQ/8B,IAAAA,IACdA,IAAAA,IACAA,IAAAA,GAAoBg9B,CACpBn4B,EAAKjM,oBAAAA,EAAsC/E,KAAK2oC,4BAC5CS,EAAUp4B,EAAK03B,SACfU,KAAWppC,KAAK+oC,2BACT/oC,KAAK+oC,kBAAkBK,KAC5BppC,KAAK8oC,eAEX9oC,KAAK6oC,wBAObN,EAAUpoC,UAAUkpC,cAAgB,SAAUC,EAAiBC,WAEhDv4B,EAAMo4B,EADbI,EAAW,EAERxpC,KAAK8oC,cAAgBQ,GACxBE,EAAWD,GACXvpC,KAAKsnC,WAAa,GAElB8B,GADAp4B,EAAmDhR,KAAK8mC,UAAU,IACnD4B,SACP13B,EAAKjC,aACT5C,IAA8Bi9B,KAAWppC,KAAK+oC,oBAC9C/oC,KAAK+oC,kBAAkBK,IAAW,IAChCppC,KAAK8oC,gBACLU,EACFx4B,EAAKmB,SAIVo2B,EAnGPD,KA8GG,SAAAmB,GAAyBt6B,EAAY6B,EAAM04B,EAAeC,EAAYC,OAGpEz6B,KAAgBu6B,KAAiBv6B,EAAW06B,2BAG5C16B,EAAW06B,YAAYH,GAAe14B,EAAK03B,wBAS5ChyB,EAASvH,EAAWa,UAAU0G,OAC9BozB,EAASH,EAAW,GAAKjzB,EAAO,GAChCqzB,EAASJ,EAAW,GAAKjzB,EAAO,UAC5B,MAAQnN,KAAKQ,IAAI6/B,GACrBrgC,KAAKgc,KAAKukB,EAASA,EAASC,EAASA,GAAUH,uGChJ3C,YACI,gBACF,WCGHI,GAAoB,ICExB,SAAAC,GAAsBr9B,EAAQs9B,EAAYC,mBAUnCzzB,EAAQzG,EAAY2G,EAAMwzB,EAAcC,MAC1C3zB,EAAAA,KACI4zB,EAAYJ,EAAa,EAAItzB,EAAK,GAAK3G,EACvCs6B,EAAaL,EAAa,EAAItzB,EAAK,GAAK3G,EACxCu6B,EAASH,EAAkBA,EAAgB,GAAK,EAChDI,EAASJ,EAAkBA,EAAgB,GAAK,EAChD11B,EAAO/H,EAAO,GAAK09B,EAAY,EAAIE,EACnC31B,EAAOjI,EAAO,GAAK09B,EAAY,EAAIE,EACnC51B,EAAOhI,EAAO,GAAK29B,EAAa,EAAIE,EACpC31B,EAAOlI,EAAO,GAAK29B,EAAa,EAAIE,EAGpC91B,EAAOE,IAEPA,EADAF,GAAQE,EAAOF,GAAQ,GAGvBC,EAAOE,IAEPA,EADAF,GAAQE,EAAOF,GAAQ,OAGvBlL,EAAAA,GAAUgN,EAAO,GAAI/B,EAAME,GAC3BlL,EAAAA,GAAU+M,EAAO,GAAI9B,EAAME,GAC3BskB,EAAQ,GAAKnpB,SAEbm6B,GAAgBD,IAChBzgC,IACK0vB,EAAQ7vB,KAAKQ,IAAI,EAAIR,KAAKD,IAAI,EAAGqL,EAAO+B,EAAO,IAAM0iB,GAClDA,EAAQ7vB,KAAKQ,IAAI,EAAIR,KAAKD,IAAI,EAAGoN,EAAO,GAAK7B,GAAQukB,GAC7DzvB,IACKyvB,EAAQ7vB,KAAKQ,IAAI,EAAIR,KAAKD,IAAI,EAAGsL,EAAO8B,EAAO,IAAM0iB,GAClDA,EAAQ7vB,KAAKQ,IAAI,EAAIR,KAAKD,IAAI,EAAGoN,EAAO,GAAK5B,GAAQskB,KAEzD1vB,EAAGC,KAWhB,SAAA+gC,GAAch0B,UACVA,EClDX,SAAAi0B,GAAsC16B,EAAY26B,EAAWC,EAAcC,OACnEC,EAAAA,GAAuBH,GAAaC,EAAa,GACjDG,EAAAA,GAAwBJ,GAAaC,EAAa,UAClDC,EACOvhC,KAAKF,IAAI4G,EAAY1G,KAAKD,IAAIyhC,EAAaC,IAE/CzhC,KAAKF,IAAI4G,EAAY1G,KAAKF,IAAI0hC,EAAaC,IActD,SAAAC,GAAoCh7B,EAAYzE,EAAeE,OACvD0xB,EAAS7zB,KAAKF,IAAI4G,EAAYzE,UAElC4xB,GACI7zB,KAAKQ,IAAI,EAFD,GAEaR,KAAKD,IAAI,EAAG2G,EAAazE,EAAgB,IAFtD,GAGJ,EACJE,IACA0xB,EAAS7zB,KAAKD,IAAI8zB,EAAQ1xB,GAC1B0xB,GACI7zB,KAAKQ,IAAI,EAPL,GAOiBR,KAAKD,IAAI,EAAGoC,EAAgBuE,EAAa,IAP1D,GASA,MAECmtB,EAAQ1xB,EAAgB,EAAmB,EAAhBF,GAmGrC,SAAA0/B,GAAgC1/B,EAAeE,EAAey/B,EAAYC,EAAeC,mBASlFp7B,EAAYjP,EAAW4V,EAAMwzB,WAChBnlC,IAAfgL,EAAehL,KACXqmC,EAAeF,EACbT,GAA6Bn/B,EAAe4/B,EAAex0B,EAAMy0B,GACjE7/B,cACsBvG,IAAfkmC,GAA2BA,IACxBf,EAGTa,GAA2Bh7B,EAAYq7B,EAAc5/B,MAF3CuE,EAAYvE,EAAe4/B,KC3JjD,SAAAC,GAAiB50B,eACH1R,IAAb0R,EACO,SAUR,SAAA60B,GAAc70B,eACA1R,IAAb0R,EACOA,SChBR,SAAA80B,GAAgBjhC,UACZjB,KAAKmiC,IAAIlhC,EAAG,GAQhB,SAAAmhC,GAAiBnhC,UACb,EAAIihC,GAAO,EAAIjhC,GAQnB,SAAAohC,GAAkBphC,UACd,EAAIA,EAAIA,EAAI,EAAIA,EAAIA,EAAIA,EAQ5B,SAAAqhC,GAAgBrhC,UACZA,eC3BH,QACC,SACA,SACC,yBCDH,SAAAshC,GAAqBx2B,EAAiBC,EAAQC,EAAKC,EAAQ3C,EAAWi5B,WACrEC,EAAOD,GAAWA,GAClB7qC,EAAI,EACCgxB,EAAI3c,EAAQ2c,EAAI1c,EAAK0c,GAAKzc,EAAAA,KAC3B/L,EAAI4L,EAAgB4c,GACpBvoB,EAAI2L,EAAgB4c,EAAI,GAC5B8Z,EAAK9qC,KAAO4R,EAAU,GAAKpJ,EAAIoJ,EAAU,GAAKnJ,EAAImJ,EAAU,GAC5Dk5B,EAAK9qC,KAAO4R,EAAU,GAAKpJ,EAAIoJ,EAAU,GAAKnJ,EAAImJ,EAAU,UAE5Di5B,GAAYC,EAAK/qC,QAAUC,IAC3B8qC,EAAK/qC,OAASC,GAEX8qC,MCxBPC,GAA0BhmC,eACtBlD,EAAgB,SAAUE,EAAGpC,UAC7BkC,EAAgBtD,OAAOyD,gBAAAA,CAChBC,UAAAA,cAA2B7B,OAAAA,SAAmB2B,EAAGpC,GAAKoC,EAAEE,UAAYtC,aAC7DoC,EAAGpC,WAAcuC,KAAKvC,EAAOpB,OAAOU,UAAUqC,eAAea,KAAKxC,EAAGuC,KAAIH,EAAEG,GAAKvC,EAAEuC,MAC3EH,EAAGpC,WAErB,SAAUoC,EAAGpC,GAEhB,SAAAyC,IAAgBtD,KAAKuD,YAAcN,EADnCF,EAAcE,EAAGpC,GAEjBoC,EAAE9C,UAAkB,OAANU,EAAapB,OAAO+D,OAAO3C,IAAMyC,EAAGnD,UAAYU,EAAEV,UAAAA,IAAemD,IAVzD2C,GA2B1BimC,I5DIQ,EAAG,EAAG,EAAG,EAAG,EAAG,G4DSvBC,GAAAA,SAAoCzoC,GAEpC,SAAA0oC,QhFTuBC,EAGnBC,EAEAC,EACAC,EALAC,EgFSI5oC,EAAQH,EAAOL,KAAKrD,OAASA,YAKjC6D,EAAMod,SzD8IFxV,EAAAA,EAAUA,EAAAA,GAAAA,EAAAA,GAAWA,EAAAA,GyDzIzB5H,EAAM6oC,iBAAmB,EAKzB7oC,EAAM8oC,yCAA2C,EAKjD9oC,EAAM+oC,2BAA6B,EASnC/oC,EAAMgpC,6BhFvCaR,EgFuC4B,SAAUS,EAAUC,EAAkBC,OAC5EA,SACMhtC,KAAKitC,sBAAsBF,OAElCG,EAAQltC,KAAKktC,eACjBA,EAAMC,eAAeH,GACdE,EAAMD,sBAAsBF,IhF5CvCN,GAAS,EAMN,eACCW,EAAW9rC,MAAMnB,UAAU4f,MAAM1c,KAAKhB,kBACrCoqC,GAAUzsC,OAASwsC,GAAAA,EAAyBY,EAAUb,KACvDE,GAAS,EACTD,EAAWxsC,KACXusC,EAAWa,EACXd,EAAaD,EAAGzmC,MAAM5F,KAAMqC,YAEzBiqC,IgFgCAzoC,SAvCXooC,GAAUG,EAAU1oC,GAgDpB0oC,EAASjsC,UAAUktC,oBAAsB,SAAUN,EAAkBC,UAC1DhtC,KAAK6sC,4BAA4B7sC,KAAKsG,cAAeymC,EAAkBC,IAOlFZ,EAASjsC,UAAU+sC,MAAQ,uBAW3Bd,EAASjsC,UAAUmtC,eAAiB,SAAU5jC,EAAGC,EAAG4jC,EAAcC,eAQlEpB,EAASjsC,UAAUstC,WAAa,SAAU/jC,EAAGC,OACrC+jC,EAAQ1tC,KAAK2tC,gBAAAA,CAAiBjkC,EAAGC,WAC9B+jC,EAAM,KAAOhkC,GAAKgkC,EAAM,KAAO/jC,GAU1CyiC,EAASjsC,UAAUwtC,gBAAkB,SAAUrqB,EAAOsqB,OAC9CL,EAAeK,GAAmBA,CAAoBC,IAAKA,YAC/D7tC,KAAKstC,eAAehqB,EAAM,GAAIA,EAAM,GAAIiqB,EAAc9hC,EAAAA,GAC/C8hC,GASXnB,EAASjsC,UAAU2tC,qBAAuB,SAAUr8B,UACzCzR,KAAKytC,WAAWh8B,EAAW,GAAIA,EAAW,KAQrD26B,EAASjsC,UAAU4tC,cAAgB,SAAUnhC,eAS7Cw/B,EAASjsC,UAAU0M,UAAY,SAAUoI,MACjCjV,KAAK0sC,iBAAmB1sC,KAAKsG,cAAAA,KACzBsG,EAAS5M,KAAK+tC,cAAc/tC,KAAKihB,UACjC+sB,MAAMphC,EAAO,KAAOohC,MAAMphC,EAAO,SACbA,GAExB5M,KAAK0sC,gBAAkB1sC,KAAKsG,qBzD0djC,SAAwBsG,EAAQqI,UAC/BA,GACAA,EAAW,GAAKrI,EAAO,GACvBqI,EAAW,GAAKrI,EAAO,GACvBqI,EAAW,GAAKrI,EAAO,GACvBqI,EAAW,GAAKrI,EAAO,GAChBqI,GAGArI,GyDjee5M,KAAKihB,QAAShM,IAUxCm3B,EAASjsC,UAAUod,OAAS,SAAUnK,EAAO66B,QAa7C7B,EAASjsC,UAAU6pB,MAAQ,SAAU9W,EAAIg7B,EAAQC,QAYjD/B,EAASjsC,UAAUiuC,SAAW,SAAUC,UAC7BruC,KAAKitC,sBAAsBoB,EAAYA,IAUlDjC,EAASjsC,UAAU8sC,sBAAwB,SAAUF,eAQrDX,EAASjsC,UAAUmuC,QAAU,uBAY7BlC,EAASjsC,UAAUgtC,eAAiB,SAAUx1B,QAS9Cy0B,EAASjsC,UAAUouC,iBAAmB,SAAU3hC,eAWhDw/B,EAASjsC,UAAUmd,UAAY,SAAUwsB,EAAQC,QAkBjDqC,EAASjsC,UAAU2S,UAAY,SAAUxQ,EAAQmiB,OAEzCgH,EAAAA,GAA2BnpB,GAC3BqV,EAAc8T,EAAWzJ,YAAAA,GACvB,SAAUwsB,EAAeC,EAAgBh5B,OACnCi5B,EAAcjjB,EAAW5e,YACzB8hC,EAAkBljB,EAAWvJ,iBAC7B8H,EAAAA,GAAkB2kB,GAAAA,GAA6BD,aAClCxC,GAAcyC,EAAgB,GAAIA,EAAgB,GAAI3kB,GAAQA,EAAO,EAAG,EAAG,MAChFwkB,EAAe,EAAGA,EAAcvtC,OAAQwU,EAAQy2B,GAAcuC,MACtDhjB,EAAYhH,GAAa+pB,EAAeC,EAAgBh5B,OAEjEgW,EAAYhH,UAC/BzkB,KAAKmtC,eAAex1B,GACb3X,MAEJosC,EAtPPD,wDCxCAyC,GAA0B3oC,eACtBlD,EAAgB,SAAUE,EAAGpC,UAC7BkC,EAAgBtD,OAAOyD,gBAAAA,CAChBC,UAAAA,cAA2B7B,OAAAA,SAAmB2B,EAAGpC,GAAKoC,EAAEE,UAAYtC,aAC7DoC,EAAGpC,WAAcuC,KAAKvC,EAAOpB,OAAOU,UAAUqC,eAAea,KAAKxC,EAAGuC,KAAIH,EAAEG,GAAKvC,EAAEuC,MAC3EH,EAAGpC,WAErB,SAAUoC,EAAGpC,GAEhB,SAAAyC,IAAgBtD,KAAKuD,YAAcN,EADnCF,EAAcE,EAAGpC,GAEjBoC,EAAE9C,UAAkB,OAANU,EAAapB,OAAO+D,OAAO3C,IAAMyC,EAAGnD,UAAYU,EAAEV,UAAAA,IAAemD,IAVzD2C,GA6B1B4oC,GAAAA,SAA0CnrC,GAE1C,SAAAorC,QACQjrC,EAAQH,EAAOL,KAAKrD,OAASA,YAKjC6D,EAAMkrC,OAAAA,GAKNlrC,EAAM4R,OAAS,EAKf5R,EAAMyR,gBAAkB,KACjBzR,SAlBX+qC,GAAUE,EAAgBprC,GAyB1BorC,EAAe3uC,UAAU4tC,cAAgB,SAAUnhC,U1DiML0I,E0DhMDtV,KAAKsV,gB1DgMaC,E0DhMI,E1DgMIC,E0DhMDxV,KAAKsV,gBAAgBrU,O1DgMfwU,E0DhMuBzV,KAAKyV,O1DkMjGJ,GADMH,G0DjMmGtI,G1DkM3E0I,EAAiBC,EAAQC,EAAKC,GAFhE,IAA2CH,EAAiBC,EAAQC,EAAKC,G0D1L5Eq5B,EAAe3uC,UAAU6uC,eAAiB,uBAQ1CF,EAAe3uC,UAAU8uC,mBAAqB,kBACnCjvC,KAAKsV,gBAAgByK,MAAM,EAAG/f,KAAKyV,SAK9Cq5B,EAAe3uC,UAAU+uC,mBAAqB,kBACnClvC,KAAKsV,iBAOhBw5B,EAAe3uC,UAAUgvC,kBAAoB,kBAClCnvC,KAAKsV,gBAAgByK,MAAM/f,KAAKsV,gBAAgBrU,OAASjB,KAAKyV,SAOzEq5B,EAAe3uC,UAAUivC,UAAY,kBAC1BpvC,KAAK+uC,QAOhBD,EAAe3uC,UAAU8sC,sBAAwB,SAAUF,MACnD/sC,KAAK4sC,6BAA+B5sC,KAAKsG,gBACzCtG,KAAK2sC,yCAA2C,EAChD3sC,KAAK4sC,2BAA6B5sC,KAAKsG,eAIvCymC,EAAmB,GACgC,IAAlD/sC,KAAK2sC,0CACFI,GAAoB/sC,KAAK2sC,gDACtB3sC,SAEPqvC,EAAqBrvC,KAAKsvC,8BAA8BvC,UAC5BsC,EAAmBH,qBACrBjuC,OAASjB,KAAKsV,gBAAgBrU,OACjDouC,GASPrvC,KAAK2sC,yCAA2CI,EACzC/sC,OAQf8uC,EAAe3uC,UAAUmvC,8BAAgC,SAAUvC,UACxD/sC,MAKX8uC,EAAe3uC,UAAUovC,UAAY,kBAC1BvvC,KAAKyV,QAMhBq5B,EAAe3uC,UAAUqvC,mBAAqB,SAAUT,EAAQz5B,GAC5DtV,KAAKyV,OAASg6B,GAAmBV,GACjC/uC,KAAK+uC,OAASA,EACd/uC,KAAKsV,gBAAkBA,GAO3Bw5B,EAAe3uC,UAAUuvC,eAAiB,SAAUz7B,EAAa07B,QASjEb,EAAe3uC,UAAUyvC,UAAY,SAAUb,EAAQ96B,EAAa47B,OAE5Dp6B,KACAs5B,EACAt5B,EAASg6B,GAAmBV,gBAGnB7tC,EAAI,EAAGA,EAAI2uC,IAAW3uC,EAAAA,IACA,IAAvB+S,EAAYhT,cACZjB,KAAK+uC,OAAAA,QACL/uC,KAAKyV,OAAS,GAIdxB,EAAoCA,EAAY,GAIxD86B,EAiFZ,SAA4Bt5B,OACpBs5B,EACU,GAAVt5B,EACAs5B,EAAAA,GAEe,GAAVt5B,EACLs5B,EAAAA,GAEe,GAAVt5B,IACLs5B,EAAAA,WAEyDA,EA5F5Ce,CADTr6B,EAASxB,EAAYhT,QAGzBjB,KAAK+uC,OAASA,EACd/uC,KAAKyV,OAASA,GAWlBq5B,EAAe3uC,UAAUgtC,eAAiB,SAAUx1B,GAC5C3X,KAAKsV,kBACLqC,EAAY3X,KAAKsV,gBAAiBtV,KAAKsV,gBAAiBtV,KAAKyV,QAC7DzV,KAAKqG,YAUbyoC,EAAe3uC,UAAUod,OAAS,SAAUnK,EAAO66B,OAC3C34B,EAAkBtV,KAAKkvC,wBACvB55B,EAAAA,KACIG,EAASzV,KAAKuvC,aFjLvB,SAAgBj6B,EAAiBC,EAAQC,EAAKC,EAAQrC,EAAO66B,EAAQlC,WACpEC,EAAOD,GAAWA,GAClBv4B,EAAMjK,KAAKiK,IAAIJ,GACfG,EAAMhK,KAAKgK,IAAIH,GACf28B,EAAU9B,EAAO,GACjB+B,EAAU/B,EAAO,GACjB/sC,EAAI,EACCgxB,EAAI3c,EAAQ2c,EAAI1c,EAAK0c,GAAKzc,EAAAA,KAC3Bq0B,EAASx0B,EAAgB4c,GAAK6d,EAC9BhG,EAASz0B,EAAgB4c,EAAI,GAAK8d,EACtChE,EAAK9qC,KAAO6uC,EAAUjG,EAASt2B,EAAMu2B,EAASx2B,EAC9Cy4B,EAAK9qC,KAAO8uC,EAAUlG,EAASv2B,EAAMw2B,EAASv2B,UACrC4e,EAAIF,EAAI,EAAGE,EAAIF,EAAIzc,IAAU2c,EAClC4Z,EAAK9qC,KAAOoU,EAAgB8c,GAGhC2Z,GAAYC,EAAK/qC,QAAUC,IAC3B8qC,EAAK/qC,OAASC,IEiKHoU,EAAiB,EAAGA,EAAgBrU,OAAQwU,EAAQrC,EAAO66B,EAAQ34B,GAC1EtV,KAAKqG,YAYbyoC,EAAe3uC,UAAU6pB,MAAQ,SAAU9W,EAAIg7B,EAAQC,OAC/Ch7B,EAAK+6B,OACEjpC,IAAPkO,IACAA,EAAKD,OAEL+6B,EAASE,EACRF,IACDA,EAAAA,GAAmBjuC,KAAK6M,kBAExByI,EAAkBtV,KAAKkvC,wBACvB55B,EAAAA,KACIG,EAASzV,KAAKuvC,aFzKvB,SAAej6B,EAAiBC,EAAQC,EAAKC,EAAQvC,EAAIC,EAAI86B,EAAQlC,WACpEC,EAAOD,GAAWA,GAClBgE,EAAU9B,EAAO,GACjB+B,EAAU/B,EAAO,GACjB/sC,EAAI,EACCgxB,EAAI3c,EAAQ2c,EAAI1c,EAAK0c,GAAKzc,EAAAA,KAC3Bq0B,EAASx0B,EAAgB4c,GAAK6d,EAC9BhG,EAASz0B,EAAgB4c,EAAI,GAAK8d,EACtChE,EAAK9qC,KAAO6uC,EAAU78B,EAAK42B,EAC3BkC,EAAK9qC,KAAO8uC,EAAU78B,EAAK42B,UAClB3X,EAAIF,EAAI,EAAGE,EAAIF,EAAIzc,IAAU2c,EAClC4Z,EAAK9qC,KAAOoU,EAAgB8c,GAGhC2Z,GAAYC,EAAK/qC,QAAUC,IAC3B8qC,EAAK/qC,OAASC,IE2JJoU,EAAiB,EAAGA,EAAgBrU,OAAQwU,EAAQvC,EAAIC,EAAI86B,EAAQ34B,GAC1EtV,KAAKqG,YAUbyoC,EAAe3uC,UAAUmd,UAAY,SAAUwsB,EAAQC,OAC/Cz0B,EAAkBtV,KAAKkvC,wBACvB55B,EAAAA,KACIG,EAASzV,KAAKuvC,aF3JvB,SAAmBj6B,EAAiBC,EAAQC,EAAKC,EAAQq0B,EAAQC,EAAQgC,WACxEC,EAAOD,GAAWA,GAClB7qC,EAAI,EACCgxB,EAAI3c,EAAQ2c,EAAI1c,EAAK0c,GAAKzc,EAAAA,CAC/Bu2B,EAAK9qC,KAAOoU,EAAgB4c,GAAK4X,EACjCkC,EAAK9qC,KAAOoU,EAAgB4c,EAAI,GAAK6X,UAC5B3X,EAAIF,EAAI,EAAGE,EAAIF,EAAIzc,IAAU2c,EAClC4Z,EAAK9qC,KAAOoU,EAAgB8c,GAGhC2Z,GAAYC,EAAK/qC,QAAUC,IAC3B8qC,EAAK/qC,OAASC,IEiJAoU,EAAiB,EAAGA,EAAgBrU,OAAQwU,EAAQq0B,EAAQC,EAAQz0B,GAC9EtV,KAAKqG,YAGNyoC,EArOPD,aA4PG,SAAAY,GAA4BV,OAC3Bt5B,SACAs5B,GAAAA,GACAt5B,EAAS,EAEJs5B,GAAAA,IAAgCA,GAAAA,GACrCt5B,EAAS,EAEJs5B,GAAAA,KACLt5B,EAAS,GAEiBA,ECpRlC,SAAAw6B,GAAuB36B,EAAiB46B,EAASC,EAAS16B,EAAQ/L,EAAGC,EAAG4jC,OAKhEh4B,EAJArL,EAAKoL,EAAgB46B,GACrB/lC,EAAKmL,EAAgB46B,EAAU,GAC/B5lC,EAAKgL,EAAgB66B,GAAWjmC,EAChCK,EAAK+K,EAAgB66B,EAAU,GAAKhmC,KAE7B,IAAPG,GAAmB,IAAPC,EACZgL,EAAS26B,WAGL1lC,IAAMd,EAAIQ,GAAMI,GAAMX,EAAIQ,GAAMI,IAAOD,EAAKA,EAAKC,EAAKA,MACtDC,EAAI,EACJ+K,EAAS46B,UAEJ3lC,EAAI,EAAA,SACAtJ,EAAI,EAAGA,EAAIuU,IAAUvU,EAC1BqsC,EAAarsC,GAAAA,GAAUoU,EAAgB46B,EAAUhvC,GAAIoU,EAAgB66B,EAAUjvC,GAAIsJ,eAEvF+iC,EAAatsC,OAASwU,GAItBF,EAAS26B,OAGRhvC,EAAI,EAAGA,EAAIuU,IAAUvU,EAC1BqsC,EAAarsC,GAAKoU,EAAgBC,EAASrU,GAE/CqsC,EAAatsC,OAASwU,EAYnB,SAAA26B,GAAyB96B,EAAiBC,EAAQC,EAAKC,EAAQnM,OAC9DY,EAAKoL,EAAgBC,GACrBpL,EAAKmL,EAAgBC,EAAS,OAC7BA,GAAUE,EAAQF,EAASC,EAAKD,GAAUE,EAAAA,KACvCrL,EAAKkL,EAAgBC,GACrBlL,EAAKiL,EAAgBC,EAAS,GAC9B86B,EAAAA,GAAyBnmC,EAAIC,EAAIC,EAAIC,GACrCgmC,EAAe/mC,IACfA,EAAM+mC,GAEVnmC,EAAKE,EACLD,EAAKE,SAEFf,EAgDJ,SAAAgnC,GAA4Bh7B,EAAiBC,EAAQC,EAAKC,EAAQ86B,EAAUC,EAAQ9mC,EAAGC,EAAG4jC,EAAcC,EAAoBiD,MAC3Hl7B,GAAUC,SACHg4B,MAEPtsC,EAAGwvC,KACU,IAAbH,EAAa,KAEbG,EAAAA,GAA4BhnC,EAAGC,EAAG2L,EAAgBC,GAASD,EAAgBC,EAAS,KAC9Di4B,EAAAA,KACbtsC,EAAI,EAAGA,EAAIuU,IAAUvU,EACtBqsC,EAAarsC,GAAKoU,EAAgBC,EAASrU,UAE/CqsC,EAAatsC,OAASwU,EACfi7B,SAGAlD,UAGXmD,EAAWF,GAAeA,CAAgB5C,IAAKA,KAC/CxoC,EAAQkQ,EAASE,EACdpQ,EAAQmQ,MACXy6B,GAAc36B,EAAiBjQ,EAAQoQ,EAAQpQ,EAAOoQ,EAAQ/L,EAAGC,EAAGgnC,IACpED,EAAAA,GAA4BhnC,EAAGC,EAAGgnC,EAAS,GAAIA,EAAS,KAClCnD,EAAAA,KAClBA,EAAqBkD,EAChBxvC,EAAI,EAAGA,EAAIuU,IAAUvU,EACtBqsC,EAAarsC,GAAKyvC,EAASzvC,GAE/BqsC,EAAatsC,OAASwU,EACtBpQ,GAASoQ,OAaTpQ,GACIoQ,EACIlM,KAAKD,KAAMC,KAAKgc,KAAKmrB,GAAmBnnC,KAAKgc,KAAKioB,IAC9C+C,EACA,EAAG,MAGnBC,IAEAP,GAAc36B,EAAiBE,EAAMC,EAAQF,EAAQE,EAAQ/L,EAAGC,EAAGgnC,IACnED,EAAAA,GAA4BhnC,EAAGC,EAAGgnC,EAAS,GAAIA,EAAS,KAClCnD,GAAAA,KAClBA,EAAqBkD,EAChBxvC,EAAI,EAAGA,EAAIuU,IAAUvU,EACtBqsC,EAAarsC,GAAKyvC,EAASzvC,GAE/BqsC,EAAatsC,OAASwU,SAGvB+3B,EC5JJ,SAAAoD,GAA4Bt7B,EAAiBC,EAAQtB,EAAawB,WAC5DvU,EAAI,EAAGkB,EAAK6R,EAAYhT,OAAQC,EAAIkB,IAAMlB,UAC3CuQ,EAAawC,EAAY/S,GACpBgxB,EAAI,EAAGA,EAAIzc,IAAUyc,EAC1B5c,EAAgBC,KAAY9D,EAAWygB,UAGxC3c,ECkCJ,SAAAs7B,GAAwBv7B,EAAiBC,EAAQC,EAAKC,EAAQs3B,EAAkB+D,EAA2BC,OAC1GxxC,GAAKiW,EAAMD,GAAUE,KACrBlW,EAAI,EAAA,MACGgW,EAASC,EAAKD,GAAUE,EAC3Bq7B,EAA0BC,KAAsBz7B,EAAgBC,GAChEu7B,EAA0BC,KACtBz7B,EAAgBC,EAAS,UAE1Bw7B,MAGPC,EAAAA,IAAc1vC,MAAM/B,GACxByxC,EAAQ,GAAK,EACbA,EAAQzxC,EAAI,GAAK,UAEb0xC,EAAAA,CAAS17B,EAAQC,EAAMC,GACvBpQ,EAAQ,EACL4rC,EAAMhwC,OAAS,GAAA,SACdiwC,EAAOD,EAAMxQ,MACb0Q,EAAQF,EAAMxQ,MACd2Q,EAAqB,EACrBlnC,EAAKoL,EAAgB67B,GACrBhnC,EAAKmL,EAAgB67B,EAAQ,GAC7B/mC,EAAKkL,EAAgB47B,GACrB7mC,EAAKiL,EAAgB47B,EAAO,GACvBhwC,EAAIiwC,EAAQ17B,EAAQvU,EAAIgwC,EAAMhwC,GAAKuU,EAAAA,KAGpC47B,EAAAA,GAFI/7B,EAAgBpU,GAChBoU,EAAgBpU,EAAI,GACyBgJ,EAAIC,EAAIC,EAAIC,GAC7DgnC,EAAoBD,IACpB/rC,EAAQnE,EACRkwC,EAAqBC,GAGzBD,EAAqBrE,IACrBiE,GAAS3rC,EAAQkQ,GAAUE,GAAU,EACjC07B,EAAQ17B,EAASpQ,GACjB4rC,EAAMnuC,KAAKquC,EAAO9rC,GAElBA,EAAQoQ,EAASy7B,GACjBD,EAAMnuC,KAAKuC,EAAO6rC,QAIrBhwC,EAAI,EAAGA,EAAI3B,IAAK2B,EACjB8vC,EAAQ9vC,KACR4vC,EAA0BC,KACtBz7B,EAAgBC,EAASrU,EAAIuU,GACjCq7B,EAA0BC,KACtBz7B,EAAgBC,EAASrU,EAAIuU,EAAS,WAG3Cs7B,EAgGJ,SAAAO,GAAcxpC,EAAOumC,UACjBA,EAAY9kC,KAAKgD,MAAMzE,EAAQumC,GAqBnC,SAAAkD,GAAkBj8B,EAAiBC,EAAQC,EAAKC,EAAQ44B,EAAWyC,EAA2BC,MAE7Fx7B,GAAUC,SACHu7B,MAWP3mC,EAAIC,EARJH,EAAKonC,GAAKh8B,EAAgBC,GAAS84B,GACnClkC,EAAKmnC,GAAKh8B,EAAgBC,EAAS,GAAI84B,GAC3C94B,GAAUE,EAEVq7B,EAA0BC,KAAsB7mC,EAChD4mC,EAA0BC,KAAsB5mC,QAK5CC,EAAKknC,GAAKh8B,EAAgBC,GAAS84B,GACnChkC,EAAKinC,GAAKh8B,EAAgBC,EAAS,GAAI84B,IACvC94B,GAAUE,IACID,SAKVs7B,EAA0BC,KAAsB3mC,EAChD0mC,EAA0BC,KAAsB1mC,EACzC0mC,QAEN3mC,GAAMF,GAAMG,GAAMF,QACpBoL,EAASC,GAAAA,KAER4B,EAAKk6B,GAAKh8B,EAAgBC,GAAS84B,GACnC/2B,EAAKg6B,GAAKh8B,EAAgBC,EAAS,GAAI84B,MAC3C94B,GAAUE,EAEN2B,GAAMhN,GAAMkN,GAAMjN,OAIlB2I,EAAM5I,EAAKF,EACX+I,EAAM5I,EAAKF,EAEXkJ,EAAM+D,EAAKlN,EACXoJ,EAAMgE,EAAKnN,EAIX6I,EAAMM,GAAOL,EAAMI,IACjBL,EAAM,GAAKK,EAAML,GAAQA,GAAOK,GAAQL,EAAM,GAAKK,EAAML,KACzDC,EAAM,GAAKK,EAAML,GAAQA,GAAOK,GAAQL,EAAM,GAAKK,EAAML,IAE3D7I,EAAKgN,EACL/M,EAAKiN,IAMTw5B,EAA0BC,KAAsB3mC,EAChD0mC,EAA0BC,KAAsB1mC,EAChDH,EAAKE,EACLD,EAAKE,EACLD,EAAKgN,EACL/M,EAAKiN,WAGTw5B,EAA0BC,KAAsB3mC,EAChD0mC,EAA0BC,KAAsB1mC,EACzC0mC,ECnSJ,SAAAS,GAA4Bl8B,EAAiBC,EAAQC,EAAKC,EAAQg8B,WACjEx9B,OAAkChP,IAApBwsC,EAAgCA,EAAAA,GAC9CvwC,EAAI,EACCgxB,EAAI3c,EAAQ2c,EAAI1c,EAAK0c,GAAKzc,EAC/BxB,EAAY/S,KAAOoU,EAAgByK,MAAMmS,EAAGA,EAAIzc,UAEpDxB,EAAYhT,OAASC,EACd+S,ECRJ,SAAAy9B,GAAoBp8B,EAAiBC,EAAQC,EAAKC,WACjDk8B,EAAY,EACZznC,EAAKoL,EAAgBE,EAAMC,GAC3BtL,EAAKmL,EAAgBE,EAAMC,EAAS,GACjCF,EAASC,EAAKD,GAAUE,EAAAA,KACvBrL,EAAKkL,EAAgBC,GACrBlL,EAAKiL,EAAgBC,EAAS,GAClCo8B,GAAaxnC,EAAKC,EAAKF,EAAKG,EAC5BH,EAAKE,EACLD,EAAKE,SAEFsnC,EAAY,8CCrBnBC,GAA0B3rC,eACtBlD,EAAgB,SAAUE,EAAGpC,UAC7BkC,EAAgBtD,OAAOyD,gBAAAA,CAChBC,UAAAA,cAA2B7B,OAAAA,SAAmB2B,EAAGpC,GAAKoC,EAAEE,UAAYtC,aAC7DoC,EAAGpC,WAAcuC,KAAKvC,EAAOpB,OAAOU,UAAUqC,eAAea,KAAKxC,EAAGuC,KAAIH,EAAEG,GAAKvC,EAAEuC,MAC3EH,EAAGpC,WAErB,SAAUoC,EAAGpC,GAEhB,SAAAyC,IAAgBtD,KAAKuD,YAAcN,EADnCF,EAAcE,EAAGpC,GAEjBoC,EAAE9C,UAAkB,OAANU,EAAapB,OAAO+D,OAAO3C,IAAMyC,EAAGnD,UAAYU,EAAEV,UAAAA,IAAemD,IAVzD2C,GAgC1B4rC,GAAAA,SAAsCnuC,GAOtC,SAAAouC,EAAoB79B,EAAa07B,OACzB9rC,EAAQH,EAAOL,KAAKrD,OAASA,YAKjC6D,EAAMkuC,WAAa,EAKnBluC,EAAMmuC,mBAAqB,OACR/sC,IAAf0qC,GAA6BruC,MAAMC,QAAQ0S,EAAY,IAKvDpQ,EAAM6rC,eACuDz7B,EAAc07B,GAL3E9rC,EAAM2rC,mBAAmBG,EACK17B,GAM3BpQ,SA1BX+tC,GAAUE,EAAYpuC,GAiCtBouC,EAAW3xC,UAAU+sC,MAAQ,sBACd4E,EAAW9xC,KAAKsV,gBAAgByK,QAAS/f,KAAK+uC,SAS7D+C,EAAW3xC,UAAUmtC,eAAiB,SAAU5jC,EAAGC,EAAG4jC,EAAcC,UAC5DA,EAAAA,GAA8CxtC,KAAK6M,YAAanD,EAAGC,GAC5D6jC,GAEPxtC,KAAKgyC,mBAAqBhyC,KAAKsG,gBAC/BtG,KAAK+xC,UAAYxoC,KAAKgc,KAAAA,GAAqBvlB,KAAKsV,gBAAiB,EAAGtV,KAAKsV,gBAAgBrU,OAAQjB,KAAKyV,OAAQ,IAC9GzV,KAAKgyC,kBAAoBhyC,KAAKsG,kBAERtG,KAAKsV,gBAAiB,EAAGtV,KAAKsV,gBAAgBrU,OAAQjB,KAAKyV,OAAQzV,KAAK+xC,WAAW,EAAMroC,EAAGC,EAAG4jC,EAAcC,KAO3IsE,EAAW3xC,UAAU8xC,QAAU,qBACLjyC,KAAKsV,gBAAiB,EAAGtV,KAAKsV,gBAAgBrU,OAAQjB,KAAKyV,SAOrFq8B,EAAW3xC,UAAU6uC,eAAiB,qBACRhvC,KAAKsV,gBAAiB,EAAGtV,KAAKsV,gBAAgBrU,OAAQjB,KAAKyV,SAOzFq8B,EAAW3xC,UAAUmvC,8BAAgC,SAAUvC,OACvD+D,EAAAA,UACJA,EAA0B7vC,OAAAA,GAAwBjB,KAAKsV,gBAAiB,EAAGtV,KAAKsV,gBAAgBrU,OAAQjB,KAAKyV,OAAQs3B,EAAkB+D,EAA2B,OACvJgB,EAAWhB,EAAAA,KAO1BgB,EAAW3xC,UAAUmuC,QAAU,sBAS/BwD,EAAW3xC,UAAUouC,iBAAmB,SAAU3hC,UACvC,GAQXklC,EAAW3xC,UAAUuvC,eAAiB,SAAUz7B,EAAa07B,GACzD3vC,KAAK4vC,UAAUD,EAAY17B,EAAa,GACnCjU,KAAKsV,kBACNtV,KAAKsV,gBAAAA,IAETtV,KAAKsV,gBAAgBrU,OAAAA,GAA4BjB,KAAKsV,gBAAiB,EAAGrB,EAAajU,KAAKyV,QAC5FzV,KAAKqG,WAEFyrC,EA/GPD,+DChCAK,GAA0BjsC,eACtBlD,EAAgB,SAAUE,EAAGpC,UAC7BkC,EAAgBtD,OAAOyD,gBAAAA,CAChBC,UAAAA,cAA2B7B,OAAAA,SAAmB2B,EAAGpC,GAAKoC,EAAEE,UAAYtC,aAC7DoC,EAAGpC,WAAcuC,KAAKvC,EAAOpB,OAAOU,UAAUqC,eAAea,KAAKxC,EAAGuC,KAAIH,EAAEG,GAAKvC,EAAEuC,MAC3EH,EAAGpC,WAErB,SAAUoC,EAAGpC,GAEhB,SAAAyC,IAAgBtD,KAAKuD,YAAcN,EADnCF,EAAcE,EAAGpC,GAEjBoC,EAAE9C,UAAkB,OAANU,EAAapB,OAAO+D,OAAO3C,IAAMyC,EAAGnD,UAAYU,EAAEV,UAAAA,IAAemD,IAVzD2C,GA2B1BksC,GAAAA,SAAiCzuC,GAMjC,SAAA0uC,EAAen+B,EAAa07B,OACpB9rC,EAAQH,EAAOL,KAAKrD,OAASA,YACjC6D,EAAM6rC,eAAez7B,EAAa07B,GAC3B9rC,SARXquC,GAAUE,EAAO1uC,GAejB0uC,EAAMjyC,UAAU+sC,MAAQ,eAChB5pB,EAAAA,IAAY8uB,EAAMpyC,KAAKsV,gBAAgByK,QAAS/f,KAAK+uC,eACzDzrB,EAAM/a,gBAAgBvI,MACfsjB,GASX8uB,EAAMjyC,UAAUmtC,eAAiB,SAAU5jC,EAAGC,EAAG4jC,EAAcC,OACvDl4B,EAAkBtV,KAAKsV,gBACvBo7B,EAAAA,GAA4BhnC,EAAGC,EAAG2L,EAAgB,GAAIA,EAAgB,OACtEo7B,EAAkBlD,EAAAA,SACd/3B,EAASzV,KAAKyV,OACTvU,EAAI,EAAGA,EAAIuU,IAAUvU,EAC1BqsC,EAAarsC,GAAKoU,EAAgBpU,UAEtCqsC,EAAatsC,OAASwU,EACfi7B,SAGAlD,GAQf4E,EAAMjyC,UAAU6uC,eAAiB,kBACrBhvC,KAAKsV,gBAAuBtV,KAAKsV,gBAAgByK,QAA5CzK,IAOjB88B,EAAMjyC,UAAU4tC,cAAgB,SAAUnhC,UjE+ID6E,EiE9IDzR,KAAKsV,gBjE8IQL,EiE9ISrI,EjE+I1DlD,EAAI+H,EAAW,GACf9H,EAAI8H,EAAW,GACZuD,GAAetL,EAAGC,EAAGD,EAAGC,EAAGsL,GAH/B,IAAsCxD,EAAYwD,EACjDvL,EACAC,GiEzIJyoC,EAAMjyC,UAAUmuC,QAAU,sBAS1B8D,EAAMjyC,UAAUouC,iBAAmB,SAAU3hC,aACvBA,EAAQ5M,KAAKsV,gBAAgB,GAAItV,KAAKsV,gBAAgB,KAO5E88B,EAAMjyC,UAAUuvC,eAAiB,SAAUz7B,EAAa07B,GACpD3vC,KAAK4vC,UAAUD,EAAY17B,EAAa,GACnCjU,KAAKsV,kBACNtV,KAAKsV,gBAAAA,IAETtV,KAAKsV,gBAAgBrU,OLvGtB,SAA2BqU,EAAiBC,EAAQ9D,EAAYgE,WAC1DvU,EAAI,EAAGkB,EAAKqP,EAAWxQ,OAAQC,EAAIkB,IAAMlB,EAC9CoU,EAAgBC,KAAY9D,EAAWvQ,UAEpCqU,EKmGkBtU,CAA2BjB,KAAKsV,gBAAiB,EAAGrB,EAAajU,KAAKyV,QAC3FzV,KAAKqG,WAEF+rC,EAzFPD,aCfG,SAAAE,GAAkC/8B,EAAiBC,EAAQC,EAAKC,EAAQ7I,UACvE0lC,GAAwB1lC,GAK5B,SAAU6E,UACE8gC,GAAqBj9B,EAAiBC,EAAQC,EAAKC,EAAQhE,EAAW,GAAIA,EAAW,OAa9F,SAAA8gC,GAA8Bj9B,EAAiBC,EAAQC,EAAKC,EAAQ/L,EAAGC,WAQtE6oC,EAAK,EACLtoC,EAAKoL,EAAgBE,EAAMC,GAC3BtL,EAAKmL,EAAgBE,EAAMC,EAAS,GACjCF,EAASC,EAAKD,GAAUE,EAAAA,KACvBrL,EAAKkL,EAAgBC,GACrBlL,EAAKiL,EAAgBC,EAAS,GAC9BpL,GAAMR,EACFU,EAAKV,IAAMS,EAAKF,IAAOP,EAAIQ,IAAOT,EAAIQ,IAAOG,EAAKF,GAAM,GACxDqoC,IAGCnoC,GAAMV,IAAMS,EAAKF,IAAOP,EAAIQ,IAAOT,EAAIQ,IAAOG,EAAKF,GAAM,GAC9DqoC,IAEJtoC,EAAKE,EACLD,EAAKE,SAEK,IAAPmoC,EAWJ,SAAAC,GAA+Bn9B,EAAiBC,EAAQm9B,EAAMj9B,EAAQ/L,EAAGC,MACxD,IAAhB+oC,EAAKzxC,cACE,MAENsxC,GAAqBj9B,EAAiBC,EAAQm9B,EAAK,GAAIj9B,EAAQ/L,EAAGC,UAC5D,UAEFzI,EAAI,EAAGkB,EAAKswC,EAAKzxC,OAAQC,EAAIkB,IAAMlB,KACpCqxC,GAAqBj9B,EAAiBo9B,EAAKxxC,EAAI,GAAIwxC,EAAKxxC,GAAIuU,EAAQ/L,EAAGC,UAChE,SAGR,EClEJ,SAAAgpC,GAA8Br9B,EAAiBC,EAAQC,EAAKC,EAAQ7I,OACnEgmC,EAAAA,InE+KInnC,EAAAA,EAAUA,EAAAA,GAAAA,EAAAA,GAAWA,EAAAA,GmE/KgC6J,EAAiBC,EAAQC,EAAKC,cAC3E7I,EAAQgmC,UAGLhmC,EAAQgmC,KAGvBA,EAAkB,IAAMhmC,EAAO,IAAMgmC,EAAkB,IAAMhmC,EAAO,KAGpEgmC,EAAkB,IAAMhmC,EAAO,IAAMgmC,EAAkB,IAAMhmC,EAAO,ICTrE,SAAiB0I,EAAiBC,EAAQC,EAAKC,EAAQnE,WAGtDuhC,EAFAC,EAAAA,CAAUx9B,EAAgBC,GAASD,EAAgBC,EAAS,IAC5Dw9B,EAAAA,GAEGx9B,EAASE,EAASD,EAAKD,GAAUE,EAAAA,IACpCs9B,EAAO,GAAKz9B,EAAgBC,EAASE,GACrCs9B,EAAO,GAAKz9B,EAAgBC,EAASE,EAAS,GAC9Co9B,EAAMvhC,EAASwhC,EAAQC,UAEZF,EAEXC,EAAO,GAAKC,EAAO,GACnBD,EAAO,GAAKC,EAAO,UAEhB,GDFez9B,EAAiBC,EAAQC,EAAKC,GAOpD,SAAUq9B,EAAQC,UnE2nBf,SAA2BnmC,EAAQomC,EAAOx9B,OACzCy9B,GAAa,EACbC,EAAWx+B,GAAuB9H,EAAQomC,GAC1CG,EAASz+B,GAAuB9H,EAAQ4I,MACxC09B,IAAAA,IACAC,IAAAA,GACAF,GAAa,WAGTt+B,EAAO/H,EAAO,GACdgI,EAAOhI,EAAO,GACdiI,EAAOjI,EAAO,GACdkI,EAAOlI,EAAO,GACdwmC,EAASJ,EAAM,GACfK,EAASL,EAAM,GACfM,EAAO99B,EAAI,GACX+9B,EAAO/9B,EAAI,GACXg+B,GAASD,EAAOF,IAAWC,EAAOF,GAClC1pC,OAAAA,EAAYC,OAAAA,EACTwpC,EAAAA,MAAkCD,EAAAA,MAGrCD,GADAvpC,EAAI4pC,GAAQC,EAAOz+B,GAAQ0+B,IACT7+B,GAAQjL,GAAKmL,GAE9Bo+B,KACEE,EAAAA,KACDD,EAAAA,KAGFD,GADAtpC,EAAI4pC,GAAQD,EAAOz+B,GAAQ2+B,IACT5+B,GAAQjL,GAAKmL,GAE9Bm+B,KACEE,EAAAA,KACDD,EAAAA,KAGFD,GADAvpC,EAAI4pC,GAAQC,EAAO3+B,GAAQ4+B,IACT7+B,GAAQjL,GAAKmL,GAE9Bo+B,KACEE,EAAAA,KACDD,EAAAA,KAGFD,GADAtpC,EAAI4pC,GAAQD,EAAO3+B,GAAQ6+B,IACT5+B,GAAQjL,GAAKmL,UAGhCm+B,GmExqBsBrmC,EAAQkmC,EAAQC,SAsD1C,SAAAU,GAAmCn+B,EAAiBC,EAAQm9B,EAAMj9B,EAAQ7I,OA1B1E,SAA8B0I,EAAiBC,EAAQC,EAAKC,EAAQ7I,YACnE+lC,GAAqBr9B,EAAiBC,EAAQC,EAAKC,EAAQ7I,OAGtC0I,EAAiBC,EAAQC,EAAKC,EAAQ7I,EAAO,GAAIA,EAAO,QAGxD0I,EAAiBC,EAAQC,EAAKC,EAAQ7I,EAAO,GAAIA,EAAO,QAGxD0I,EAAiBC,EAAQC,EAAKC,EAAQ7I,EAAO,GAAIA,EAAO,QAGxD0I,EAAiBC,EAAQC,EAAKC,EAAQ7I,EAAO,GAAIA,EAAO,KAc5E8mC,CAAqBp+B,EAAiBC,EAAQm9B,EAAK,GAAIj9B,EAAQ7I,UACzD,KAES,IAAhB8lC,EAAKzxC,cACE,UAEFC,EAAI,EAAGkB,EAAKswC,EAAKzxC,OAAQC,EAAIkB,IAAMlB,QACXoU,EAAiBo9B,EAAKxxC,EAAI,GAAIwxC,EAAKxxC,GAAIuU,EAAQ7I,KACnE+lC,GAAqBr9B,EAAiBo9B,EAAKxxC,EAAI,GAAIwxC,EAAKxxC,GAAIuU,EAAQ7I,UAC9D,SAIZ,EE/FJ,SAAA+mC,GAAqBr+B,EAAiBC,EAAQC,EAAKC,QAC/CF,EAASC,EAAMC,GAAAA,SACTvU,EAAI,EAAGA,EAAIuU,IAAUvU,EAAAA,KACtB+wB,EAAM3c,EAAgBC,EAASrU,GACnCoU,EAAgBC,EAASrU,GAAKoU,EAAgBE,EAAMC,EAASvU,GAC7DoU,EAAgBE,EAAMC,EAASvU,GAAK+wB,EAExC1c,GAAUE,EACVD,GAAOC,GCHR,SAAAm+B,GAA+Bt+B,EAAiBC,EAAQC,EAAKC,WAG5Do+B,EAAO,EACP3pC,EAAKoL,EAAgBE,EAAMC,GAC3BtL,EAAKmL,EAAgBE,EAAMC,EAAS,GACjCF,EAASC,EAAKD,GAAUE,EAAAA,KACvBrL,EAAKkL,EAAgBC,GACrBlL,EAAKiL,EAAgBC,EAAS,GAClCs+B,IAASzpC,EAAKF,IAAOG,EAAKF,GAC1BD,EAAKE,EACLD,EAAKE,SAEO,IAATwpC,OAAa5uC,EAAY4uC,EAAO,EAwEpC,SAAAC,GAA2Bx+B,EAAiBC,EAAQm9B,EAAMj9B,EAAQs+B,WACjEC,OAAsB/uC,IAAd8uC,GAA0BA,EAC7B7yC,EAAI,EAAGkB,EAAKswC,EAAKzxC,OAAQC,EAAIkB,IAAMlB,EAAAA,KACpCsU,EAAMk9B,EAAKxxC,GACX+yC,EAAcL,GAAsBt+B,EAAiBC,EAAQC,EAAKC,IAClD,IAANvU,EACP8yC,GAASC,IAAkBD,IAAUC,EACrCD,IAAUC,IAAkBD,GAASC,OAErB3+B,EAAiBC,EAAQC,EAAKC,GAErDF,EAASC,SAEND,8CChHP2+B,GAA0BjuC,eACtBlD,EAAgB,SAAUE,EAAGpC,UAC7BkC,EAAgBtD,OAAOyD,gBAAAA,CAChBC,UAAAA,cAA2B7B,OAAAA,SAAmB2B,EAAGpC,GAAKoC,EAAEE,UAAYtC,aAC7DoC,EAAGpC,WAAcuC,KAAKvC,EAAOpB,OAAOU,UAAUqC,eAAea,KAAKxC,EAAGuC,KAAIH,EAAEG,GAAKvC,EAAEuC,MAC3EH,EAAGpC,WAErB,SAAUoC,EAAGpC,GAEhB,SAAAyC,IAAgBtD,KAAKuD,YAAcN,EADnCF,EAAcE,EAAGpC,GAEjBoC,EAAE9C,UAAkB,OAANU,EAAapB,OAAO+D,OAAO3C,IAAMyC,EAAGnD,UAAYU,EAAEV,UAAAA,IAAemD,IAVzD2C,GAwC1BkuC,GAAAA,SAAmCzwC,GAanC,SAAA0wC,EAAiBngC,EAAa07B,EAAY0E,OAClCxwC,EAAQH,EAAOL,KAAKrD,OAASA,YAKjC6D,EAAMywC,MAAAA,GAKNzwC,EAAM0wC,4BAA8B,EAKpC1wC,EAAM2wC,mBAAqB,KAK3B3wC,EAAMkuC,WAAa,EAKnBluC,EAAMmuC,mBAAqB,EAK3BnuC,EAAM4wC,mBAAqB,EAK3B5wC,EAAM6wC,yBAA2B,UACdzvC,IAAf0qC,GAA4B0E,GAC5BxwC,EAAM2rC,mBAAmBG,EACK17B,GAC9BpQ,EAAMywC,MAAQD,GAGdxwC,EAAM6rC,eAC8Dz7B,EAAc07B,GAE/E9rC,SA1DXqwC,GAAUE,EAAS1wC,GAiEnB0wC,EAAQj0C,UAAUw0C,iBAAmB,SAAUC,GACtC50C,KAAKsV,kBAICtV,KAAKsV,gBAAiBs/B,EAAW1F,sBAHxClvC,KAAKsV,gBAAkBs/B,EAAW1F,qBAAqBnvB,QAK3D/f,KAAKs0C,MAAMxxC,KAAK9C,KAAKsV,gBAAgBrU,QACrCjB,KAAKqG,WAOT+tC,EAAQj0C,UAAU+sC,MAAQ,eAClB2H,EAAAA,IAAcT,EAAQp0C,KAAKsV,gBAAgByK,QAAS/f,KAAK+uC,OAAQ/uC,KAAKs0C,MAAMv0B,gBAChF80B,EAAQtsC,gBAAgBvI,MACjB60C,GASXT,EAAQj0C,UAAUmtC,eAAiB,SAAU5jC,EAAGC,EAAG4jC,EAAcC,UACzDA,EAAAA,GAA8CxtC,KAAK6M,YAAanD,EAAGC,GAC5D6jC,GAEPxtC,KAAKgyC,mBAAqBhyC,KAAKsG,gBAC/BtG,KAAK+xC,UAAYxoC,KAAKgc,KZ3D3B,SAA8BjQ,EAAiBC,EAAQm9B,EAAMj9B,EAAQnM,WAC/DpI,EAAI,EAAGkB,EAAKswC,EAAKzxC,OAAQC,EAAIkB,IAAMlB,EAAAA,KACpCsU,EAAMk9B,EAAKxxC,GACfoI,EAAM8mC,GAAgB96B,EAAiBC,EAAQC,EAAKC,EAAQnM,GAC5DiM,EAASC,SAENlM,EYqDuBic,CAA0BvlB,KAAKsV,gBAAiB,EAAGtV,KAAKs0C,MAAOt0C,KAAKyV,OAAQ,IAClGzV,KAAKgyC,kBAAoBhyC,KAAKsG,eZwDnC,SAAiCgP,EAAiBC,EAAQm9B,EAAMj9B,EAAQ86B,EAAUC,EAAQ9mC,EAAGC,EAAG4jC,EAAcC,EAAoBiD,WACjIE,EAAWF,GAAeA,CAAgB5C,IAAKA,KAC1C3sC,EAAI,EAAGkB,EAAKswC,EAAKzxC,OAAQC,EAAIkB,IAAMlB,EAAAA,KACpCsU,EAAMk9B,EAAKxxC,GACfssC,EAAqB8C,GAAmBh7B,EAAiBC,EAAQC,EAAKC,EAAQ86B,EAAUC,EAAQ9mC,EAAGC,EAAG4jC,EAAcC,EAAoBmD,GACxIp7B,EAASC,SAENg4B,GY7D4BxtC,KAAKsV,gBAAiB,EAAGtV,KAAKs0C,MAAOt0C,KAAKyV,OAAQzV,KAAK+xC,WAAW,EAAMroC,EAAGC,EAAG4jC,EAAcC,KAO/H4G,EAAQj0C,UAAUstC,WAAa,SAAU/jC,EAAGC,aACX3J,KAAK80C,6BAA8B,EAAG90C,KAAKs0C,MAAOt0C,KAAKyV,OAAQ/L,EAAGC,IAOnGyqC,EAAQj0C,UAAU8xC,QAAU,kBR9HzB,SAAqB38B,EAAiBC,EAAQm9B,EAAMj9B,WACnDS,EAAO,EACFhV,EAAI,EAAGkB,EAAKswC,EAAKzxC,OAAQC,EAAIkB,IAAMlB,EAAAA,KACpCsU,EAAMk9B,EAAKxxC,GACfgV,GAAQw7B,GAAWp8B,EAAiBC,EAAQC,EAAKC,GACjDF,EAASC,SAENU,GQwHoBlW,KAAK80C,6BAA8B,EAAG90C,KAAKs0C,MAAOt0C,KAAKyV,SAelF2+B,EAAQj0C,UAAU6uC,eAAiB,SAAU+E,OACrCz+B,cACcrQ,IAAd8uC,KACAz+B,EAAkBtV,KAAK80C,6BAA6B/0B,QACjB,EAAG/f,KAAKs0C,MAAOt0C,KAAKyV,OAAQs+B,GAG/Dz+B,EAAkBtV,KAAKsV,gBTvJ5B,SAAiCA,EAAiBC,EAAQm9B,EAAMj9B,EAAQs/B,WACvEC,OAAoC/vC,IAArB8vC,EAAiCA,EAAAA,GAChD7zC,EAAI,EACCgxB,EAAI,EAAG+iB,EAAKvC,EAAKzxC,OAAQixB,EAAI+iB,IAAM/iB,EAAAA,KACpC1c,EAAMk9B,EAAKxgB,GACf8iB,EAAa9zC,KAAOswC,GAAmBl8B,EAAiBC,EAAQC,EAAKC,EAAQu/B,EAAa9zC,IAC1FqU,EAASC,SAEbw/B,EAAa/zC,OAASC,EACf8zC,GSgJ4B1/B,EAAiB,EAAGtV,KAAKs0C,MAAOt0C,KAAKyV,SAKxE2+B,EAAQj0C,UAAU+0C,QAAU,kBACjBl1C,KAAKs0C,OAKhBF,EAAQj0C,UAAUg1C,qBAAuB,cACjCn1C,KAAKu0C,4BAA8Bv0C,KAAKsG,cAAAA,KACpC8uC,EAAAA,GAAuBp1C,KAAK6M,aAChC7M,KAAKw0C,mBCjLV,SAAiCl/B,EAAiBC,EAAQm9B,EAAMj9B,EAAQ4/B,EAAaC,EAAmBvJ,WACvG7qC,EAAGkB,EAAIsH,EAAGQ,EAAIE,EAAID,EAAIE,EACtBV,EAAI0rC,EAAYC,EAAoB,GAEpCC,EAAAA,GAEKzqC,EAAI,EAAG0qC,EAAK9C,EAAKzxC,OAAQ6J,EAAI0qC,IAAM1qC,EAAAA,KACpC0K,EAAMk9B,EAAK5nC,OACfZ,EAAKoL,EAAgBE,EAAMC,GAC3BtL,EAAKmL,EAAgBE,EAAMC,EAAS,GAC/BvU,EAAIqU,EAAQrU,EAAIsU,EAAKtU,GAAKuU,EAC3BrL,EAAKkL,EAAgBpU,GACrBmJ,EAAKiL,EAAgBpU,EAAI,IACpByI,GAAKQ,GAAME,GAAMV,GAAOQ,GAAMR,GAAKA,GAAKU,KACzCX,GAAMC,EAAIQ,IAAOE,EAAKF,IAAQC,EAAKF,GAAMA,EACzCqrC,EAAczyC,KAAK4G,IAEvBQ,EAAKE,EACLD,EAAKE,MAKTorC,EAAS5H,IACT6H,GAAAA,EAAAA,MACJH,EAAcxX,KAAAA,GACd7zB,EAAKqrC,EAAc,GACdr0C,EAAI,EAAGkB,EAAKmzC,EAAct0C,OAAQC,EAAIkB,IAAMlB,EAAAA,CAC7CkJ,EAAKmrC,EAAcr0C,OACfy0C,EAAgBpsC,KAAKklB,IAAIrkB,EAAKF,GAC9ByrC,EAAgBD,MAEUpgC,EAAiBC,EAAQm9B,EAAMj9B,EADzD/L,GAAKQ,EAAKE,GAAM,EACoDT,KAChE8rC,EAAS/rC,EACTgsC,EAAmBC,GAG3BzrC,EAAKE,SAEL4jC,MAAMyH,KAGNA,EAASJ,EAAYC,IAErBvJ,GACAA,EAASjpC,KAAK2yC,EAAQ9rC,EAAG+rC,GAClB3J,IAGC0J,EAAQ9rC,EAAG+rC,GDgIVlB,CAA6Cx0C,KAAK80C,6BAA8B,EAAG90C,KAAKs0C,MAAOt0C,KAAKyV,OAAQ2/B,EAAY,GAC7Hp1C,KAAKu0C,2BAA6Bv0C,KAAKsG,qBAEpCtG,KAAKw0C,oBAQhBJ,EAAQj0C,UAAUy1C,iBAAmB,iCAChB51C,KAAKm1C,uBAAAA,KAS1Bf,EAAQj0C,UAAU01C,mBAAqB,kBAC5B71C,KAAKs0C,MAAMrzC,QAYtBmzC,EAAQj0C,UAAU21C,cAAgB,SAAUzwC,UACpCA,EAAQ,GAAKrF,KAAKs0C,MAAMrzC,QAAUoE,EAC3B,oBAEWrF,KAAKsV,gBAAgByK,MAAgB,IAAV1a,EAAc,EAAIrF,KAAKs0C,MAAMjvC,EAAQ,GAAIrF,KAAKs0C,MAAMjvC,IAASrF,KAAK+uC,SAOvHqF,EAAQj0C,UAAU41C,eAAiB,mBAC3BhH,EAAS/uC,KAAK+uC,OACdz5B,EAAkBtV,KAAKsV,gBACvBo9B,EAAO1yC,KAAKs0C,MACZ0B,EAAAA,GACAzgC,EAAS,EACJrU,EAAI,EAAGkB,EAAKswC,EAAKzxC,OAAQC,EAAIkB,IAAMlB,EAAAA,KACpCsU,EAAMk9B,EAAKxxC,GACX0zC,EAAAA,IAAAA,GAAAA,QAA4Bt/B,EAAgByK,MAAMxK,EAAQC,GAAMu5B,GACpEiH,EAAYlzC,KAAK8xC,GACjBr/B,EAASC,SAENwgC,GAKX5B,EAAQj0C,UAAU20C,2BAA6B,cACvC90C,KAAKy0C,mBAAqBz0C,KAAKsG,cAAAA,KAC3BgP,EAAkBtV,KAAKsV,iBDzNhC,SAAgCA,EAAiBC,EAAQm9B,EAAMj9B,EAAQs+B,WACtEC,OAAsB/uC,IAAd8uC,GAA0BA,EAC7B7yC,EAAI,EAAGkB,EAAKswC,EAAKzxC,OAAQC,EAAIkB,IAAMlB,EAAAA,KACpCsU,EAAMk9B,EAAKxxC,GACX+yC,EAAcL,GAAsBt+B,EAAiBC,EAAQC,EAAKC,MAC5D,IAANvU,MACK8yC,GAASC,IAAkBD,IAAUC,SAC/B,UAIND,IAAUC,IAAkBD,GAASC,SAC/B,EAGf1+B,EAASC,SAEN,GCyM4BF,EAAiB,EAAGtV,KAAKs0C,MAAOt0C,KAAKyV,SAI5DzV,KAAK00C,yBAA2Bp/B,EAAgByK,QAChD/f,KAAK00C,yBAAyBzzC,OAAAA,GAA2BjB,KAAK00C,yBAA0B,EAAG10C,KAAKs0C,MAAOt0C,KAAKyV,SAJ5GzV,KAAK00C,yBAA2Bp/B,EAMpCtV,KAAKy0C,kBAAoBz0C,KAAKsG,qBAE3BtG,KAAK00C,0BAOhBN,EAAQj0C,UAAUmvC,8BAAgC,SAAUvC,OACpD+D,EAAAA,GACAmF,EAAAA,UACJnF,EAA0B7vC,OVqC3B,SAAuBqU,EAAiBC,EAAQm9B,EAAMj9B,EAAQ44B,EAAWyC,EAA2BC,EAAkBkF,WAChH/0C,EAAI,EAAGkB,EAAKswC,EAAKzxC,OAAQC,EAAIkB,IAAMlB,EAAAA,KACpCsU,EAAMk9B,EAAKxxC,GACf6vC,EAAmBQ,GAASj8B,EAAiBC,EAAQC,EAAKC,EAAQ44B,EAAWyC,EAA2BC,GACxGkF,EAAenzC,KAAKiuC,GACpBx7B,EAASC,SAENu7B,EU5CuB9vC,CAAuBjB,KAAKsV,gBAAiB,EAAGtV,KAAKs0C,MAAOt0C,KAAKyV,OAAQlM,KAAKgc,KAAKwnB,GAAmB+D,EAA2B,EAAGmF,OACnJ7B,EAAQtD,EAAAA,GAA8CmF,IAOrE7B,EAAQj0C,UAAUmuC,QAAU,sBAS5B8F,EAAQj0C,UAAUouC,iBAAmB,SAAU3hC,aACV5M,KAAK80C,6BAA8B,EAAG90C,KAAKs0C,MAAOt0C,KAAKyV,OAAQ7I,IAQpGwnC,EAAQj0C,UAAUuvC,eAAiB,SAAUz7B,EAAa07B,GACtD3vC,KAAK4vC,UAAUD,EAAY17B,EAAa,GACnCjU,KAAKsV,kBACNtV,KAAKsV,gBAAAA,QAELo9B,EX9QL,SAAiCp9B,EAAiBC,EAAQy/B,EAAcv/B,EAAQ4+B,WAC/E3B,EAAO2B,GAAWA,GAClBnzC,EAAI,EACCgxB,EAAI,EAAG+iB,EAAKD,EAAa/zC,OAAQixB,EAAI+iB,IAAM/iB,EAAAA,KAC5C1c,EAAMo7B,GAAmBt7B,EAAiBC,EAAQy/B,EAAa9iB,GAAIzc,GACvEi9B,EAAKxxC,KAAOsU,EACZD,EAASC,SAEbk9B,EAAKzxC,OAASC,EACPwxC,EWqQCA,CAA+B1yC,KAAKsV,gBAAiB,EAAGrB,EAAajU,KAAKyV,OAAQzV,KAAKs0C,OAC3Ft0C,KAAKsV,gBAAgBrU,OAAyB,IAAhByxC,EAAKzxC,OAAe,EAAIyxC,EAAKA,EAAKzxC,OAAS,GACzEjB,KAAKqG,WAEF+tC,EAlRPD,aAmTG,SAAA+B,GAAoBtpC,OACnB+H,EAAO/H,EAAO,GACdgI,EAAOhI,EAAO,GACdiI,EAAOjI,EAAO,GACdkI,EAAOlI,EAAO,GACd0I,EAAAA,CACAX,EACAC,EACAD,EACAG,EACAD,EACAC,EACAD,EACAD,EACAD,EACAC,cAEOu/B,GAAQ7+B,EAAAA,GAAgC6gC,CAC/C7gC,EAAgBrU,gGE7WpBm1C,GAA0BnwC,eACtBlD,EAAgB,SAAUE,EAAGpC,UAC7BkC,EAAgBtD,OAAOyD,gBAAAA,CAChBC,UAAAA,cAA2B7B,OAAAA,SAAmB2B,EAAGpC,GAAKoC,EAAEE,UAAYtC,aAC7DoC,EAAGpC,WAAcuC,KAAKvC,EAAOpB,OAAOU,UAAUqC,eAAea,KAAKxC,EAAGuC,KAAIH,EAAEG,GAAKvC,EAAEuC,MAC3EH,EAAGpC,WAErB,SAAUoC,EAAGpC,GAEhB,SAAAyC,IAAgBtD,KAAKuD,YAAcN,EADnCF,EAAcE,EAAGpC,GAEjBoC,EAAE9C,UAAkB,OAANU,EAAapB,OAAO+D,OAAO3C,IAAMyC,EAAGnD,UAAYU,EAAEV,UAAAA,IAAemD,IAVzD2C,GA6Q1BowC,GAAAA,SAAgC3yC,GAKhC,SAAA4yC,EAAchmC,OACNzM,EAAQH,EAAOL,KAAKrD,OAASA,KAC7BmL,EAAAA,EAAAA,GAAqBmF,UAKzBzM,EAAM0yC,OAAAA,CAAU,EAAG,GAKnB1yC,EAAM2yC,YAAAA,GAKN3yC,EAAM4yC,oBAMN5yC,EAAM2wB,YAAAA,GAA+BrpB,EAAQiG,WAAY,aAKzDvN,EAAM6yC,cAAAA,CAAiB,IAAK,KAK5B7yC,EAAM8yC,cAAgB,KAKtB9yC,EAAM6vB,kBAKN7vB,EAAM+yC,gBAKN/yC,EAAMgzC,mBAAgB5xC,EAClBkG,EAAQuL,SACRvL,EAAQuL,OAAAA,GAA4BvL,EAAQuL,OAAQ7S,EAAM2wB,cAE1DrpB,EAAQyB,SACRzB,EAAQyB,OAAAA,GAAwBzB,EAAQyB,OAAQ/I,EAAM2wB,cAE1D3wB,EAAMizC,cAAc3rC,GACbtH,SA5DXuyC,GAAUE,EAAM5yC,GAkEhB4yC,EAAKn2C,UAAU22C,cAAgB,SAAU3rC,OAKjC4rC,EAssCL,SAAoC5rC,OACnC6rC,EACAxrC,EACAE,EAGAurC,EAAiB,GACjBC,EAAoB,EACpBvrC,OAA8B1G,IAApBkG,EAAQQ,QAAwBR,EAAQQ,QA/1CnC,EAg2CfC,OAA8B3G,IAApBkG,EAAQS,QAAwBT,EAAQS,QAAUqrC,EAC5DE,OAAoClyC,IAAvBkG,EAAQgsC,WAA2BhsC,EAAQgsC,WAAaD,EACrEE,OAAoCnyC,IAAvBkG,EAAQisC,YAA2BjsC,EAAQisC,WACxDjN,OAAgDllC,IAAvCkG,EAAQksC,4BACflsC,EAAQksC,2BAEVvM,OAA4C7lC,IAA3BkG,EAAQ2/B,gBAA+B3/B,EAAQ2/B,eAChE15B,EAAAA,GAA8BjG,EAAQiG,WAAY,aAClDkmC,EAAalmC,EAAWvE,YACxB0qC,EAAsBpsC,EAAQosC,oBAC9B3qC,EAASzB,EAAQyB,OAChBwqC,GAAexqC,IAAUwE,EAAWgR,aACrCm1B,GAAsB,EACtB3qC,EAAS0qC,WAEeryC,IAAxBkG,EAAQ6qB,YAAgB/wB,KACpB+wB,EAAc7qB,EAAQ6qB,YAC1BxqB,EAAgBwqB,EAAYrqB,GAC5BD,OAC6BzG,IAAzB+wB,EAAYpqB,GACNoqB,EAAYpqB,GACZoqB,EAAYA,EAAY/0B,OAAS,GAEvC+1C,EADA7rC,EAAQqsC,oBrB9/Cb,SAAiCxhB,EAAamV,EAAYC,EAAeC,mBASlEp7B,EAAYjP,EAAW4V,EAAMwzB,WAChBnlC,IAAfgL,EAAehL,KACXuG,EAAgBwqB,EAAY,GAC5BtqB,EAAgBsqB,EAAYA,EAAY/0B,OAAS,GACjDqqC,EAAeF,EACbT,GAA6Bn/B,EAAe4/B,EAAex0B,EAAMy0B,GACjE7/B,KAEF4+B,cAC4BnlC,IAAfkmC,GAA2BA,EAIjCF,GAA2Bh7B,EAAYq7B,EAAc5/B,MAF3CuE,EAAYvE,EAAe4/B,OAI5CmM,EAASluC,KAAKF,IAAIiiC,EAAcr7B,GAChCynC,EAAInuC,KAAK8c,MAAAA,EAAwB2P,EAAayhB,EAAQz2C,WACtDg1B,EAAY0hB,GAAKpM,GAAgBoM,EAAI1hB,EAAY/0B,OAAS,EACnD+0B,EAAY0hB,EAAI,GAEpB1hB,EAAY0hB,KqBk+CnBV,CAA+ChhB,EAAamU,GAASoN,GAAuB3qC,EAAQk+B,GAGpGkM,GAA8CxrC,EAAeE,EAAey+B,GAASoN,GAAuB3qC,EAAQk+B,YASpH6M,GAJQL,EAGN/tC,KAAKD,IAAAA,GAAaguC,GAAAA,GAAuBA,IADtC,IAAA32B,GAAAD,IAAwCtP,EAAW6Q,oBAEjCrL,GAA2BrN,KAAKmiC,IAAIwL,EAn4ChD,GAo4CXU,EAAuBD,EACvBpuC,KAAKmiC,IAAIwL,EAAmBD,EAr4CjB,QAw4COhyC,KADtBuG,EAAgBL,EAAQK,eAEpBG,EAAU,EAGVH,EAAgBmsC,EAAuBpuC,KAAKmiC,IAAIyL,EAAYxrC,QAI1C1G,KADtByG,EAAgBP,EAAQO,iBAIZA,OAFgBzG,IAApBkG,EAAQS,aACsB3G,IAA1BkG,EAAQK,cACQA,EAAgBjC,KAAKmiC,IAAIyL,EAAYvrC,GAGrC+rC,EAAuBpuC,KAAKmiC,IAAIyL,EAAYvrC,GAIhDgsC,GAIxBhsC,EACID,EACIpC,KAAK8c,MAAM9c,KAAKQ,IAAIyB,EAAgBE,GAAiBnC,KAAKQ,IAAIotC,IACtEzrC,EAAgBF,EAAgBjC,KAAKmiC,IAAIyL,EAAYvrC,EAAUD,GAE3DqrC,EADA7rC,EAAQqsC,oBrB7/Cb,SAA2BK,EAAOrsC,EAAessC,EAAmB3M,EAAYC,EAAeC,mBASxFp7B,EAAYjP,EAAW4V,EAAMwzB,WAChBnlC,IAAfgL,EAAehL,KACXqmC,EAAeF,EACbT,GAA6Bn/B,EAAe4/B,EAAex0B,EAAMy0B,GACjE7/B,EACFE,OAAsCzG,IAAtB6yC,EAAkCA,EAAoB,KAEtE1N,cAC4BnlC,IAAfkmC,GAA2BA,EAIjCF,GAA2Bh7B,EAAYq7B,EAAc5/B,MAF3CuE,EAAYvE,EAAe4/B,OAK5CyM,EAAexuC,KAAK6jB,KAAK7jB,KAAKQ,IAAIyB,EAAgB8/B,GAAgB/hC,KAAKQ,IAAI8tC,GAD/D,MAEZtiC,GAAUvU,GAAa,GAFX,MAE8B,GAC1Cy2C,EAASluC,KAAKF,IAAIiiC,EAAcr7B,GAChC+nC,EAAkBzuC,KAAK8c,MAAM9c,KAAKQ,IAAIyB,EAAgBisC,GAAUluC,KAAKQ,IAAI8tC,GAAStiC,GAClF0iC,EAAY1uC,KAAKD,IAAIyuC,EAAcC,aACnBxsC,EAAgBjC,KAAKmiC,IAAImM,EAAOI,GACxBvsC,EAAe4/B,KqBg+C3C0L,CAAyCG,EAAY3rC,EAAeE,EAAey+B,GAASoN,GAAuB3qC,EAAQk+B,GAG3HkM,GAA8CxrC,EAAeE,EAAey+B,GAASoN,GAAuB3qC,EAAQk+B,UAIxHoN,WAAYlB,EACZxrC,cAAeA,EACfE,cAAeA,EACfC,QAASA,EACTwrC,WAAYA,GA7xCmBgB,CAA2BhtC,GAK1DnL,KAAKo4C,eAAiBrB,EAAyBvrC,cAK/CxL,KAAKq4C,eAAiBtB,EAAyBrrC,cAK/C1L,KAAKs4C,YAAcvB,EAAyBI,WAK5Cn3C,KAAK+1B,aAAe5qB,EAAQ6qB,YAU5Bh2B,KAAKu4C,QAAUptC,EAAQotC,QAKvBv4C,KAAKw4C,SAAWzB,EAAyBprC,YACrC8sC,EA6oCL,SAAgCttC,WACZlG,IAAnBkG,EAAQyB,OAAW3H,KACfklC,OAA4CllC,IAAnCkG,EAAQutC,wBACfvtC,EAAQutC,iCAEMvtC,EAAQyB,OAAQzB,EAAQosC,oBAAqBpN,OAEjE/4B,EAAAA,GAA8BjG,EAAQiG,WAAY,iBAC3B,IAAvBjG,EAAQisC,YAAuBhmC,EAAWgR,WAAAA,KACtCxV,EAASwE,EAAWvE,YAAYkT,eACpCnT,EAAO,IAAMnB,EAAAA,EACbmB,EAAO,GAAKnB,EAAAA,KACQmB,GAAQ,GAAO,aAzpCZ+rC,CAAuBxtC,GAC1C6rC,EAAuBD,EAAyBmB,WAChDU,EA8vCL,SAAkCztC,WACWlG,IAA3BkG,EAAQ0tC,gBAA+B1tC,EAAQ0tC,eAChEA,KACIC,EAAoB3tC,EAAQ2tC,8BACN7zC,IAAtB6zC,IAAyD,IAAtBA,GpBhkDvCzK,EAAY0K,GAAAA,GAA2B,YAOjCpiC,EAAUyzB,UACZA,EACOzzB,OAEM1R,IAAb0R,EACIpN,KAAKklB,IAAI9X,IAAa03B,EACf,EAGA13B,YoBmjDgB,IAAtBmiC,KAG6B,iBAAtBA,GpBhmDMv5C,EoBimDGu5C,EpBhmDzBE,EAAS,EAAIzvC,KAAKqB,GAAMrL,WAOlBoX,EAAUyzB,UACZA,EACOzzB,OAEM1R,IAAb0R,EACAA,EAAWpN,KAAK8c,MAAM1P,EAAWqiC,EAAQ,IAAOA,wBAbrD,IAAuBz5C,EACtBy5C,EAwBD,IAA0BD,EACzB1K,EoB8TyB4K,CAAyB9tC,GAKlDnL,KAAKk5C,aAAAA,CACDxiC,OAAQ+hC,EACRxoC,WAAY+mC,EACZrgC,SAAUiiC,GAEd54C,KAAKm5C,iBAAiCl0C,IAArBkG,EAAQwL,SAAyBxL,EAAQwL,SAAW,GACrE3W,KAAKo5C,uBAAqCn0C,IAAnBkG,EAAQuL,OAAuBvL,EAAQuL,OAAS,WAC5CzR,IAAvBkG,EAAQ8E,WACRjQ,KAAKq5C,cAAcluC,EAAQ8E,iBAELhL,IAAjBkG,EAAQ+E,MACblQ,KAAKs5C,QAAQnuC,EAAQ+E,MAEzBlQ,KAAK6H,cAzDDuD,IA8DJpL,KAAKu5C,SAAWpuC,GAUpBmrC,EAAKn2C,UAAUq5C,mBAAqB,SAAUC,OACtCtuC,EAAAA,EAAAA,GAAqBnL,KAAKu5C,sBAEHt0C,IAAvBkG,EAAQ8E,WACR9E,EAAQ8E,WAAajQ,KAAK4pB,gBAG1Bze,EAAQ+E,KAAOlQ,KAAK05C,UAGxBvuC,EAAQuL,OAAS1W,KAAK25C,oBAEtBxuC,EAAQwL,SAAW3W,KAAK45C,mBACNzuC,EAASsuC,IAmC/BnD,EAAKn2C,UAAU05C,QAAU,SAAUC,GAC3B95C,KAAK+5C,UAAY/5C,KAAKg6C,gBACtBh6C,KAAKi6C,mBAAmB,WAExBC,EAAAA,IAAW54C,MAAMe,UAAUpB,QACtBC,EAAI,EAAGA,EAAIg5C,EAAKj5C,SAAUC,EAAAA,KAC3BiK,EAAU9I,UAAUnB,GACpBiK,EAAQuL,UACRvL,EAAAA,EAAAA,GAAqBA,IACbuL,OAAAA,GAA4BvL,EAAQuL,OAAQ1W,KAAKk0B,kBAEzD/oB,EAAQ8iC,UACR9iC,EAAAA,EAAAA,GAAqBA,IACb8iC,OAAAA,GAA4B9iC,EAAQ8iC,OAAQjuC,KAAKk0B,kBAE7DgmB,EAAKh5C,GAAKiK,EAEdnL,KAAKm6C,gBAAgBv0C,MAAM5F,KAAMk6C,IAKrC5D,EAAKn2C,UAAUg6C,gBAAkB,SAAUL,OAEnCxoC,EADA8oC,EAAiB/3C,UAAUpB,UAE3Bm5C,EAAiB,GACwB,mBAAlC/3C,UAAU+3C,EAAiB,KAClC9oC,EAAWjP,UAAU+3C,EAAiB,KACpCA,IAEDp6C,KAAK+5C,QAAAA,KAEF5tC,EAAQ9J,UAAU+3C,EAAiB,UACnCjuC,EAAMuK,QACN1W,KAAKo5C,kBAAkBjtC,EAAMuK,aAEdzR,IAAfkH,EAAM+D,MACNlQ,KAAKs5C,QAAQntC,EAAM+D,WAEAjL,IAAnBkH,EAAMwK,UACN3W,KAAKm5C,YAAYhtC,EAAMwK,eAEvBrF,GACA+oC,GAAkB/oC,GAAU,YAIhC0hC,EAAQsH,KAAKC,MACb7jC,EAAS1W,KAAK22C,cAAc52B,QAC5B9P,EAAajQ,KAAK0zB,kBAClB/c,EAAW3W,KAAK42C,gBAChB4D,EAAAA,GACKt5C,EAAI,EAAGA,EAAIk5C,IAAkBl5C,EAAAA,KAC9BiK,EAA2C9I,UAAUnB,GACrDu5C,EAAAA,CACAzH,MAAOA,EACP0H,UAAU,EACVzM,OAAQ9iC,EAAQ8iC,OAChB0M,cAA+B11C,IAArBkG,EAAQwvC,SAAyBxvC,EAAQwvC,SAAW,IAC9DC,OAAQzvC,EAAQyvC,QAAAA,GAChBtpC,SAAUA,MAEVnG,EAAQuL,SACR+jC,EAAUxqB,aAAevZ,EACzB+jC,EAAU1qB,aAAe5kB,EAAQuL,OAAOqJ,QACxCrJ,EAAS+jC,EAAU1qB,mBAEF9qB,IAAjBkG,EAAQ+E,MACRuqC,EAAUvqB,iBAAmBjgB,EAC7BwqC,EAAUzqB,iBAAmBhwB,KAAK66C,qBAAqB1vC,EAAQ+E,MAC/DD,EAAawqC,EAAUzqB,kBAElB7kB,EAAQ8E,aACbwqC,EAAUvqB,iBAAmBjgB,EAC7BwqC,EAAUzqB,iBAAmB7kB,EAAQ8E,WACrCA,EAAawqC,EAAUzqB,uBAEF/qB,IAArBkG,EAAQwL,SAAa1R,CACrBw1C,EAAUK,eAAiBnkC,MACvBokC,EAAAA,GAAe5vC,EAAQwL,SAAWA,EAAWpN,KAAKqB,GAAI,EAAIrB,KAAKqB,IAAMrB,KAAKqB,GAC9E6vC,EAAUO,eAAiBrkC,EAAWokC,EACtCpkC,EAAW8jC,EAAUO,eAGrBC,GAAgBR,GAChBA,EAAUC,UAAW,EAIrB1H,GAASyH,EAAUE,SAEvBH,EAAO13C,KAAK23C,GAEhBz6C,KAAKw2C,YAAY1zC,KAAK03C,GACtBx6C,KAAKk7C,QAAAA,GAA4B,GACjCl7C,KAAKm7C,qBAOT7E,EAAKn2C,UAAU65C,aAAe,kBACnBh6C,KAAKu2C,OAAAA,IAA6B,GAO7CD,EAAKn2C,UAAUi7C,eAAiB,kBACrBp7C,KAAKu2C,OAAAA,IAA+B,GAM/CD,EAAKn2C,UAAUk7C,iBAAmB,eAE1BpN,EADJjuC,KAAKk7C,QAAAA,IAA6Bl7C,KAAKu2C,OAAAA,aAE9Br1C,EAAI,EAAGkB,EAAKpC,KAAKw2C,YAAYv1C,OAAQC,EAAIkB,IAAMlB,EAAAA,KAChDs5C,EAASx6C,KAAKw2C,YAAYt1C,MAC1Bs5C,EAAO,GAAGlpC,UACV+oC,GAAkBG,EAAO,GAAGlpC,UAAU,IAErC28B,UACQ/b,EAAI,EAAG+iB,EAAKuF,EAAOv5C,OAAQixB,EAAI+iB,IAAM/iB,EAAAA,KACtCuoB,EAAYD,EAAOtoB,OAClBuoB,EAAUC,SAAAA,CACXzM,EAASwM,EAAUxM,eAMnCjuC,KAAKw2C,YAAYv1C,OAAS,EAC1BjB,KAAK62C,cAAgB5I,GAKzBqI,EAAKn2C,UAAUg7C,kBAAoB,mBACEl2C,IAA7BjF,KAAKy2C,sBACL6E,qBAAqBt7C,KAAKy2C,qBAC1Bz2C,KAAKy2C,yBAAsBxxC,GAE1BjF,KAAKg6C,wBAGNO,EAAMD,KAAKC,MACXgB,GAAO,EACFr6C,EAAIlB,KAAKw2C,YAAYv1C,OAAS,EAAGC,GAAK,IAAKA,EAAAA,SAC5Cs5C,EAASx6C,KAAKw2C,YAAYt1C,GAC1Bs6C,GAAiB,EACZtpB,EAAI,EAAG+iB,EAAKuF,EAAOv5C,OAAQixB,EAAI+iB,IAAM/iB,EAAAA,KACtCuoB,EAAYD,EAAOtoB,OACnBuoB,EAAUC,cAGVe,EAAUlB,EAAME,EAAUzH,MAC1B0I,EAAWjB,EAAUE,SAAW,EAAIc,EAAUhB,EAAUE,SAAW,EACnEe,GAAY,GACZjB,EAAUC,UAAW,EACrBgB,EAAW,GAGXF,GAAiB,MAEjBG,EAAWlB,EAAUG,OAAOc,MAC5BjB,EAAUxqB,aAAAA,KACN9Y,EAAKsjC,EAAUxqB,aAAa,GAC5B5Y,EAAKojC,EAAUxqB,aAAa,GAG5BvmB,EAAIyN,EAAKwkC,GAFJlB,EAAU1qB,aAAa,GAEF5Y,GAC1BxN,EAAI0N,EAAKskC,GAFJlB,EAAU1qB,aAAa,GAEF1Y,GAC9BrX,KAAK22C,cAAAA,CAAiBjtC,EAAGC,MAEzB8wC,EAAUvqB,kBAAoBuqB,EAAUzqB,iBAAAA,KACpC/f,EAA0B,IAAb0rC,EACXlB,EAAUzqB,iBACVyqB,EAAUvqB,iBACRyrB,GACKlB,EAAUzqB,iBAAmByqB,EAAUvqB,qBAChDuqB,EAAUxM,OAAAA,KACNr3B,EAAO5W,KAAK47C,iBAAiB57C,KAAK45C,eAClCiC,EAAwB77C,KAAKk5C,aAAajpC,WAAWA,EAAY,EAAG2G,GAAM,GAC9E5W,KAAK22C,cAAgB32C,KAAK87C,oBAAoBD,EAAuBpB,EAAUxM,QAEnFjuC,KAAK0zB,kBAAoBzjB,EACzBjQ,KAAK+7C,mBAAkB,WAEM92C,IAA7Bw1C,EAAUK,qBACmB71C,IAA7Bw1C,EAAUO,eAAmB/1C,KACzB0R,EAAwB,IAAbglC,EAAa9wC,GACf4vC,EAAUO,eAAiBzxC,KAAKqB,GAAI,EAAIrB,KAAKqB,IAClDrB,KAAKqB,GACP6vC,EAAUK,eACRa,GACKlB,EAAUO,eAAiBP,EAAUK,mBAC9CL,EAAUxM,OAAAA,KACN+N,EAAsBh8C,KAAKk5C,aAAaviC,SAASA,GAAU,GAC/D3W,KAAK22C,cAAgB32C,KAAKi8C,sBAAsBD,EAAqBvB,EAAUxM,QAEnFjuC,KAAK42C,gBAAkBjgC,KAE3B3W,KAAK+7C,mBAAkB,GACvBR,GAAO,GACFd,EAAUC,mBAIfc,EAAAA,CACAx7C,KAAKw2C,YAAYt1C,GAAK,KACtBlB,KAAKk7C,QAAAA,IAA6B,OAC9B5pC,EAAWkpC,EAAO,GAAGlpC,SACrBA,GACA+oC,GAAkB/oC,GAAU,IAKxCtR,KAAKw2C,YAAcx2C,KAAKw2C,YAAY0F,OAAOC,SACvCZ,QAAqCt2C,IAA7BjF,KAAKy2C,sBACbz2C,KAAKy2C,oBAAsB2F,sBAAsBp8C,KAAKm7C,kBAAkBz1C,KAAK1F,UAQrFs2C,EAAKn2C,UAAU87C,sBAAwB,SAAUtlC,EAAUs3B,OACnDv3B,E1DjpBQjF,EAAYspC,E0DkpBpBsB,EAAgBr8C,KAAK25C,gCACH10C,IAAlBo3C,OACA3lC,EAAAA,CAAU2lC,EAAc,GAAKpO,EAAO,GAAIoO,EAAc,GAAKpO,EAAO,IACzCt3B,EAAW3W,KAAK45C,e1DrpBrBmB,E0DspBE9M,G1DtpBdx8B,E0DspBMiF,G1DrpBX,KAAOqkC,EAAM,GACxBtpC,EAAW,KAAOspC,EAAM,I0DspBbrkC,GAOX4/B,EAAKn2C,UAAU27C,oBAAsB,SAAU7rC,EAAYg+B,OACnDv3B,EACA2lC,EAAgBr8C,KAAK25C,oBACrB2C,EAAoBt8C,KAAK4pB,qBACP3kB,IAAlBo3C,QAAqDp3C,IAAtBq3C,IAK/B5lC,EAAAA,CAJQu3B,EAAO,GACVh+B,GAAcg+B,EAAO,GAAKoO,EAAc,IAAOC,EAC5CrO,EAAO,GACVh+B,GAAcg+B,EAAO,GAAKoO,EAAc,IAAOC,WAGjD5lC,GAQX4/B,EAAKn2C,UAAUy7C,iBAAmB,SAAUW,OACpC3lC,EAAO5W,KAAK02C,iBACZ6F,EAAAA,KACIC,EAAI5lC,EAAK,GACT6lC,EAAI7lC,EAAK,UAETrN,KAAKklB,IAAI+tB,EAAIjzC,KAAKiK,IAAI+oC,IAClBhzC,KAAKklB,IAAIguB,EAAIlzC,KAAKgK,IAAIgpC,IAC1BhzC,KAAKklB,IAAI+tB,EAAIjzC,KAAKgK,IAAIgpC,IAClBhzC,KAAKklB,IAAIguB,EAAIlzC,KAAKiK,IAAI+oC,YAIvB3lC,GAUf0/B,EAAKn2C,UAAUu8C,gBAAkB,SAAUC,GACvC38C,KAAK02C,cAAgBp1C,MAAMC,QAAQo7C,GAC7BA,EAAS58B,QAAAA,CACR,IAAK,KACP/f,KAAKg6C,gBACNh6C,KAAKi6C,mBAAmB,IAShC3D,EAAKn2C,UAAUy8C,UAAY,eACnBlmC,EAAS1W,KAAK25C,2BACbjjC,KAGmBA,EAAQ1W,KAAKk0B,iBAF1Bxd,GAQf4/B,EAAKn2C,UAAUw5C,kBAAoB,kBACuC35C,KAAKL,IAAAA,KAK/E22C,EAAKn2C,UAAU08C,eAAiB,kBACrB78C,KAAKk5C,cAKhB5C,EAAKn2C,UAAU28C,uBAAyB,kBAC7B98C,KAAKu5C,SAAS/B,qBAMzBlB,EAAKn2C,UAAU48C,SAAW,SAAUC,eACd/3C,IAAd+3C,GACAA,EAAU,GAAKh9C,KAAKu2C,OAAO,GAC3ByG,EAAU,GAAKh9C,KAAKu2C,OAAO,GACpByG,GAGAh9C,KAAKu2C,OAAOx2B,SAa3Bu2B,EAAKn2C,UAAU88C,gBAAkB,SAAUN,UzDlRxC,SAAsB/vC,EAAQkb,UAC5BS,GAGEJ,GAAgBvb,EAAQkb,EAAkBS,IAFtC3b,GyDiRM5M,KAAKk9C,wBAAwBP,GACd38C,KAAKk0B,kBAOrCoiB,EAAKn2C,UAAU+8C,wBAA0B,SAAUP,OAC3C/lC,EAAO+lC,GAAY38C,KAAK47C,mBACxBllC,EAA+D1W,KAAK25C,uBACjEjjC,EAAQ,OACXzG,EAAqCjQ,KAAK4pB,wBACxB3kB,IAAfgL,EAA0B,OAC7B0G,EAAmC3W,KAAK45C,6BACxB30C,IAAb0R,EAAwB,MACND,EAAQzG,EAAY0G,EAAUC,IAO3D0/B,EAAKn2C,UAAU2M,iBAAmB,kBACvB9M,KAAKo4C,gBAOhB9B,EAAKn2C,UAAU4M,iBAAmB,kBACvB/M,KAAKq4C,gBAOhB/B,EAAKn2C,UAAU8M,WAAa,kBACMjN,KAAKm9C,qBAAqBn9C,KAAKq4C,iBAOjE/B,EAAKn2C,UAAUsN,WAAa,SAAUyC,GAClClQ,KAAK82C,cAAc92C,KAAKw5C,mBAAAA,CAAqB5tC,QAASsE,MAO1DomC,EAAKn2C,UAAU6M,WAAa,kBACMhN,KAAKm9C,qBAAqBn9C,KAAKo4C,iBAOjE9B,EAAKn2C,UAAUuN,WAAa,SAAUwC,GAClClQ,KAAK82C,cAAc92C,KAAKw5C,mBAAAA,CAAqB7tC,QAASuE,MAO1DomC,EAAKn2C,UAAUi9C,uBAAyB,SAAUC,GAC9Cr9C,KAAK82C,cAAc92C,KAAKw5C,mBAAAA,CAAqBhC,oBAAqB6F,MAOtE/G,EAAKn2C,UAAU+zB,cAAgB,kBACpBl0B,KAAKw0B,aAQhB8hB,EAAKn2C,UAAUypB,cAAgB,kBACa5pB,KAAKL,IAAAA,KAQjD22C,EAAKn2C,UAAUg1B,eAAiB,kBACrBn1B,KAAK+1B,cAUhBugB,EAAKn2C,UAAUm9C,uBAAyB,SAAU1wC,EAAQ+vC,UAC/C38C,KAAKu9C,+BAAAA,GAA8C3wC,EAAQ5M,KAAKk0B,iBAAkByoB,IAS7FrG,EAAKn2C,UAAUo9C,+BAAiC,SAAU3wC,EAAQ+vC,OAC1D/lC,EAAO+lC,GAAY38C,KAAK47C,mBACxB7Q,EAAAA,GAAuBn+B,GAAUgK,EAAK,GACtCo0B,EAAAA,GAAwBp+B,GAAUgK,EAAK,UACpCrN,KAAKD,IAAIyhC,EAAaC,IAQjCsL,EAAKn2C,UAAUq9C,8BAAgC,SAAUC,OACjD5F,EAAQ4F,GAAa,EACrBjyC,EAAgBxL,KAAK09C,yBAAyB19C,KAAKo4C,gBACnD1sC,EAAgB1L,KAAKq4C,eACrB/uC,EAAMC,KAAKQ,IAAIyB,EAAgBE,GAAiBnC,KAAKQ,IAAI8tC,mBAMnD/vC,UACW0D,EAAgBjC,KAAKmiC,IAAImM,EAAO/vC,EAAQwB,KAUjEgtC,EAAKn2C,UAAUy5C,YAAc,kBACK55C,KAAKL,IAAAA,KAQvC22C,EAAKn2C,UAAUw9C,8BAAgC,SAAUF,OACjDG,EAAWr0C,KAAKQ,IAAI0zC,GAAa,GACjCjyC,EAAgBxL,KAAK09C,yBAAyB19C,KAAKo4C,gBACnD1sC,EAAgB1L,KAAKq4C,eACrB/uC,EAAMC,KAAKQ,IAAIyB,EAAgBE,GAAiBkyC,kBAM1C3tC,UACM1G,KAAKQ,IAAIyB,EAAgByE,GAAc2tC,EAAWt0C,IAUtEgtC,EAAKn2C,UAAU09C,6BAA+B,SAAUtB,OAChD3lC,EAAO5W,KAAK47C,iBAAiBW,GAC7BhE,EAAUv4C,KAAKu4C,eACfA,IACA3hC,EAAAA,CACIA,EAAK,GAAK2hC,EAAQ,GAAKA,EAAQ,GAC/B3hC,EAAK,GAAK2hC,EAAQ,GAAKA,EAAQ,KAGhC3hC,GAKX0/B,EAAKn2C,UAAU4O,SAAW,eAClBqC,EAAapR,KAAKk0B,gBAClBjkB,EAAoCjQ,KAAK4pB,gBACzCjT,EAAW3W,KAAK45C,cAChBljC,EAA8D1W,KAAK25C,oBACnEpB,EAAUv4C,KAAKu4C,WACfA,EAAAA,KACIuF,EAAc99C,KAAK69C,+BACvBnnC,EAASqnC,GAAkBrnC,EAAQ1W,KAAK47C,mBAAAA,CAAqBkC,EAAY,GAAK,EAAIvF,EAAQ,GAAIuF,EAAY,GAAK,EAAIvF,EAAQ,IAAKtoC,EAAY0G,UAG5ID,OAAQA,EAAOqJ,MAAM,GACrB3O,gBAA2BnM,IAAfmM,EAA2BA,EAAa,KACpDnB,WAAYA,EACZ0G,SAAUA,EACVzG,KAAMlQ,KAAK05C,YAUnBpD,EAAKn2C,UAAUu5C,QAAU,eACjBxpC,EACAD,EAAajQ,KAAK4pB,4BACH3kB,IAAfgL,IACAC,EAAOlQ,KAAKm9C,qBAAqBltC,IAE9BC,GAQXomC,EAAKn2C,UAAUg9C,qBAAuB,SAAUltC,OAExC3G,EAAK6tC,EADL5hC,EAASvV,KAAKw4C,UAAY,KAE1Bx4C,KAAK+1B,aAAAA,KACDioB,EAAAA,EAA4Bh+C,KAAK+1B,aAAc9lB,EAAY,GAC/DsF,EAASyoC,EACT10C,EAAMtJ,KAAK+1B,aAAaioB,GAEpB7G,EADA6G,GAAWh+C,KAAK+1B,aAAa90B,OAAS,EACzB,EAGAqI,EAAMtJ,KAAK+1B,aAAaioB,EAAU,QAInD10C,EAAMtJ,KAAKo4C,eACXjB,EAAan3C,KAAKs4C,mBAEf/iC,EAAShM,KAAKQ,IAAIT,EAAM2G,GAAc1G,KAAKQ,IAAIotC,IAQ1Db,EAAKn2C,UAAU06C,qBAAuB,SAAU3qC,MACxClQ,KAAK+1B,aAAAA,IACD/1B,KAAK+1B,aAAa90B,QAAU,SACrB,MAEPg9C,EAAAA,GAAkB10C,KAAK8c,MAAMnW,GAAO,EAAGlQ,KAAK+1B,aAAa90B,OAAS,GAClEk2C,EAAan3C,KAAK+1B,aAAakoB,GAAaj+C,KAAK+1B,aAAakoB,EAAY,UACtEj+C,KAAK+1B,aAAakoB,GACtB10C,KAAKmiC,IAAIyL,EAAAA,GAAkBjnC,EAAO+tC,EAAW,EAAG,WAG5Cj+C,KAAKo4C,eAAiB7uC,KAAKmiC,IAAI1rC,KAAKs4C,YAAapoC,EAAOlQ,KAAKw4C,WAa7ElC,EAAKn2C,UAAU+9C,IAAM,SAAUC,EAAkB7tC,OAEzCgtB,QACGh8B,MAAMC,QAAQ48C,IAEb,mBADsBA,EAAkBlR,sBAC5B,IAChB3rC,MAAMC,QAAQ48C,GAAAA,QACEA,GAAmB,QAC/BvxC,EAAAA,GAAwBuxC,EAAkBn+C,KAAKk0B,iBACnDoJ,EAAAA,GAAAA,WAA6B1wB,WAExBuxC,EAAiB7P,YAAAA,GAA2B8P,CAC7CxxC,EAAAA,GAAwBuxC,EAAiBtxC,YAAa7M,KAAKk0B,kBAC/DoJ,EAAAA,GAAAA,WAA6B1wB,IACpB2Q,OAAOvd,KAAK45C,cAAAA,GAAyBhtC,aAG1CyxC,EzD3mBL91B,GyD6mBK+U,EADA+gB,EACsEF,EACjEjR,QACAp6B,UAAUurC,EAAgBr+C,KAAKk0B,iBAGzBiqB,EAGnBn+C,KAAKs+C,YAAYhhB,EAAUhtB,IAM/BgmC,EAAKn2C,UAAUm+C,YAAc,SAAUhhB,EAAUhtB,OACzCnF,EAAUmF,GAAAA,GACVsG,EAAOzL,EAAQyL,KACdA,IACDA,EAAO5W,KAAK69C,oCAIZnyC,EAFA6sC,OAA8BtzC,IAApBkG,EAAQotC,QAAwBptC,EAAQotC,QAAAA,CAAW,EAAG,EAAG,EAAG,GACtEyF,OAA8B/4C,IAApBkG,EAAQ6yC,SAAwB7yC,EAAQ6yC,QAGlDtyC,OAD0BzG,IAA1BkG,EAAQO,cACQP,EAAQO,mBAECzG,IAApBkG,EAAQS,QACG5L,KAAK66C,qBAAqB1vC,EAAQS,SAGlC,UAEhB2yC,EAASjhB,EAAS4R,qBAElBv4B,EAAW3W,KAAK45C,cAChB/zB,EAAWtc,KAAKiK,KAAKmD,GACrBmP,EAAWvc,KAAKgK,KAAKoD,GACrB6nC,EAAW/yC,EAAAA,EACXgzC,EAAWhzC,EAAAA,EACXizC,GAAWjzC,EAAAA,EACXkzC,GAAWlzC,EAAAA,EACXgK,EAAS6nB,EAASiS,YACbruC,EAAI,EAAGkB,EAAKm8C,EAAOt9C,OAAQC,EAAIkB,EAAIlB,GAAKuU,EAAAA,KACzCmpC,EAAOL,EAAOr9C,GAAK2kB,EAAW04B,EAAOr9C,EAAI,GAAK4kB,EAC9C+4B,EAAON,EAAOr9C,GAAK4kB,EAAWy4B,EAAOr9C,EAAI,GAAK2kB,EAClD24B,EAAUj1C,KAAKF,IAAIm1C,EAASI,GAC5BH,EAAUl1C,KAAKF,IAAIo1C,EAASI,GAC5BH,EAAUn1C,KAAKD,IAAIo1C,EAASE,GAC5BD,EAAUp1C,KAAKD,IAAIq1C,EAASE,OAG5B5uC,EAAajQ,KAAKu9C,+BAAAA,CAAgCiB,EAASC,EAASC,EAASC,GAAAA,CAAW/nC,EAAK,GAAK2hC,EAAQ,GAAKA,EAAQ,GAAI3hC,EAAK,GAAK2hC,EAAQ,GAAKA,EAAQ,KAC9JtoC,EAAa+9B,MAAM/9B,GACbvE,EACAnC,KAAKD,IAAI2G,EAAYvE,GAC3BuE,EAAajQ,KAAK09C,yBAAyBztC,EAAY+tC,EAAU,EAAI,GAErEl4B,GAAYA,MACRg5B,GAAcN,EAAUE,GAAW,EACnCK,GAAcN,EAAUE,GAAW,EAGnCK,GAFJF,IAAgBvG,EAAQ,GAAKA,EAAQ,IAAM,EAAKtoC,GAErB4V,GAD3Bk5B,IAAgBxG,EAAQ,GAAKA,EAAQ,IAAM,EAAKtoC,GACG6V,EAC/Cm5B,EAAUF,EAAal5B,EAAWi5B,EAAah5B,EAC/CpP,EAAS1W,KAAKk/C,qBAAAA,CAAsBF,EAASC,GAAUhvC,GACvDqB,EAAWnG,EAAQmG,SAAWnG,EAAQmG,SAAAA,OACjBrM,IAArBkG,EAAQwvC,SACR36C,KAAKm6C,gBAAAA,CACDlqC,WAAYA,EACZyG,OAAQA,EACRikC,SAAUxvC,EAAQwvC,SAClBC,OAAQzvC,EAAQyvC,QACjBtpC,IAGHtR,KAAK0zB,kBAAoBzjB,EACzBjQ,KAAK22C,cAAgBjgC,EACrB1W,KAAK+7C,mBAAkB,GAAO,GAC9B1B,GAAkB/oC,GAAU,KAUpCglC,EAAKn2C,UAAUg/C,SAAW,SAAU1tC,EAAYmF,EAAM0H,GAClDte,KAAKo/C,iBAAAA,GAAoC3tC,EAAYzR,KAAKk0B,iBAAkBtd,EAAM0H,IAOtFg4B,EAAKn2C,UAAUi/C,iBAAmB,SAAU3tC,EAAYmF,EAAM0H,GAC1Dte,KAAKo5C,kBAAkB2E,GAAkBtsC,EAAYmF,EAAM0H,EAAUte,KAAK4pB,gBAAiB5pB,KAAK45C,iBAUpGtD,EAAKn2C,UAAUk/C,qBAAuB,SAAU3oC,EAAQzG,EAAY0G,EAAUC,OACtE0oC,EACA/G,EAAUv4C,KAAKu4C,WACfA,GAAW7hC,EAAAA,KACPonC,EAAc99C,KAAK69C,8BAA8BlnC,GACjD4oC,EAAgBxB,GAAkBrnC,EAAQE,EAAAA,CAAOknC,EAAY,GAAK,EAAIvF,EAAQ,GAAIuF,EAAY,GAAK,EAAIvF,EAAQ,IAAKtoC,EAAY0G,GACpI2oC,EAAAA,CACI5oC,EAAO,GAAK6oC,EAAc,GAC1B7oC,EAAO,GAAK6oC,EAAc,WAG3BD,GAKXhJ,EAAKn2C,UAAU45C,MAAQ,mBACV/5C,KAAK25C,0BAAgD10C,IAAzBjF,KAAK4pB,iBAO9C0sB,EAAKn2C,UAAUq/C,aAAe,SAAUC,OAChC/oC,EAAAA,GAA0B1W,KAAK22C,cAAe32C,KAAKk0B,iBACvDl0B,KAAK0/C,UAAAA,CACDhpC,EAAO,GAAK+oC,EAAiB,GAC7B/oC,EAAO,GAAK+oC,EAAiB,MAOrCnJ,EAAKn2C,UAAUw/C,qBAAuB,SAAUF,OACxC/oC,EAAS1W,KAAK22C,cAClB32C,KAAKo5C,kBAAAA,CACD1iC,EAAO,GAAK+oC,EAAiB,GAC7B/oC,EAAO,GAAK+oC,EAAiB,MAUrCnJ,EAAKn2C,UAAUy/C,iBAAmB,SAAUxmB,EAAO+U,OAC3CF,EAASE,GAAAA,GAAiCA,EAAYnuC,KAAKk0B,iBAC/Dl0B,KAAK6/C,yBAAyBzmB,EAAO6U,IAQzCqI,EAAKn2C,UAAU0/C,yBAA2B,SAAUzmB,EAAO+U,OACnD2R,EAAW9/C,KAAKg6C,gBAAkBh6C,KAAKo7C,iBACvCxkC,EAAO5W,KAAK47C,iBAAiB57C,KAAK45C,eAClCmG,EAAgB//C,KAAKk5C,aAAajpC,WAAWjQ,KAAK0zB,kBAAoB0F,EAAO,EAAGxiB,EAAMkpC,GACtF3R,IACAnuC,KAAK22C,cAAgB32C,KAAK87C,oBAAoBiE,EAAe5R,IAEjEnuC,KAAK0zB,mBAAqB0F,EAC1Bp5B,KAAK+7C,qBASTzF,EAAKn2C,UAAU6/C,WAAa,SAAUjF,EAAO5M,GACzCnuC,KAAK4/C,iBAAiBr2C,KAAKmiC,IAAI1rC,KAAKs4C,aAAcyC,GAAQ5M,IAS9DmI,EAAKn2C,UAAU8/C,eAAiB,SAAUlF,EAAO5M,GACzCA,IACAA,EAAAA,GAAgCA,EAAYnuC,KAAKk0B,kBAErDl0B,KAAKkgD,uBAAuBnF,EAAO5M,IAMvCmI,EAAKn2C,UAAU+/C,uBAAyB,SAAUnF,EAAO5M,OACjD2R,EAAW9/C,KAAKg6C,gBAAkBh6C,KAAKo7C,iBACvC+E,EAAcngD,KAAKk5C,aAAaviC,SAAS3W,KAAK42C,gBAAkBmE,EAAO+E,GACvE3R,IACAnuC,KAAK22C,cAAgB32C,KAAKi8C,sBAAsBkE,EAAahS,IAEjEnuC,KAAK42C,iBAAmBmE,EACxB/6C,KAAK+7C,qBAQTzF,EAAKn2C,UAAUu/C,UAAY,SAAUhpC,GACjC1W,KAAKo5C,kBAAAA,GAAqC1iC,EAAQ1W,KAAKk0B,mBAM3DoiB,EAAKn2C,UAAUi5C,kBAAoB,SAAU1iC,GACzC1W,KAAK22C,cAAgBjgC,EACrB1W,KAAK+7C,qBAOTzF,EAAKn2C,UAAU+6C,QAAU,SAAUkF,EAAMrF,UACrC/6C,KAAKu2C,OAAO6J,IAASrF,EACrB/6C,KAAKqG,UACErG,KAAKu2C,OAAO6J,IAQvB9J,EAAKn2C,UAAUk5C,cAAgB,SAAUppC,GACrCjQ,KAAK0zB,kBAAoBzjB,EACzBjQ,KAAK+7C,qBAQTzF,EAAKn2C,UAAUg5C,YAAc,SAAUxiC,GACnC3W,KAAK42C,gBAAkBjgC,EACvB3W,KAAK+7C,qBAOTzF,EAAKn2C,UAAUm5C,QAAU,SAAUppC,GAC/BlQ,KAAKq5C,cAAcr5C,KAAK66C,qBAAqB3qC,KAUjDomC,EAAKn2C,UAAU47C,kBAAoB,SAAUsE,EAAsBC,OAC3DR,EAAW9/C,KAAKg6C,gBAAkBh6C,KAAKo7C,kBAAoBkF,EAE3DH,EAAcngD,KAAKk5C,aAAaviC,SAAS3W,KAAK42C,gBAAiBkJ,GAC/DlpC,EAAO5W,KAAK47C,iBAAiBuE,GAC7BJ,EAAgB//C,KAAKk5C,aAAajpC,WAAWjQ,KAAK0zB,kBAAmB,EAAG9c,EAAMkpC,GAC9ES,EAAYvgD,KAAKk5C,aAAaxiC,OAAO1W,KAAK22C,cAAeoJ,EAAenpC,EAAMkpC,EAAU9/C,KAAKq/C,qBAAqBr/C,KAAK22C,cAAeoJ,EAAeI,EAAavpC,IAClK5W,KAAKL,IAAAA,MAA+BwgD,GACpCngD,KAAKqI,IAAAA,GAA2B83C,GAEhCngD,KAAKL,IAAAA,MAAiCogD,GACtC//C,KAAKqI,IAAAA,GAA6B03C,GAEjC//C,KAAKL,IAAAA,KAAiB6gD,GACfxgD,KAAKL,IAAAA,IAA0B4gD,IACvCvgD,KAAKqI,IAAAA,GAAyBk4C,GAE9BvgD,KAAKg6C,iBAAmBqG,GACxBrgD,KAAKq7C,mBAETr7C,KAAK62C,mBAAgB5xC,GAWzBqxC,EAAKn2C,UAAU85C,mBAAqB,SAAUwG,EAAcC,EAAyBvS,OAC7EwM,OAA4B11C,IAAjBw7C,EAA6BA,EAAe,IACvDz/C,EAAY0/C,GAA2B,EACvCP,EAAcngD,KAAKk5C,aAAaviC,SAAS3W,KAAK42C,iBAC9ChgC,EAAO5W,KAAK47C,iBAAiBuE,GAC7BJ,EAAgB//C,KAAKk5C,aAAajpC,WAAWjQ,KAAK0zB,kBAAmB1yB,EAAW4V,GAChF2pC,EAAYvgD,KAAKk5C,aAAaxiC,OAAO1W,KAAK22C,cAAeoJ,EAAenpC,GAAM,EAAO5W,KAAKq/C,qBAAqBr/C,KAAK22C,cAAeoJ,EAAeI,EAAavpC,OAClJ,IAAb+jC,IAAmB36C,KAAK62C,qBACxB72C,KAAK0zB,kBAAoBqsB,EACzB//C,KAAK42C,gBAAkBuJ,EACvBngD,KAAK22C,cAAgB4J,OACrBvgD,KAAK+7C,wBAGL9N,EAASE,IAA4B,IAAbwM,EAAiB36C,KAAK62C,mBAAgB5xC,GAClEjF,KAAK62C,mBAAgB5xC,EACjBjF,KAAK4pB,kBAAoBm2B,GACzB//C,KAAK45C,gBAAkBuG,GACtBngD,KAAK25C,qBAAAA,GACE35C,KAAK25C,oBAAqB4G,KAC9BvgD,KAAKg6C,gBACLh6C,KAAKq7C,mBAETr7C,KAAKm6C,gBAAAA,CACDxjC,SAAUwpC,EACVzpC,OAAQ6pC,EACRtwC,WAAY8vC,EACZpF,SAAUA,EACVC,OAAAA,GACA3M,OAAQA,MAUpBqI,EAAKn2C,UAAUwgD,iBAAmB,WAC9B3gD,KAAKi6C,mBAAmB,GACxBj6C,KAAKk7C,QAAAA,GAA8B,IAUvC5E,EAAKn2C,UAAUygD,eAAiB,SAAUH,EAAcC,EAAyBvS,OACzEF,EAASE,GAAAA,GAAiCA,EAAYnuC,KAAKk0B,iBAC/Dl0B,KAAK6gD,uBAAuBJ,EAAcC,EAAyBzS,IASvEqI,EAAKn2C,UAAU0gD,uBAAyB,SAAUJ,EAAcC,EAAyBvS,GACrFnuC,KAAKk7C,QAAAA,IAA+B,GACpCl7C,KAAKi6C,mBAAmBwG,EAAcC,EAAyBvS,IASnEmI,EAAKn2C,UAAU++C,qBAAuB,SAAUnvB,EAAc+wB,OACtDlqC,EAAO5W,KAAK47C,iBAAiB57C,KAAK45C,sBAC/B55C,KAAKk5C,aAAaxiC,OAAOqZ,EAAc+wB,GAAwB9gD,KAAK4pB,gBAAiBhT,IAWhG0/B,EAAKn2C,UAAU4gD,mBAAqB,SAAUC,EAAYC,OAClDC,EAAYlhD,KAAK66C,qBAAqBmG,UACnChhD,KAAKm9C,qBAAqBn9C,KAAK09C,yBAAyBwD,EAAWD,KAW9E3K,EAAKn2C,UAAUu9C,yBAA2B,SAAU1tB,EAAkBixB,OAC9DjgD,EAAYigD,GAAiB,EAC7BrqC,EAAO5W,KAAK47C,iBAAiB57C,KAAK45C,sBAC/B55C,KAAKk5C,aAAajpC,WAAW+f,EAAkBhvB,EAAW4V,IAE9D0/B,EA1uCPD,YAgvCJ,SAAAgE,GAA2B/oC,EAAU6vC,GACjC7b,YAAW,WACPh0B,EAAS6vC,KACV,GAmJA,SAAAlG,GAAyBR,WACxBA,EAAUxqB,cAAgBwqB,EAAU1qB,kBACd0qB,EAAUxqB,aAAcwqB,EAAU1qB,iBAIxD0qB,EAAUvqB,mBAAqBuqB,EAAUzqB,kBAGzCyqB,EAAUK,iBAAmBL,EAAUO,gBAa/C,SAAA+C,GAA2BtsC,EAAYmF,EAAM0H,EAAUrO,EAAY0G,OAE3DkP,EAAWtc,KAAKiK,KAAKmD,GACrBmP,EAAWvc,KAAKgK,KAAKoD,GACrBioC,EAAOntC,EAAW,GAAKoU,EAAWpU,EAAW,GAAKqU,EAClD+4B,EAAOptC,EAAW,GAAKoU,EAAWpU,EAAW,GAAKqU,UACtD84B,IAAShoC,EAAK,GAAK,EAAI0H,EAAS,IAAMrO,GAIjB4V,GAHrBg5B,IAASvgC,EAAS,GAAK1H,EAAK,GAAK,GAAK3G,IAEtC6V,GAAYA,GAEE+4B,EAAOh5B,EAAW+4B,EAAO94B,GC7nDpC,SAAAs7B,GAAgBxqC,EAAM+lC,UACrBr7C,MAAMC,QAAQqV,GACPA,QAGU3R,IAAb03C,EACAA,EAAAA,CAAY/lC,EAAMA,IAGlB+lC,EAAS,GAAK/lC,EACd+lC,EAAS,GAAK/lC,GAEX+lC,+CCnEX0E,GAA0Bp7C,eACtBlD,EAAgB,SAAUE,EAAGpC,UAC7BkC,EAAgBtD,OAAOyD,gBAAAA,CAChBC,UAAAA,cAA2B7B,OAAAA,SAAmB2B,EAAGpC,GAAKoC,EAAEE,UAAYtC,aAC7DoC,EAAGpC,WAAcuC,KAAKvC,EAAOpB,OAAOU,UAAUqC,eAAea,KAAKxC,EAAGuC,KAAIH,EAAEG,GAAKvC,EAAEuC,MAC3EH,EAAGpC,WAErB,SAAUoC,EAAGpC,GAEhB,SAAAyC,IAAgBtD,KAAKuD,YAAcN,EADnCF,EAAcE,EAAGpC,GAEjBoC,EAAE9C,UAAkB,OAANU,EAAapB,OAAO+D,OAAO3C,IAAMyC,EAAGnD,UAAYU,EAAEV,UAAAA,IAAemD,IAVzD2C,GAsI1Bq7C,GAAAA,SAAwC59C,GAKxC,SAAA69C,EAAsBp2C,OACdtH,EAAQH,EAAOL,KAAKrD,OAASA,KAC7BwhD,EAumCZ,SAA+Br2C,OAIvBs2C,EAAsB,UACUx8C,IAAhCkG,EAAQs2C,sBACRA,EAC2C,iBAAhCt2C,EAAQs2C,oBACT5nC,SAAS6nC,eAAev2C,EAAQs2C,qBAChCt2C,EAAQs2C,yBAclBE,EAUAC,EAWAC,EA9BAh/C,EAAAA,GACAi/C,EAAa32C,EAAQ8uB,QACoC,mBAA/B9uB,EAAQ8uB,OAAQ4H,UACb12B,EAAQ8uB,OAAAA,IAAAA,GAAAA,QAAAA,CAClBA,OAAmC9uB,EAAQ8uB,SAClEp3B,EAAAA,IAAiCi/C,EACjCj/C,EAAAA,IAA6BsI,EAAQjL,OACrC2C,EAAAA,SACqBoC,IAAjBkG,EAAQ42C,KAAqB52C,EAAQ42C,KAAAA,IAAAA,GAAAA,aAEhB98C,IAArBkG,EAAQw2C,WACJrgD,MAAMC,QAAQ4J,EAAQw2C,UACtBA,EAAAA,IAAAA,GAAAA,QAA0Bx2C,EAAQw2C,SAAS5hC,aAGsB,mBAAhC5U,EAAQw2C,SAAUhhB,SAA0B,IAC7EghB,EAAsCx2C,EAAQw2C,gBAIzB18C,IAAzBkG,EAAQy2C,eACJtgD,MAAMC,QAAQ4J,EAAQy2C,cACtBA,EAAAA,IAAAA,GAAAA,QAA8Bz2C,EAAQy2C,aAAa7hC,aAI/C,mBAD6B5U,EAAQy2C,aAAcjhB,SACvC,IAChBihB,EAA0Cz2C,EAAQy2C,oBAIjC38C,IAArBkG,EAAQ02C,SACJvgD,MAAMC,QAAQ4J,EAAQ02C,UACtBA,EAAAA,IAAAA,GAAAA,QAA0B12C,EAAQ02C,SAAS9hC,aAGsB,mBAAhC5U,EAAQ02C,SAAUlhB,SAA0B,IAC7EkhB,EAAW12C,EAAQ02C,UAIvBA,EAAAA,IAAAA,GAAAA,eAGAF,SAAUA,EACVC,aAAcA,EACdH,oBAAqBA,EACrBI,SAAUA,EACVh/C,OAAQA,GArqCcm/C,CAAsB72C,UAE5CtH,EAAMo+C,yBAA2Bp+C,EAAMq+C,mBAAmBx8C,KAAK7B,GAK/DA,EAAMs+C,sBAC0Bl9C,IAA5BkG,EAAQi3C,gBAAgCj3C,EAAQi3C,gBAAkB,GAKtEv+C,EAAMwnB,iBACqBpmB,IAAvBkG,EAAQwT,WACFxT,EAAQwT,WAAAA,GAMlB9a,EAAMw+C,yBAKNx+C,EAAMy+C,mBAINz+C,EAAM0+C,2BACFviD,KAAKsiD,wBAAqBr9C,EAC1BjF,KAAKwiD,aAAalI,KAAKC,QACzB70C,KAAK7B,GAKPA,EAAM4+C,6B9EpJF,EAAG,EAAG,EAAG,EAAG,EAAG,G8EyJnB5+C,EAAM6+C,6B9EzJF,EAAG,EAAG,EAAG,EAAG,EAAG,G8E8JnB7+C,EAAM8+C,YAAc,EAKpB9+C,EAAM++C,YAAc,KAMpB/+C,EAAMg/C,gBAAkB,KAKxBh/C,EAAMi/C,yBAA2B,KAKjCj/C,EAAMk/C,uBAAyB,KAK/Bl/C,EAAMm/C,gCAAkC,KAKxCn/C,EAAMo/C,UAAYppC,SAASC,cAAc,OACzCjW,EAAMo/C,UAAUn3C,UACZ,eAAiB,iBAAkBuN,OAAS,YAAc,IAC9DxV,EAAMo/C,UAAU/nC,MAAMoD,SAAW,WACjCza,EAAMo/C,UAAU/nC,MAAMgoC,SAAW,SACjCr/C,EAAMo/C,UAAU/nC,MAAMrD,MAAQ,OAC9BhU,EAAMo/C,UAAU/nC,MAAMpD,OAAS,OAK/BjU,EAAMs/C,kBAAoBtpC,SAASC,cAAc,OACjDjW,EAAMs/C,kBAAkBjoC,MAAMoD,SAAW,WACzCza,EAAMs/C,kBAAkBjoC,MAAM3P,OAAS,IACvC1H,EAAMs/C,kBAAkBjoC,MAAMrD,MAAQ,OACtChU,EAAMs/C,kBAAkBjoC,MAAMpD,OAAS,OACvCjU,EAAMs/C,kBAAkBjoC,MAAMkoC,cAAgB,OAC9Cv/C,EAAMs/C,kBAAkBr3C,UAAY,sBACpCjI,EAAMo/C,UAAU1kC,YAAY1a,EAAMs/C,mBAKlCt/C,EAAMw/C,2BAA6BxpC,SAASC,cAAc,OAC1DjW,EAAMw/C,2BAA2BnoC,MAAMoD,SAAW,WAClDza,EAAMw/C,2BAA2BnoC,MAAM3P,OAAS,IAChD1H,EAAMw/C,2BAA2BnoC,MAAMrD,MAAQ,OAC/ChU,EAAMw/C,2BAA2BnoC,MAAMpD,OAAS,OAChDjU,EAAMw/C,2BAA2BnoC,MAAMkoC,cAAgB,OACvDv/C,EAAMw/C,2BAA2Bv3C,UAAY,gCAC7CjI,EAAMo/C,UAAU1kC,YAAY1a,EAAMw/C,4BAKlCx/C,EAAMy/C,wBAA0B,KAKhCz/C,EAAM0gC,eAAiBp5B,EAAQ+4B,cAK/BrgC,EAAM0/C,qBAAuB/B,EAAgBC,oBAK7C59C,EAAM2/C,gBAAkB,KAKxB3/C,EAAM89C,SAAWH,EAAgBG,UAAAA,IAAAA,GAAAA,QAKjC99C,EAAM+9C,aAAeJ,EAAgBI,cAAAA,IAAAA,GAAAA,QAKrC/9C,EAAM4/C,UAAYjC,EAAgBK,SAMlCh+C,EAAM6/C,gBAAAA,GAKN7/C,EAAMyK,UAAY,KAKlBzK,EAAM8/C,cAKN9/C,EAAM+/C,qBAAAA,GAKN//C,EAAMggD,WAAAA,IAAAA,GAAAA,QAA2BhgD,EAAMigD,gBAAgBp+C,KAAK7B,GAAQA,EAAMkgD,kBAAkBr+C,KAAK7B,IACjGA,EAAMK,iBAAAA,EAAAA,mBAAAA,IAA6DL,EAAMmgD,0BACzEngD,EAAMK,iBAAAA,EAAAA,mBAAAA,IAAuDL,EAAMogD,oBACnEpgD,EAAMK,iBAAAA,EAAAA,mBAAAA,IAAuDL,EAAMqgD,oBACnErgD,EAAMK,iBAAAA,EAAAA,mBAAAA,IAAyDL,EAAMsgD,sBAGrEtgD,EAAMgE,cAAc25C,EAAgB3+C,QACpCgB,EAAM89C,SAASr6B,iBAKL88B,GACNA,EAAQ31C,OAAOzO,OACjB0F,KAAK7B,IACPA,EAAM89C,SAASz9C,iBAAAA,YAILM,GACNA,EAAM26B,QAAQ1wB,OAAOzO,OACvB0F,KAAK7B,IACPA,EAAM89C,SAASz9C,iBAAAA,YAILM,GACNA,EAAM26B,QAAQ1wB,OAAO,OACvB/I,KAAK7B,IACPA,EAAM+9C,aAAat6B,iBAKT+8B,GACNA,EAAY51C,OAAOzO,OACrB0F,KAAK7B,IACPA,EAAM+9C,aAAa19C,iBAAAA,YAITM,GACNA,EAAM26B,QAAQ1wB,OAAOzO,OACvB0F,KAAK7B,IACPA,EAAM+9C,aAAa19C,iBAAAA,YAITM,GACNA,EAAM26B,QAAQ1wB,OAAO,OACvB/I,KAAK7B,IACPA,EAAM4/C,UAAUn8B,QAAQzjB,EAAMygD,oBAAoB5+C,KAAK7B,IACvDA,EAAM4/C,UAAUv/C,iBAAAA,YAINM,GACNxE,KAAKskD,oBAC0C9/C,EAAM26B,UACvDz5B,KAAK7B,IACPA,EAAM4/C,UAAUv/C,iBAAAA,YAINM,OAEFs9B,EADyDt9B,EAAM26B,QAClDolB,aACNt/C,IAAP68B,UACO9hC,KAAK0jD,gBAAgB5hB,EAAG5wB,YAEnC1M,EAAM26B,QAAQ1wB,OAAO,OACvB/I,KAAK7B,IACAA,SAzPXw9C,GAAUE,EAAc79C,GA+PxB69C,EAAaphD,UAAU0P,eAAiB,qBAC1B/I,MAAM,oDAOpBy6C,EAAaphD,UAAUqkD,WAAa,SAAUJ,GAC1CpkD,KAAKykD,cAAc3hD,KAAKshD,IAW5B7C,EAAaphD,UAAUukD,eAAiB,SAAUL,GAC9CrkD,KAAK2kD,kBAAkB7hD,KAAKuhD,IAShC9C,EAAaphD,UAAUykD,SAAW,SAAUx4C,GAC3BpM,KAAK6kD,gBAAgBhjB,YAC3B/+B,KAAKsJ,IAOhBm1C,EAAaphD,UAAU2kD,WAAa,SAAUC,GAC1C/kD,KAAKglD,cAAcliD,KAAKiiD,IAO5BxD,EAAaphD,UAAUmkD,oBAAsB,SAAUS,OAC/CjjB,EAAKijB,EAAQR,aACNt/C,IAAP68B,IACA9hC,KAAK0jD,gBAAgB5hB,EAAG5wB,YAAc6zC,GAE1CA,EAAQt2C,OAAOzO,OAMnBuhD,EAAaphD,UAAUO,gBAAkB,WACrCV,KAAKilD,UAAU,MACfvhD,EAAOvD,UAAUO,gBAAgB2C,KAAKrD,OAoB1CuhD,EAAaphD,UAAU+kD,sBAAwB,SAAUh2C,EAAOoC,EAAUhB,MACjEtQ,KAAK4iD,iBAGNnxC,EAAazR,KAAKmlD,+BAA+Bj2C,GAEjDwC,OAA4CzM,KADhDqL,OAA8BrL,IAAhBqL,EAA4BA,EAAAA,IACXoB,aAA6BpB,EAAYoB,aAAe,EACnFwrB,OAA0Cj4B,IAA5BqL,EAAY4sB,YAA4B5sB,EAAY4sB,YAAAA,EAClEF,GAA4C,IAA7B1sB,EAAY0sB,oBACxBh9B,KAAKsO,UAAUkD,2BAA2BC,EAAYzR,KAAK4iD,YAAalxC,EAAcsrB,EAAc1rB,EAAU,KAAM4rB,EAAa,QAU5IqkB,EAAaphD,UAAUilD,mBAAqB,SAAUl2C,EAAOoB,OACrD+0C,EAAAA,UACJrlD,KAAKklD,sBAAsBh2C,GAAO,SAAUmuB,GACxCgoB,EAASviD,KAAKu6B,KACf/sB,GACI+0C,GAuBX9D,EAAaphD,UAAU69B,oBAAsB,SAAU9uB,EAAOoC,EAAUhB,MAC/DtQ,KAAK4iD,iBAGNz3C,EAAUmF,GAAAA,GACVoB,OAAwCzM,IAAzBkG,EAAQuG,aAA6BvG,EAAQuG,aAAe,EAC3EwrB,EAAc/xB,EAAQ+xB,aAAAA,SACnBl9B,KAAKsO,UAAU0vB,oBAAoB9uB,EAAOlP,KAAK4iD,YAAalxC,EAAcJ,EAAU4rB,KAU/FqkB,EAAaphD,UAAUmlD,kBAAoB,SAAUp2C,EAAOoB,OACnDtQ,KAAK4iD,mBACC,MAEPnxC,EAAazR,KAAKmlD,+BAA+Bj2C,GAEjDguB,OAA0Cj4B,KAD9CqL,OAA8BrL,IAAhBqL,EAA4BA,EAAAA,IACZ4sB,YAA4B5sB,EAAY4sB,YAAAA,EAClExrB,OAA4CzM,IAA7BqL,EAAYoB,aAA6BpB,EAAYoB,aAAe,EACnFsrB,GAA4C,IAA7B1sB,EAAY0sB,oBACxBh9B,KAAKsO,UAAU2vB,uBAAuBxsB,EAAYzR,KAAK4iD,YAAalxC,EAAcsrB,EAAcE,EAAa,OAQxHqkB,EAAaphD,UAAUolD,mBAAqB,SAAU/gD,UAC3CxE,KAAKkjC,uBAAuBljC,KAAKgjC,cAAcx+B,KAO1D+8C,EAAaphD,UAAUqlD,2BAA6B,SAAUhhD,UACnDxE,KAAKmlD,+BAA+BnlD,KAAKgjC,cAAcx+B,KAQlE+8C,EAAaphD,UAAU6iC,cAAgB,SAAUx+B,OACzCihD,EAAmBzlD,KAAKijD,UAAUyC,wBAClCC,EAEJ,mBAAoBnhD,EACaA,EAAOohD,eAAe,GACtBphD,SAE7BmhD,EAAczf,QAAUuf,EAAiBjnC,KACzCmnC,EAAcxf,QAAUsf,EAAiBI,MAYjDtE,EAAaphD,UAAU2lD,UAAY,kBACqB9lD,KAAKL,IAAAA,KAS7D4hD,EAAaphD,UAAU4lD,iBAAmB,eAClC7lD,EAASF,KAAK8lD,wBACH7gD,IAAX/E,EACyB,iBAAXA,EACR2Z,SAAS6nC,eAAexhD,GACxBA,EAGC,MAUfqhD,EAAaphD,UAAU+iC,uBAAyB,SAAUh0B,aAC9BlP,KAAKmlD,+BAA+Bj2C,GAAQlP,KAAKgmD,UAAU9xB,kBAQvFqtB,EAAaphD,UAAUglD,+BAAiC,SAAUj2C,OAC1DC,EAAanP,KAAK4iD,mBACjBzzC,KAIqBA,EAAW+Q,2BAA4BhR,EAAM6Q,SAH5D,MAYfwhC,EAAaphD,UAAUskD,YAAc,kBAC1BzkD,KAAK2hD,UAQhBJ,EAAaphD,UAAU6kD,YAAc,kBAC1BhlD,KAAKyjD,WAUhBlC,EAAaphD,UAAU8lD,eAAiB,SAAUnkB,OAC1CijB,EAAU/kD,KAAK0jD,gBAAgB5hB,EAAG5wB,wBACnBjM,IAAZ8/C,EAAwBA,EAAU,MAU7CxD,EAAaphD,UAAUwkD,gBAAkB,kBAC9B3kD,KAAK4hD,cAQhBL,EAAaphD,UAAU0kD,cAAgB,kBACD7kD,KAAKL,IAAAA,KAO3C4hD,EAAaphD,UAAU0hC,UAAY,kBAClB7hC,KAAK6kD,gBAAgBhjB,aAMtC0f,EAAaphD,UAAU+lD,WAAa,mBAC5B12C,EAAmBxP,KAAK6kD,gBAAgBz3C,sBACnClM,EAAI,EAAGkB,EAAKoN,EAAiBvO,OAAQC,EAAIkB,IAAMlB,EAAAA,KAEhDoB,EADQkN,EAAiBtO,GAAGkL,MACuC0C,eACnExM,GAAUA,EAAOwyB,eACV,SAGR,GASXysB,EAAaphD,UAAUgmD,uBAAyB,SAAU10C,OAClD20C,EAAAA,GAAoC30C,EAAYzR,KAAKgmD,UAAU9xB,wBAC5Dl0B,KAAKqmD,+BAA+BD,IAQ/C7E,EAAaphD,UAAUkmD,+BAAiC,SAAU50C,OAC1DtC,EAAanP,KAAK4iD,mBACjBzzC,KAIqBA,EAAW+P,2BAA4BzN,EAAWsO,MAAM,EAAG,IAH1E,MAUfwhC,EAAaphD,UAAUkP,YAAc,kBAC1BrP,KAAKsO,WAQhBizC,EAAaphD,UAAUmmD,QAAU,kBAC6BtmD,KAAKL,IAAAA,KASnE4hD,EAAaphD,UAAU6lD,QAAU,kBACDhmD,KAAKL,IAAAA,KAOrC4hD,EAAaphD,UAAUy+B,YAAc,kBAC1B5+B,KAAKijD,WAShB1B,EAAaphD,UAAUomD,oBAAsB,kBAClCvmD,KAAKmjD,mBAShB5B,EAAaphD,UAAUqmD,6BAA+B,kBAC3CxmD,KAAKqjD,4BAKhB9B,EAAaphD,UAAU0lC,iBAAmB,kBAC/B7lC,KAAK+lD,mBACN/lD,KAAK+lD,mBAAmBU,cACxB5sC,UASV0nC,EAAaphD,UAAU2jD,gBAAkB,SAAU9yC,EAAM04B,EAAeC,EAAYC,6BACzD5pC,KAAK4iD,YAAa5xC,EAAM04B,EAAeC,EAAYC,IAM9E2X,EAAaphD,UAAU+hD,mBAAqB,SAAUwE,EAAcvhD,OAC5DpF,EAAOoF,GAAYuhD,EAAa3mD,KAChC4mD,EAAAA,IAAAA,GAAAA,QAAsC5mD,EAAMC,KAAM0mD,GACtD1mD,KAAK4mD,sBAAsBD,IAK/BpF,EAAaphD,UAAUymD,sBAAwB,SAAUD,MAChD3mD,KAAK4iD,iBAKNjgB,EAA6CgkB,EAAgBhkB,cAC7Dx6B,EAAYw6B,EAAc5iC,QAC1BoI,IAAAA,IACAA,IAAAA,GACAA,IAAAA,EAAwB0+C,KACpBjhB,EAAM5lC,KAAK6lC,mBACXihB,EAAW9mD,KAAKijD,UAAUld,YACxB/lC,KAAKijD,UAAUld,cACfH,EACF1lC,EAAS,SAAU4mD,EACUA,EAAUC,iBAAiBpkB,EAAcuD,QAASvD,EAAcwD,SACtExD,EAAcziC,UAIzCF,KAAKqjD,2BAA2B2D,SAAS9mD,MAKnC4mD,IAAalhB,EAAMA,EAAIqhB,gBAAkBH,GAAUE,SAAS9mD,aAItEymD,EAAgBx3C,WAAanP,KAAK4iD,aACU,IAAxC5iD,KAAKuE,cAAcoiD,WACfO,EAAoBlnD,KAAK2kD,kBAAkBhkB,WAAW5gB,QACjD7e,EAAIgmD,EAAkBjmD,OAAS,EAAGC,GAAK,EAAGA,IAAAA,KAC3CmjD,EAAc6C,EAAkBhmD,MAChCmjD,EAAYnmB,WAAal+B,MACxBqkD,EAAY8C,aACZnnD,KAAK+lD,uBAGC1B,EAAYx/C,YAAY8hD,IACtBA,EAAgB1mD,4BASzCshD,EAAaphD,UAAUinD,iBAAmB,eAClCj4C,EAAanP,KAAK4iD,YAUlByE,EAAYrnD,KAAK6jD,eAChBwD,EAAU1f,UAAAA,KACP2B,EAAkBtpC,KAAKmiD,iBACvB5Y,EAAcD,KACdn6B,EAAAA,KACIma,EAAQna,EAAWoa,aACnBD,EAAAA,KAA6BA,EAAAA,IAAeG,KACxC69B,GAAAA,IAAoChN,KAAKC,MAAQprC,EAAWo4C,KAAO,EACvEje,EAAkBge,EAAmB,EAAI,EACzC/d,EAAc+d,EAAmB,EAAI,GAGzCD,EAAUpe,kBAAoBK,IAC9B+d,EAAUjf,eACVif,EAAUhe,cAAcC,EAAiBC,KAG7Cp6B,IACAnP,KAAKkF,YAAAA,KACJiK,EAAW0qC,SACX75C,KAAK6jD,WAAW5a,mBAChBjpC,KAAKkmD,cACNlmD,KAAKsO,UAAUwuB,oBAAAA,GAAoD3tB,WAEnEivB,EAAsBp+B,KAAK4jD,qBACtB1iD,EAAI,EAAGkB,EAAKg8B,EAAoBn9B,OAAQC,EAAIkB,IAAMlB,EACvDk9B,EAAoBl9B,GAAGlB,KAAMmP,GAEjCivB,EAAoBn9B,OAAS,GAKjCsgD,EAAaphD,UAAU+jD,mBAAqB,WACpClkD,KAAKgmD,YAAchmD,KAAKgmD,UAAUhM,gBAClCh6C,KAAKgmD,UAAU/L,mBAAmB,GAEtCj6C,KAAKuO,UAKTgzC,EAAaphD,UAAUgkD,qBAAuB,eAKtCqD,KACAxnD,KAAK8lD,cACL0B,EAAgBxnD,KAAK+lD,oBAErB/lD,KAAKsjD,wBAAAA,SACIpiD,EAAI,EAAGkB,EAAKpC,KAAKwjD,gBAAgBviD,OAAQC,EAAIkB,IAAMlB,IAC1ClB,KAAKwjD,gBAAgBtiD,IAEvClB,KAAKwjD,gBAAkB,KACvBxjD,KAAKijD,UAAUl+C,oBAAAA,EAA2C/E,KAAKiiD,0BAC/DjiD,KAAKijD,UAAUl+C,oBAAAA,EAAqC/E,KAAKiiD,+BAC9Bh9C,IAAvBjF,KAAK2jD,gBACL5+C,oBAAAA,EAAsC/E,KAAK2jD,eAAe,GAC1D3jD,KAAK2jD,mBAAgB1+C,GAEzBjF,KAAKsjD,wBAAwB7iD,UAC7BT,KAAKsjD,wBAA0B,QACpBtjD,KAAKijD,cAEfuE,WAmBQjlD,KALTilD,EAAcjpC,YAAYve,KAAKijD,WAC1BjjD,KAAKsO,YACNtO,KAAKsO,UAAYtO,KAAK6P,kBAE1B7P,KAAKsjD,wBAAAA,IAAAA,GAAAA,QAAqDtjD,KAAMA,KAAKukC,gBAC5DhiC,GACLvC,KAAKsjD,wBAAwBp/C,iBAAAA,GAAqC3B,GAAMvC,KAAK4mD,sBAAsBlhD,KAAK1F,OAE5GA,KAAKijD,UAAU/+C,iBAAAA,EAAwClE,KAAKiiD,0BAA0B,GACtFjiD,KAAKijD,UAAU/+C,iBAAAA,EAAkClE,KAAKiiD,2BAAAA,IAAAA,CAAsD7oC,SAAS,QACjHqoC,EAAuBzhD,KAAKujD,qBAE1BvjD,KAAKujD,qBADLiE,EAENxnD,KAAKwjD,gBAAAA,CAAAA,EACM/B,EAAAA,EAAwCzhD,KAAKkiD,mBAAoBliD,MAAAuF,EACjEk8C,EAAAA,EAAyCzhD,KAAKkiD,mBAAoBliD,OAExEA,KAAK2jD,gBACN3jD,KAAK2jD,cAAgB3jD,KAAKynD,WAAW/hD,KAAK1F,MAC1CqZ,OAAOnV,iBAAAA,EAAmClE,KAAK2jD,eAAe,SAhC9D3jD,KAAKsO,YACL+2B,aAAarlC,KAAKqiD,0BAClBriD,KAAKqiD,8BAA2Bp9C,EAChCjF,KAAK4jD,qBAAqB3iD,OAAS,EACnCjB,KAAKsO,UAAU7N,UACfT,KAAKsO,UAAY,MAEjBtO,KAAKsiD,qBACLhH,qBAAqBt7C,KAAKsiD,oBAC1BtiD,KAAKsiD,wBAAqBr9C,GA0BlCjF,KAAKynD,cAOTlG,EAAaphD,UAAU4jD,kBAAoB,WACvC/jD,KAAKuO,UAKTgzC,EAAaphD,UAAUunD,2BAA6B,WAChD1nD,KAAKuO,UAKTgzC,EAAaphD,UAAU8jD,mBAAqB,WACpCjkD,KAAK8iD,6BACS9iD,KAAK8iD,0BACnB9iD,KAAK8iD,yBAA2B,MAEhC9iD,KAAK+iD,2BACS/iD,KAAK+iD,wBACnB/iD,KAAK+iD,uBAAyB,UAE9BhB,EAAO/hD,KAAKgmD,UACZjE,IACA/hD,KAAK2nD,sBACL3nD,KAAK8iD,yBAAAA,EAAkCf,EAAAA,EAAsC/hD,KAAK0nD,2BAA4B1nD,MAC9GA,KAAK+iD,uBAAAA,EAAgChB,EAAAA,EAAwB/hD,KAAK0nD,2BAA4B1nD,MAC9F+hD,EAAK9H,mBAAmB,IAE5Bj6C,KAAKuO,UAKTgzC,EAAaphD,UAAU6jD,yBAA2B,WAC1ChkD,KAAKgjD,kCACLhjD,KAAKgjD,gCAAgC17B,QAAAA,GACrCtnB,KAAKgjD,gCAAkC,UAEvClB,EAAa9hD,KAAK6kD,gBAClB/C,IACA9hD,KAAKgjD,gCAAAA,CAAAA,EACMlB,EAAAA,EAA4C9hD,KAAKuO,OAAQvO,MAAAuF,EACzDu8C,EAAAA,EAA8B9hD,KAAKuO,OAAQvO,QAG1DA,KAAKuO,UAKTgzC,EAAaphD,UAAUynD,WAAa,mBACvB5nD,KAAK4iD,aAMlBrB,EAAaphD,UAAU0nD,WAAa,WAC5B7nD,KAAKsiD,oBACLhH,qBAAqBt7C,KAAKsiD,oBAE9BtiD,KAAKuiD,mBAKThB,EAAaphD,UAAUu+B,WAAa,mBAC5BjB,EAAcz9B,KAAK6kD,gBAAgBz3C,sBAC9BlM,EAAI,EAAGkB,EAAKq7B,EAAYx8B,OAAQC,EAAIkB,IAAMlB,EAAAA,KAC3CkL,EAAQqxB,EAAYv8B,GAAGkL,MACvBA,EAAM0D,eACN1D,EAAMiD,cAAcyC,uBAQhCyvC,EAAaphD,UAAUoO,OAAS,WACxBvO,KAAKsO,gBAAyCrJ,IAA5BjF,KAAKsiD,qBACvBtiD,KAAKsiD,mBAAqBlG,sBAAsBp8C,KAAKuiD,mBAU7DhB,EAAaphD,UAAU2nD,cAAgB,SAAU1D,UACtCpkD,KAAKykD,cAAczjB,OAAOojB,IASrC7C,EAAaphD,UAAU4nD,kBAAoB,SAAU1D,UAC1CrkD,KAAK2kD,kBAAkB3jB,OAAOqjB,IASzC9C,EAAaphD,UAAU6nD,YAAc,SAAU57C,UAC9BpM,KAAK6kD,gBAAgBhjB,YACpBb,OAAO50B,IASzBm1C,EAAaphD,UAAU8nD,cAAgB,SAAUlD,UACtC/kD,KAAKglD,cAAchkB,OAAO+jB,IAMrCxD,EAAaphD,UAAUqiD,aAAe,SAAU+E,O3EthC9B36C,EAAQqI,E2EuhClBpR,EAAQ7D,KACR4W,EAAO5W,KAAKsmD,UACZvE,EAAO/hD,KAAKgmD,UACZkC,EAAqBloD,KAAK4iD,YAE1BzzC,EAAa,aACJlK,IAAT2R,GDxkCL,SAAiBA,UACbA,EAAK,GAAK,GAAKA,EAAK,GAAK,ECukCf3R,CAAqB2R,IAASmrC,GAAQA,EAAKhI,QAAAA,KAChDxwB,EAAYw4B,EAAKhF,SAAS/8C,KAAK4iD,YAAc5iD,KAAK4iD,YAAYr5B,eAAYtkB,GAC1E+K,EAAY+xC,EAAKhzC,WACrBI,EAAAA,CACI0qC,SAAS,EACT36B,2BAA4Blf,KAAKyiD,4BACjC0F,cAAe,KACfv7C,OAAAA,GAA0BoD,EAAU0G,OAAQ1G,EAAUC,WAAYD,EAAU2G,SAAUC,GACtFvR,MAAOrF,KAAK2iD,cACZx5B,WAAY,EACZ3Z,iBAAkBxP,KAAK6kD,gBAAgBz3C,sBACvCuR,WAAY3e,KAAKqrB,YACjBnL,2BAA4BlgB,KAAK0iD,4BACjCtkB,oBAAAA,GACAxnB,KAAMA,EACNywC,UAAWrnD,KAAK6jD,WAChB0D,KAAMA,EACNa,UAAAA,GACAp4C,UAAWA,EACXuZ,UAAWA,EACXsgB,YAAAA,OAGR7pC,KAAK4iD,YAAczzC,EACnBnP,KAAKsO,UAAUiB,YAAYJ,GACvBA,EAAAA,IACIA,EAAW0qC,SACX75C,KAAKuO,SAETjN,MAAMnB,UAAU2C,KAAK8C,MAAM5F,KAAK4jD,qBAAsBz0C,EAAWivB,qBAC7D8pB,IACiBloD,KAAK6iD,kBAAAA,GACR7iD,KAAK6iD,mBAAAA,GACH1zC,EAAWvC,OAAQ5M,KAAK6iD,oBAEpC7iD,KAAKuE,cAAAA,IAAAA,GAAAA,QAAAA,GAAmDvE,KAAMkoD,IAC9DloD,KAAK6iD,gBAAAA,GAAsC7iD,KAAK6iD,kBAG7C7iD,KAAK6iD,kBACX1zC,EAAWoa,UAAAA,MACXpa,EAAWoa,UAAAA,MAAmBE,GACvBta,EAAWvC,OAAQ5M,KAAK6iD,mBAEhC7iD,KAAKuE,cAAAA,IAAAA,GAAAA,QAAAA,GAAiDvE,KAAMmP,I3EzkCtDvC,E2E0kCAuC,EAAWvC,Q3E1kCHqI,E2E0kCWjV,KAAK6iD,kB3ExkCtC5tC,EAAW,GAAKrI,EAAO,GACvBqI,EAAW,GAAKrI,EAAO,GACvBqI,EAAW,GAAKrI,EAAO,GACvBqI,EAAW,GAAKrI,EAAO,IAIhBA,EAAOmT,S2EokCd/f,KAAKuE,cAAAA,IAAAA,GAAAA,QAAAA,GAAoDvE,KAAMmP,IAC1DnP,KAAKqiD,2BACNriD,KAAKqiD,yBAA2B/c,YAAW,WACvCzhC,EAAMw+C,8BAA2Bp9C,EACjCpB,EAAMujD,qBACP,KASX7F,EAAaphD,UAAUkoD,cAAgB,SAAUvG,GAC7C9hD,KAAKqI,IAAAA,GAA4By5C,IAQrCP,EAAaphD,UAAUub,QAAU,SAAU9E,GACvC5W,KAAKqI,IAAAA,GAAsBuO,IAS/B2qC,EAAaphD,UAAU8kD,UAAY,SAAU/kD,GACzCF,KAAKqI,IAAAA,GAAwBnI,IAQjCqhD,EAAaphD,UAAUmoD,QAAU,SAAUvG,GACvC/hD,KAAKqI,IAAAA,GAAsB05C,IAO/BR,EAAaphD,UAAUsnD,WAAa,eAC5BD,EAAgBxnD,KAAK+lD,sBACpByB,OAIGe,EAAgBC,iBAAiBhB,GACrCxnD,KAAK0b,QAAAA,CACD8rC,EAAciB,YACVC,WAAWH,EAAc,iBACzBG,WAAWH,EAAc,aACzBG,WAAWH,EAAc,cACzBG,WAAWH,EAAc,kBAC7Bf,EAAcmB,aACVD,WAAWH,EAAc,gBACzBG,WAAWH,EAAc,YACzBG,WAAWH,EAAc,eACzBG,WAAWH,EAAc,0BAdjCvoD,KAAK0b,aAAQzW,GAiBjBjF,KAAK2nD,uBAMTpG,EAAaphD,UAAUwnD,oBAAsB,eACrC5F,EAAO/hD,KAAKgmD,aACZjE,EAAAA,KACInrC,OAAO3R,EACPsjD,EAAgBC,iBAAiBxoD,KAAKijD,WACtCsF,EAAc1wC,OAAS0wC,EAAczwC,SACrClB,EAAAA,CACIukB,SAASotB,EAAc1wC,MAAO,IAC9BsjB,SAASotB,EAAczwC,OAAQ,MAGvCiqC,EAAKrF,gBAAgB9lC,KAGtB2qC,EAxmCPD,oECtIAsH,GAA0B3iD,eACtBlD,EAAgB,SAAUE,EAAGpC,UAC7BkC,EAAgBtD,OAAOyD,gBAAAA,CAChBC,UAAAA,cAA2B7B,OAAAA,SAAmB2B,EAAGpC,GAAKoC,EAAEE,UAAYtC,aAC7DoC,EAAGpC,WAAcuC,KAAKvC,EAAOpB,OAAOU,UAAUqC,eAAea,KAAKxC,EAAGuC,KAAIH,EAAEG,GAAKvC,EAAEuC,MAC3EH,EAAGpC,WAErB,SAAUoC,EAAGpC,GAEhB,SAAAyC,IAAgBtD,KAAKuD,YAAcN,EADnCF,EAAcE,EAAGpC,GAEjBoC,EAAE9C,UAAkB,OAANU,EAAapB,OAAO+D,OAAO3C,IAAMyC,EAAGnD,UAAYU,EAAEV,UAAAA,IAAemD,IAVzD2C,GAwD1B4iD,GAAAA,SAAmCnlD,GAKnC,SAAAolD,EAAiB39C,OACTtH,EAAQH,EAAOL,KAAKrD,OAASA,KAC7Bm/B,EAAUh0B,EAAQg0B,eAClBA,GAAYh0B,EAAQjL,QAAWi/B,EAAQjkB,MAAMkoC,gBAC7CjkB,EAAQjkB,MAAMkoC,cAAgB,QAMlCv/C,EAAMs7B,QAAUA,GAAoB,KAKpCt7B,EAAMklD,QAAU,KAKhBllD,EAAMg5B,KAAO,KAKbh5B,EAAM+zB,aAAAA,GACFzsB,EAAQoD,SACR1K,EAAM0K,OAASpD,EAAQoD,QAEvBpD,EAAQjL,QACR2D,EAAMohD,UAAU95C,EAAQjL,QAErB2D,SApCX+kD,GAAUE,EAASplD,GAyCnBolD,EAAQ3oD,UAAUO,gBAAkB,cACrBV,KAAKm/B,SAChBz7B,EAAOvD,UAAUO,gBAAgB2C,KAAKrD,OAO1C8oD,EAAQ3oD,UAAU+9B,OAAS,kBAChBl+B,KAAK68B,MAShBisB,EAAQ3oD,UAAUsO,OAAS,SAAUD,GAC7BxO,KAAK68B,SACM78B,KAAKm/B,iBAEXj+B,EAAI,EAAGkB,EAAKpC,KAAK43B,aAAa32B,OAAQC,EAAIkB,IAAMlB,IACvClB,KAAK43B,aAAa12B,KAEpClB,KAAK43B,aAAa32B,OAAS,EAC3BjB,KAAK68B,KAAOruB,EACRxO,KAAK68B,SACQ78B,KAAK+oD,QACZ/oD,KAAK+oD,QACLv6C,EAAIg4C,gCACHjoC,YAAYve,KAAKm/B,SACpBn/B,KAAKuO,SAAAA,GACLvO,KAAK43B,aAAa90B,KAAAA,EAAY0L,EAAAA,GAA8BxO,KAAKuO,OAAQvO,OAE7EwO,EAAID,WAQZu6C,EAAQ3oD,UAAUoO,OAAS,SAAUy6C,KAUrCF,EAAQ3oD,UAAU8kD,UAAY,SAAU/kD,GACpCF,KAAK+oD,QACiB,iBAAX7oD,EAAsB2Z,SAAS6nC,eAAexhD,GAAUA,GAEhE4oD,EApGPD,wDCxDAI,GAA0BhjD,eACtBlD,EAAgB,SAAUE,EAAGpC,UAC7BkC,EAAgBtD,OAAOyD,gBAAAA,CAChBC,UAAAA,cAA2B7B,OAAAA,SAAmB2B,EAAGpC,GAAKoC,EAAEE,UAAYtC,aAC7DoC,EAAGpC,WAAcuC,KAAKvC,EAAOpB,OAAOU,UAAUqC,eAAea,KAAKxC,EAAGuC,KAAIH,EAAEG,GAAKvC,EAAEuC,MAC3EH,EAAGpC,WAErB,SAAUoC,EAAGpC,GAEhB,SAAAyC,IAAgBtD,KAAKuD,YAAcN,EADnCF,EAAcE,EAAGpC,GAEjBoC,EAAE9C,UAAkB,OAANU,EAAapB,OAAO+D,OAAO3C,IAAMyC,EAAGnD,UAAYU,EAAEV,UAAAA,IAAemD,IAVzD2C,GAyD1BijD,GAAAA,SAAuCxlD,GAKvC,SAAAylD,EAAqB74C,OACbzM,EAAQ7D,KACRmL,EAAUmF,GAAcA,IAC5BzM,EAAQH,EAAOL,KAAKrD,KAAA,CAChBm/B,QAAStlB,SAASC,cAAc,OAChCvL,OAAQpD,EAAQoD,OAChBrO,OAAQiL,EAAQjL,UACdF,MAKAopD,WAAavvC,SAASC,cAAc,MAK1CjW,EAAMwlD,gBACoBpkD,IAAtBkG,EAAQm+C,WAA0Bn+C,EAAQm+C,UAK9CzlD,EAAM0lD,eAAiB1lD,EAAMwlD,WAK7BxlD,EAAM2lD,0BAA+CvkD,IAAxBkG,EAAQs+C,YAKrC5lD,EAAM6lD,kBACsBzkD,IAAxBkG,EAAQs+C,aAA4Bt+C,EAAQs+C,YAC3C5lD,EAAM6lD,eACP7lD,EAAMwlD,YAAa,OAEnBv9C,OAAkC7G,IAAtBkG,EAAQW,UAA0BX,EAAQW,UAAY,iBAClE69C,OAAgC1kD,IAArBkG,EAAQw+C,SAAyBx+C,EAAQw+C,SAAW,eAC/DC,OAA8C3kD,IAA5BkG,EAAQy+C,gBACxBz+C,EAAQy+C,gBACR99C,EAAY,UACd+9C,OAA0C5kD,IAA1BkG,EAAQ0+C,cAA8B1+C,EAAQ0+C,cAAgB,IAC9EC,OAAkD7kD,IAA9BkG,EAAQ2+C,kBAC1B3+C,EAAQ2+C,kBACRh+C,EAAY,YACW,iBAAlB+9C,GAKPhmD,EAAMkmD,eAAiBlwC,SAASC,cAAc,QAC9CjW,EAAMkmD,eAAeC,YAAcH,EACnChmD,EAAMkmD,eAAej+C,UAAYg+C,GAGjCjmD,EAAMkmD,eAAiBF,MAEvBI,OAA0BhlD,IAAlBkG,EAAQ8+C,MAAsB9+C,EAAQ8+C,MAAQ,IACrC,iBAAVA,GAKPpmD,EAAMqmD,OAASrwC,SAASC,cAAc,QACtCjW,EAAMqmD,OAAOF,YAAcC,EAC3BpmD,EAAMqmD,OAAOp+C,UAAY89C,GAGzB/lD,EAAMqmD,OAASD,MAEfE,EAActmD,EAAM6lD,eAAiB7lD,EAAMwlD,WAAaxlD,EAAMkmD,eAAiBlmD,EAAMqmD,OACrFvkB,EAAS9rB,SAASC,cAAc,UACpC6rB,EAAOykB,aAAa,OAAQ,UAC5BzkB,EAAO0kB,MAAQV,EACfhkB,EAAOpnB,YAAY4rC,GACnBxkB,EAAOzhC,iBAAAA,EAAkCL,EAAMymD,aAAa5kD,KAAK7B,IAAQ,OACrE0mD,EAAaz+C,EACb,IADaA,mBAGb4O,IAEC7W,EAAMwlD,YAAcxlD,EAAM6lD,aAAe,gBAAwB,KACjE7lD,EAAM6lD,aAAe,GAAK,qBAC3BvqB,EAAUt7B,EAAMs7B,eACpBA,EAAQrzB,UAAYy+C,EACpBprB,EAAQ5gB,YAAY1a,EAAMulD,YAC1BjqB,EAAQ5gB,YAAYonB,GAMpB9hC,EAAM2mD,sBAAAA,GAKN3mD,EAAMm7B,kBAAmB,EAClBn7B,SAxGXolD,GAAUE,EAAazlD,GAgHvBylD,EAAYhpD,UAAUsqD,2BAA6B,SAAUt7C,WAKrDu7C,EAAAA,GAKAC,EAAAA,GACAlB,GAAc,EACdj6C,EAAmBL,EAAWK,iBACzBtO,EAAI,EAAGkB,EAAKoN,EAAiBvO,OAAQC,EAAIkB,IAAMlB,EAAAA,KAChDuO,EAAaD,EAAiBtO,eACtBuO,EAAYN,EAAWa,gBAG/B1N,EAA6DmN,EAAWrD,MAAO0C,eAC9ExM,OAGDsoD,EAAoBtoD,EAAO2yB,qBAC1B21B,OAGDj2B,EAAei2B,EAAkBz7C,MAChCwlB,KAGL80B,EACIA,IAAuD,IAAxCnnD,EAAO4yB,6BACtB5zB,MAAMC,QAAQozB,WACLzC,EAAI,EAAG+iB,EAAKtgB,EAAa1zB,OAAQixB,EAAI+iB,IAAM/iB,EAC1CyC,EAAazC,KAAMw4B,IACrBC,EAAoB7nD,KAAK6xB,EAAazC,IACtCw4B,EAAO/1B,EAAazC,KAAM,QAK5ByC,KAAgB+1B,IAClBC,EAAoB7nD,KAAK6xB,GACzB+1B,EAAO/1B,IAAgB,aAI9B30B,KAAKwpD,sBACNxpD,KAAK6qD,eAAepB,GAEjBkB,GAMXxB,EAAYhpD,UAAU2qD,eAAiB,SAAU37C,MACxCA,OAODwlB,EAAe30B,KAAKyqD,2BAA2Bt7C,GAC/C7D,EAAUqpB,EAAa1zB,OAAS,KAChCjB,KAAKg/B,kBAAoB1zB,IACzBtL,KAAKm/B,QAAQjkB,MAAMwkB,QAAUp0B,EAAU,GAAK,OAC5CtL,KAAKg/B,iBAAmB1zB,MAEjBqpB,EAAc30B,KAAKwqD,yB3EvK/B,SAAwBjwC,QACpBA,EAAKwwC,WACRxwC,EAAKC,YAAYD,EAAKwwC,Y2EwKP/qD,KAAKopD,oBAEXloD,EAAI,EAAGkB,EAAKuyB,EAAa1zB,OAAQC,EAAIkB,IAAMlB,EAAAA,KAC5Ci+B,EAAUtlB,SAASC,cAAc,MACrCqlB,EAAQ6rB,UAAYr2B,EAAazzB,GACjClB,KAAKopD,WAAW7qC,YAAY4gB,GAEhCn/B,KAAKwqD,sBAAwB71B,QAtBrB30B,KAAKg/B,mBACLh/B,KAAKm/B,QAAQjkB,MAAMwkB,QAAU,OAC7B1/B,KAAKg/B,kBAAmB,IA0BpCmqB,EAAYhpD,UAAUmqD,aAAe,SAAU9lD,GAC3CA,EAAMpE,iBACNJ,KAAKirD,gBACLjrD,KAAKupD,eAAiBvpD,KAAKqpD,YAK/BF,EAAYhpD,UAAU8qD,cAAgB,WAClCjrD,KAAKm/B,QAAQ+rB,UAAUC,OAAAA,IACnBnrD,KAAKqpD,cACOrpD,KAAK+pD,eAAgB/pD,KAAKkqD,WAG1BlqD,KAAKkqD,OAAQlqD,KAAK+pD,gBAElC/pD,KAAKqpD,YAAcrpD,KAAKqpD,YAO5BF,EAAYhpD,UAAUirD,eAAiB,kBAC5BprD,KAAK0pD,cAOhBP,EAAYhpD,UAAU0qD,eAAiB,SAAUpB,GACzCzpD,KAAK0pD,eAAiBD,IAG1BzpD,KAAK0pD,aAAeD,EACpBzpD,KAAKm/B,QAAQ+rB,UAAUC,OAAO,oBAC1BnrD,KAAKupD,gBACLvpD,KAAKirD,kBAUb9B,EAAYhpD,UAAUkrD,aAAe,SAAU/B,GAC3CtpD,KAAKupD,eAAiBD,EACjBtpD,KAAK0pD,cAAgB1pD,KAAKqpD,aAAeC,GAG9CtpD,KAAKirD,iBAQT9B,EAAYhpD,UAAUmrD,aAAe,kBAC1BtrD,KAAKqpD,YAOhBF,EAAYhpD,UAAUoO,OAAS,SAAUy6C,GACrChpD,KAAK8qD,eAAe9B,EAAS75C,aAE1Bg6C,EA/QPD,+DCzDAqC,GAA0BtlD,eACtBlD,EAAgB,SAAUE,EAAGpC,UAC7BkC,EAAgBtD,OAAOyD,gBAAAA,CAChBC,UAAAA,cAA2B7B,OAAAA,SAAmB2B,EAAGpC,GAAKoC,EAAEE,UAAYtC,aAC7DoC,EAAGpC,WAAcuC,KAAKvC,EAAOpB,OAAOU,UAAUqC,eAAea,KAAKxC,EAAGuC,KAAIH,EAAEG,GAAKvC,EAAEuC,MAC3EH,EAAGpC,WAErB,SAAUoC,EAAGpC,GAEhB,SAAAyC,IAAgBtD,KAAKuD,YAAcN,EADnCF,EAAcE,EAAGpC,GAEjBoC,EAAE9C,UAAkB,OAANU,EAAapB,OAAO+D,OAAO3C,IAAMyC,EAAGnD,UAAYU,EAAEV,UAAAA,IAAemD,IAVzD2C,GA4C1BulD,GAAAA,SAAkC9nD,GAKlC,SAAA+nD,EAAgBn7C,OACRzM,EAAQ7D,KACRmL,EAAUmF,GAAcA,GAC5BzM,EAAQH,EAAOL,KAAKrD,KAAA,CAChBm/B,QAAStlB,SAASC,cAAc,OAChCvL,OAAQpD,EAAQoD,OAChBrO,OAAQiL,EAAQjL,UACdF,SACF8L,OAAkC7G,IAAtBkG,EAAQW,UAA0BX,EAAQW,UAAY,YAClEm+C,OAA0BhlD,IAAlBkG,EAAQ8+C,MAAsB9+C,EAAQ8+C,MAAQ,IACtDyB,OAAgDzmD,IAA7BkG,EAAQugD,iBACzBvgD,EAAQugD,iBACR,aAKN7nD,EAAMqmD,OAAS,KACM,iBAAVD,GACPpmD,EAAMqmD,OAASrwC,SAASC,cAAc,QACtCjW,EAAMqmD,OAAOp+C,UAAY4/C,EACzB7nD,EAAMqmD,OAAOF,YAAcC,IAG3BpmD,EAAMqmD,OAASD,EACfpmD,EAAMqmD,OAAOgB,UAAUS,IAAID,QAE3B/B,EAAWx+C,EAAQw+C,SAAWx+C,EAAQw+C,SAAW,iBACjDhkB,EAAS9rB,SAASC,cAAc,UACpC6rB,EAAO75B,UAAYA,EAAY,SAC/B65B,EAAOykB,aAAa,OAAQ,UAC5BzkB,EAAO0kB,MAAQV,EACfhkB,EAAOpnB,YAAY1a,EAAMqmD,QACzBvkB,EAAOzhC,iBAAAA,EAAkCL,EAAMymD,aAAa5kD,KAAK7B,IAAQ,OACrE0mD,EAAaz+C,EAAY,IAAZA,mBAAuC4O,GACpDykB,EAAUt7B,EAAMs7B,eACpBA,EAAQrzB,UAAYy+C,EACpBprB,EAAQ5gB,YAAYonB,GACpB9hC,EAAM+nD,gBAAkBzgD,EAAQ0gD,WAAa1gD,EAAQ0gD,gBAAa5mD,EAKlEpB,EAAMioD,eAAiC7mD,IAArBkG,EAAQwvC,SAAyBxvC,EAAQwvC,SAAW,IAKtE92C,EAAMkoD,eAAiC9mD,IAArBkG,EAAQ6gD,UAAyB7gD,EAAQ6gD,SAK3DnoD,EAAMooD,eAAYhnD,EACdpB,EAAMkoD,WACNloD,EAAMs7B,QAAQ+rB,UAAUS,IAAAA,IAErB9nD,SA7DX0nD,GAAUE,EAAQ/nD,GAmElB+nD,EAAOtrD,UAAUmqD,aAAe,SAAU9lD,GACtCA,EAAMpE,sBACuB6E,IAAzBjF,KAAK4rD,gBACL5rD,KAAK4rD,kBAGL5rD,KAAKksD,eAMbT,EAAOtrD,UAAU+rD,YAAc,eAEvBnK,EADM/hD,KAAKk+B,SACA8nB,aACVjE,OAKDprC,EAAWorC,EAAKnI,mBACH30C,IAAb0R,IACI3W,KAAK8rD,UAAY,GAAKn1C,GAAY,EAAIpN,KAAKqB,KAAQ,EACnDm3C,EAAKlI,QAAAA,CACDljC,SAAU,EACVgkC,SAAU36C,KAAK8rD,UACflR,OAAAA,KAIJmH,EAAK5I,YAAY,MAS7BsS,EAAOtrD,UAAUoO,OAAS,SAAUy6C,OAC5B75C,EAAa65C,EAAS75C,cACrBA,OAGDwH,EAAWxH,EAAWa,UAAU2G,YAChCA,GAAY3W,KAAKisD,UAAAA,KACbn5C,EAAY,UAAY6D,EAAW,UACnC3W,KAAK+rD,UAAAA,KACD/E,EAAWhnD,KAAKm/B,QAAQ+rB,UAAUlE,SAAAA,IACjCA,GAAyB,IAAbrwC,EAGRqwC,GAAyB,IAAbrwC,GACjB3W,KAAKm/B,QAAQ+rB,UAAUlqB,OAAAA,IAHvBhhC,KAAKm/B,QAAQ+rB,UAAUS,IAAAA,IAM/B3rD,KAAKkqD,OAAOhvC,MAAMpI,UAAYA,EAElC9S,KAAKisD,UAAYt1C,IAEd80C,EAhIPD,+DC5CAW,GAA0BlmD,eACtBlD,EAAgB,SAAUE,EAAGpC,UAC7BkC,EAAgBtD,OAAOyD,gBAAAA,CAChBC,UAAAA,cAA2B7B,OAAAA,SAAmB2B,EAAGpC,GAAKoC,EAAEE,UAAYtC,aAC7DoC,EAAGpC,WAAcuC,KAAKvC,EAAOpB,OAAOU,UAAUqC,eAAea,KAAKxC,EAAGuC,KAAIH,EAAEG,GAAKvC,EAAEuC,MAC3EH,EAAGpC,WAErB,SAAUoC,EAAGpC,GAEhB,SAAAyC,IAAgBtD,KAAKuD,YAAcN,EADnCF,EAAcE,EAAGpC,GAEjBoC,EAAE9C,UAAkB,OAANU,EAAapB,OAAO+D,OAAO3C,IAAMyC,EAAGnD,UAAYU,EAAEV,UAAAA,IAAemD,IAVzD2C,GA4C1BmmD,GAAAA,SAAgC1oD,GAKhC,SAAA2oD,EAAc/7C,OACNzM,EAAQ7D,KACRmL,EAAUmF,GAAcA,GAC5BzM,EAAQH,EAAOL,KAAKrD,KAAA,CAChBm/B,QAAStlB,SAASC,cAAc,OAChC5Z,OAAQiL,EAAQjL,UACdF,SACF8L,OAAkC7G,IAAtBkG,EAAQW,UAA0BX,EAAQW,UAAY,UAClEivC,OAA0B91C,IAAlBkG,EAAQ4vC,MAAsB5vC,EAAQ4vC,MAAQ,EACtDuR,OAA8CrnD,IAA5BkG,EAAQmhD,gBACxBnhD,EAAQmhD,gBACRxgD,EAAY,MACdygD,OAAgDtnD,IAA7BkG,EAAQohD,iBACzBphD,EAAQohD,iBACRzgD,EAAY,OACd0gD,OAAsCvnD,IAAxBkG,EAAQqhD,YAA4BrhD,EAAQqhD,YAAc,IACxEC,OAAwCxnD,IAAzBkG,EAAQshD,aAA6BthD,EAAQshD,aAAe,IAC3EC,OAA4CznD,IAA3BkG,EAAQuhD,eAA+BvhD,EAAQuhD,eAAiB,UACjFC,OAA8C1nD,IAA5BkG,EAAQwhD,gBACxBxhD,EAAQwhD,gBACR,WACFC,EAAY/yC,SAASC,cAAc,UACvC8yC,EAAU9gD,UAAYwgD,EACtBM,EAAUxC,aAAa,OAAQ,UAC/BwC,EAAUvC,MAAQqC,EAClBE,EAAUruC,YAAmC,iBAAhBiuC,EACvB3yC,SAASgzC,eAAeL,GACxBA,GACNI,EAAU1oD,iBAAAA,EAAkCL,EAAMymD,aAAa5kD,KAAK7B,EAAOk3C,IAAQ,OAC/E+R,EAAajzC,SAASC,cAAc,UACxCgzC,EAAWhhD,UAAYygD,EACvBO,EAAW1C,aAAa,OAAQ,UAChC0C,EAAWzC,MAAQsC,EACnBG,EAAWvuC,YAAoC,iBAAjBkuC,EACxB5yC,SAASgzC,eAAeJ,GACxBA,GACNK,EAAW5oD,iBAAAA,EAAkCL,EAAMymD,aAAa5kD,KAAK7B,GAAQk3C,IAAQ,OACjFwP,EAAaz+C,EAAY,IAAZA,mBAAuC4O,GACpDykB,EAAUt7B,EAAMs7B,eACpBA,EAAQrzB,UAAYy+C,EACpBprB,EAAQ5gB,YAAYquC,GACpBztB,EAAQ5gB,YAAYuuC,GAKpBjpD,EAAMioD,eAAiC7mD,IAArBkG,EAAQwvC,SAAyBxvC,EAAQwvC,SAAW,IAC/D92C,SAnDXsoD,GAAUE,EAAM3oD,GA0DhB2oD,EAAKlsD,UAAUmqD,aAAe,SAAUvP,EAAOv2C,GAC3CA,EAAMpE,iBACNJ,KAAK+sD,aAAahS,IAMtBsR,EAAKlsD,UAAU4sD,aAAe,SAAUhS,OAEhCgH,EADM/hD,KAAKk+B,SACA8nB,aACVjE,OAKDiL,EAAcjL,EAAKrI,kBACHz0C,IAAhB+nD,EAAgB/nD,KACZgoD,EAAUlL,EAAKhB,mBAAmBiM,EAAcjS,GAChD/6C,KAAK8rD,UAAY,GACb/J,EAAK/H,gBACL+H,EAAK1G,mBAET0G,EAAKlI,QAAAA,CACD3pC,KAAM+8C,EACNtS,SAAU36C,KAAK8rD,UACflR,OAAAA,MAIJmH,EAAKzI,QAAQ2T,MAIlBZ,EA7FPD,wECrCQ,SCPRc,GAA0BjnD,eACtBlD,EAAgB,SAAUE,EAAGpC,UAC7BkC,EAAgBtD,OAAOyD,gBAAAA,CAChBC,UAAAA,cAA2B7B,OAAAA,SAAmB2B,EAAGpC,GAAKoC,EAAEE,UAAYtC,aAC7DoC,EAAGpC,WAAcuC,KAAKvC,EAAOpB,OAAOU,UAAUqC,eAAea,KAAKxC,EAAGuC,KAAIH,EAAEG,GAAKvC,EAAEuC,MAC3EH,EAAGpC,WAErB,SAAUoC,EAAGpC,GAEhB,SAAAyC,IAAgBtD,KAAKuD,YAAcN,EADnCF,EAAcE,EAAGpC,GAEjBoC,EAAE9C,UAAkB,OAANU,EAAapB,OAAO+D,OAAO3C,IAAMyC,EAAGnD,UAAYU,EAAEV,UAAAA,IAAemD,IAVzD2C,GA0C1BknD,GAAAA,SAAuCzpD,GAKvC,SAAA0pD,EAAqB98C,OACbzM,EAAQH,EAAOL,KAAKrD,OAASA,YAC7BsQ,GAAeA,EAAYzL,cAC3BhB,EAAMgB,YAAcyL,EAAYzL,aAMpChB,EAAMg5B,KAAO,KACbh5B,EAAMwpD,WAAU,GACTxpD,SAfXqpD,GAAUE,EAAa1pD,GAuBvB0pD,EAAYjtD,UAAUgnD,UAAY,kBACCnnD,KAAKL,IAAAA,KAOxCytD,EAAYjtD,UAAU+9B,OAAS,kBACpBl+B,KAAK68B,MAQhBuwB,EAAYjtD,UAAU0E,YAAc,SAAU8hD,UACnC,GAQXyG,EAAYjtD,UAAUktD,UAAY,SAAUC,GACxCttD,KAAKqI,IAAAA,GAAgCilD,IAQzCF,EAAYjtD,UAAUsO,OAAS,SAAUD,GACrCxO,KAAK68B,KAAOruB,GAET4+C,EA9DPD,YAqEG,SAAAI,GAAaxL,EAAMhH,EAAO0F,OACzBpE,EAAgB0F,EAAKpI,uBACrB0C,EAAAA,KACI3lC,EAAAA,CAAU2lC,EAAc,GAAKtB,EAAM,GAAIsB,EAAc,GAAKtB,EAAM,IACpEgH,EAAK5H,gBAAAA,CACDQ,cAA2B11C,IAAjBw7C,EAA6BA,EAAe,IACtD7F,OAAAA,GACAlkC,OAAQqrC,EAAK7C,qBAAqBxoC,MAUvC,SAAA82C,GAAqBzL,EAAMhH,EAAO5M,EAAYsS,OAC7CuM,EAAcjL,EAAKrI,kBACHz0C,IAAhB+nD,OAGAC,EAAUlL,EAAKhB,mBAAmBiM,EAAcjS,GAChDgF,EAAgBgC,EAAKlH,qBAAqBoS,GAC1ClL,EAAK/H,gBACL+H,EAAK1G,mBAET0G,EAAKlI,QAAAA,CACD5pC,WAAY8vC,EACZ9R,OAAQE,EACRwM,cAA2B11C,IAAjBw7C,EAA6BA,EAAe,IACtD7F,OAAAA,kIC9IJ6S,GAA0BxnD,eACtBlD,EAAgB,SAAUE,EAAGpC,UAC7BkC,EAAgBtD,OAAOyD,gBAAAA,CAChBC,UAAAA,cAA2B7B,OAAAA,SAAmB2B,EAAGpC,GAAKoC,EAAEE,UAAYtC,aAC7DoC,EAAGpC,WAAcuC,KAAKvC,EAAOpB,OAAOU,UAAUqC,eAAea,KAAKxC,EAAGuC,KAAIH,EAAEG,GAAKvC,EAAEuC,MAC3EH,EAAGpC,WAErB,SAAUoC,EAAGpC,GAEhB,SAAAyC,IAAgBtD,KAAKuD,YAAcN,EADnCF,EAAcE,EAAGpC,GAEjBoC,EAAE9C,UAAkB,OAANU,EAAapB,OAAO+D,OAAO3C,IAAMyC,EAAGnD,UAAYU,EAAEV,UAAAA,IAAemD,IAVzD2C,GA4B1BynD,GAAAA,SAA2ChqD,GAK3C,SAAAiqD,EAAyBr9C,OACjBzM,EAAQH,EAAOL,KAAKrD,OAASA,KAC7BmL,EAAUmF,GAAcA,UAK5BzM,EAAM+pD,OAASziD,EAAQ4vC,MAAQ5vC,EAAQ4vC,MAAQ,EAK/Cl3C,EAAMioD,eAAiC7mD,IAArBkG,EAAQwvC,SAAyBxvC,EAAQwvC,SAAW,IAC/D92C,SAjBX4pD,GAAUE,EAAiBjqD,GAyB3BiqD,EAAgBxtD,UAAU0E,YAAc,SAAU8hD,OAC1CkH,GAAY,KACZlH,EAAgB5mD,MAAAA,GAA4BsjC,SAAAA,KACxCqjB,EAA0CC,EAAgBhkB,cAC1Dn0B,EAAMm4C,EAAgBn4C,IACtBy/B,EAAS0Y,EAAgBl1C,WACzBspC,EAAQ2L,EAAaoH,UAAY9tD,KAAK4tD,OAAS5tD,KAAK4tD,OACpD7L,EAAOvzC,EAAIw3C,yBACHjE,EAAMhH,EAAO9M,EAAQjuC,KAAK8rD,WACtCpF,EAAatmD,iBACbytD,GAAY,SAERA,GAELF,EAxCPD,qEC5BAK,GAA0B9nD,eACtBlD,EAAgB,SAAUE,EAAGpC,UAC7BkC,EAAgBtD,OAAOyD,gBAAAA,CAChBC,UAAAA,cAA2B7B,OAAAA,SAAmB2B,EAAGpC,GAAKoC,EAAEE,UAAYtC,aAC7DoC,EAAGpC,WAAcuC,KAAKvC,EAAOpB,OAAOU,UAAUqC,eAAea,KAAKxC,EAAGuC,KAAIH,EAAEG,GAAKvC,EAAEuC,MAC3EH,EAAGpC,WAErB,SAAUoC,EAAGpC,GAEhB,SAAAyC,IAAgBtD,KAAKuD,YAAcN,EADnCF,EAAcE,EAAGpC,GAEjBoC,EAAE9C,UAAkB,OAANU,EAAapB,OAAO+D,OAAO3C,IAAMyC,EAAGnD,UAAYU,EAAEV,UAAAA,IAAemD,IAVzD2C,GAwD1B+nD,GAAAA,SAA8CtqD,GAK9C,SAAAuqD,EAA4B39C,OACpBzM,EAAQ7D,KACRmL,EAAUmF,GAAcA,UAC5BzM,EAAQH,EAAOL,KAAKrD,KAC0CmL,IAAanL,KACvEmL,EAAQ+iD,kBACRrqD,EAAMqqD,gBAAkB/iD,EAAQ+iD,iBAEhC/iD,EAAQgjD,kBACRtqD,EAAMsqD,gBAAkBhjD,EAAQgjD,iBAEhChjD,EAAQijD,kBACRvqD,EAAMuqD,gBAAkBjjD,EAAQijD,iBAEhCjjD,EAAQkjD,gBACRxqD,EAAMwqD,cAAgBljD,EAAQkjD,eAE9BljD,EAAQmjD,WACRzqD,EAAMyqD,SAAWnjD,EAAQmjD,UAM7BzqD,EAAM0qD,wBAAyB,EAK/B1qD,EAAM2qD,iBAAAA,GAKN3qD,EAAM4qD,eAAAA,GACC5qD,SAvCXkqD,GAAUE,EAAoBvqD,GA+C9BuqD,EAAmB9tD,UAAUuuD,gBAAkB,kBACpC1uD,KAAKyuD,eAAextD,QAQ/BgtD,EAAmB9tD,UAAU+tD,gBAAkB,SAAUvH,UAC9C,GAOXsH,EAAmB9tD,UAAUguD,gBAAkB,SAAUxH,KASzDsH,EAAmB9tD,UAAU0E,YAAc,SAAU8hD,OAC5CA,EAAgBhkB,qBACV,MAEPkrB,GAAY,KAChB7tD,KAAK2uD,uBAAuBhI,GACxB3mD,KAAKuuD,2BACD5H,EAAgB5mD,MAAAA,GAA4BujC,YAC5CtjC,KAAKmuD,gBAAgBxH,GAErBA,EAAgBhkB,cAAcviC,yBAEzBumD,EAAgB5mD,MAAAA,GAA4B0jC,UAAAA,KAC7CmrB,EAAY5uD,KAAKquD,cAAc1H,GACnC3mD,KAAKuuD,uBACDK,GAAa5uD,KAAKyuD,eAAextD,OAAS,WAI9C0lD,EAAgB5mD,MAAAA,GAA4ByjC,YAAAA,KACxCqrB,EAAU7uD,KAAKkuD,gBAAgBvH,GACnC3mD,KAAKuuD,uBAAyBM,EAC9BhB,EAAY7tD,KAAKsuD,SAASO,QAErBlI,EAAgB5mD,MAAAA,GAA4BwjC,aACjDvjC,KAAKouD,gBAAgBzH,UAGrBkH,GAOZI,EAAmB9tD,UAAUiuD,gBAAkB,SAAUzH,KAOzDsH,EAAmB9tD,UAAUkuD,cAAgB,SAAU1H,UAC5C,GAQXsH,EAAmB9tD,UAAUmuD,SAAW,SAAUO,UACvCA,GAMXZ,EAAmB9tD,UAAUwuD,uBAAyB,SAAUhI,MAsCpE,SAAgCA,OACxB5mD,EAAO4mD,EAAgB5mD,YACnBA,IAAAA,GAA6ByjC,aACjCzjC,IAAAA,GAA6BujC,aAC7BvjC,IAAAA,GAA6B0jC,UAzCzBqrB,CAAuBnI,GAAAA,KACnBjnC,EAAUinC,EAAgBhkB,cAC1Bb,EAAKpiB,EAAQ8lB,UAAUt0B,WACvBy1C,EAAgB5mD,MAAAA,GAA4B0jC,iBACrCzjC,KAAKwuD,iBAAiB1sB,IAExB6kB,EAAgB5mD,MAAAA,GAA4ByjC,aAG5C1B,KAAM9hC,KAAKwuD,oBAFhBxuD,KAAKwuD,iBAAiB1sB,GAAMpiB,GAMhC1f,KAAKyuD,eAAAA,EAA2BzuD,KAAKwuD,oBAGtCP,EArJPD,aA2JG,SAAAe,GAAkB3L,WACjBniD,EAASmiD,EAAcniD,OACvBilC,EAAU,EACVC,EAAU,EACLjlC,EAAI,EAAGA,EAAID,EAAQC,IACxBglC,GAAWkd,EAAcliD,GAAGglC,QAC5BC,GAAWid,EAAcliD,GAAGilC,eAExBD,EAAUjlC,EAAQklC,EAAUllC,GCzMjC,SAAA+tD,GAAalV,OACZmV,EAAa5sD,iBAKV,SAAUmC,WACT0qD,GAAO,EACFhuD,EAAI,EAAGkB,EAAK6sD,EAAWhuD,OAAQC,EAAIkB,IACxC8sD,EAAOA,GAAQD,EAAW/tD,GAAGsD,MADiBtD,UAM3CguD,wFAyBJC,GAAmB,SAAUxI,OAChChkB,EAAoEgkB,EAAgBhkB,qBAChFA,EAAcysB,UAChBzsB,EAAc0sB,SAAW1sB,EAAc2sB,UACzC3sB,EAAcmrB,UAmBXyB,GAAoB,SAAU/qD,UAC9BA,EAAMgK,IAAIu3C,mBAAmByJ,aAAa,aAVlC,SAAUhrD,UAClBA,EAAMtE,OAAO6lD,mBAAmBiB,SAASntC,SAAS41C,eAUnDC,CAAMlrD,IAULmrD,GAAAA,EAoBAC,GAAoB,SAAUjJ,OACjChkB,EAA2CgkB,EAAgBhkB,qBAChC,GAAxBA,EAAcgD,UAAUntB,IAAAC,IAAwBkqB,EAAc2sB,UAiD9DO,GAAiB,SAAUlJ,OAC9BhkB,EAAoEgkB,EAAgBhkB,qBAC/EA,EAAcysB,UACjBzsB,EAAc0sB,SAAW1sB,EAAc2sB,WACxC3sB,EAAcmrB,UAyBZgC,GAAe,SAAUnJ,OAC5BhkB,EAAoEgkB,EAAgBhkB,qBAC/EA,EAAcysB,UACjBzsB,EAAc0sB,SAAW1sB,EAAc2sB,UACzC3sB,EAAcmrB,UAUXiC,GAAoB,SAAUpJ,OAEjCqJ,EADoErJ,EAAgBhkB,cACpCziC,OAAQ8vD,cACzC,UAAZA,GAAmC,WAAZA,GAAoC,aAAZA,GAS/CC,GAAY,SAAUtJ,OACzBxhB,EAAoEwhB,EACnEhkB,6BACmB19B,IAAjBkgC,EAA4B,IAEA,SAA5BA,EAAa+qB,aAuCbC,GAAgB,SAAUxJ,OAC7BxhB,EAAoEwhB,EACnEhkB,6BACmB19B,IAAjBkgC,EAA4B,IAC5BA,EAAairB,WAAqC,IAAxBjrB,EAAaQ,QC1Q9C0qB,GAA0BpqD,eACtBlD,EAAgB,SAAUE,EAAGpC,UAC7BkC,EAAgBtD,OAAOyD,gBAAAA,CAChBC,UAAAA,cAA2B7B,OAAAA,SAAmB2B,EAAGpC,GAAKoC,EAAEE,UAAYtC,aAC7DoC,EAAGpC,WAAcuC,KAAKvC,EAAOpB,OAAOU,UAAUqC,eAAea,KAAKxC,EAAGuC,KAAIH,EAAEG,GAAKvC,EAAEuC,MAC3EH,EAAGpC,WAErB,SAAUoC,EAAGpC,GAEhB,SAAAyC,IAAgBtD,KAAKuD,YAAcN,EADnCF,EAAcE,EAAGpC,GAEjBoC,EAAE9C,UAAkB,OAANU,EAAapB,OAAO+D,OAAO3C,IAAMyC,EAAGnD,UAAYU,EAAEV,UAAAA,IAAemD,IAVzD2C,GAmC1BqqD,GAAAA,SAAmC5sD,GAKnC,SAAA6sD,EAAiBjgD,OACTzM,EAAQH,EAAOL,KAAKrD,KAAA,CACpBsuD,SAAAA,KACEtuD,KACFmL,EAAUmF,GAAcA,GAK5BzM,EAAM2sD,SAAWrlD,EAAQslD,QAIzB5sD,EAAM6sD,aAAe,KAIrB7sD,EAAM8sD,mBAIN9sD,EAAM+sD,UAAW,MACbC,EAAY1lD,EAAQ0lD,UAClB1lD,EAAQ0lD,UAAAA,GAAAA,GAAAA,WAMdhtD,EAAMitD,WAAa3lD,EAAQ4lD,YAAAA,GAAAA,GACEF,GACvBA,EAKNhtD,EAAMmtD,YAAa,EACZntD,SAzCXwsD,GAAUE,EAAS7sD,GA+CnB6sD,EAAQpwD,UAAUguD,gBAAkB,SAAUxH,GACrC3mD,KAAK4wD,WACN5wD,KAAK4wD,UAAW,EAChB5wD,KAAKk+B,SAAS8nB,UAAUrF,wBtEgMdlvC,EAAYuY,EsE9LtBykC,EAAiBzuD,KAAKyuD,eACtBwC,EAAAA,GAAAA,SAAgCxC,MAChCA,EAAextD,QAAUjB,KAAK2wD,uBAC1B3wD,KAAKwwD,UACLxwD,KAAKwwD,SAASU,OAAOD,EAAS,GAAIA,EAAS,IAE3CjxD,KAAK0wD,aAAAA,KACD3V,EAAAA,CACA/6C,KAAK0wD,aAAa,GAAKO,EAAS,GAChCA,EAAS,GAAKjxD,KAAK0wD,aAAa,IAGhC3O,EADM4E,EAAgBn4C,IACXw3C,UtEkLTv0C,EsEjLUspC,EtEiLE/wB,EsEjLK+3B,EAAKn4B,gBtEkLxCnY,EAAW,IAAMuY,EACjBvY,EAAW,IAAMuY,KsElLY+wB,EAAOgH,EAAKnI,eAC7BmI,EAAKpC,qBAAqB5E,SAGzB/6C,KAAKwwD,UAGVxwD,KAAKwwD,SAASW,QAElBnxD,KAAK0wD,aAAeO,EACpBjxD,KAAK2wD,mBAAqBlC,EAAextD,OACzC0lD,EAAgBhkB,cAAcviC,kBAOlCmwD,EAAQpwD,UAAUkuD,cAAgB,SAAU1H,OACpCn4C,EAAMm4C,EAAgBn4C,IACtBuzC,EAAOvzC,EAAIw3C,aACoB,IAA/BhmD,KAAKyuD,eAAextD,OAAW,KAC1BjB,KAAKgxD,YAAchxD,KAAKwwD,UAAYxwD,KAAKwwD,SAASh7C,MAAAA,KAC/C47C,EAAWpxD,KAAKwwD,SAASa,cACzBj+C,EAAQpT,KAAKwwD,SAASc,WACtB56C,EAASqrC,EAAKpI,oBACd4X,EAAW/iD,EAAI63C,+BAA+B3vC,GAC9Cs1B,EAAOx9B,EAAI22C,+BAAAA,CACXoM,EAAS,GAAKH,EAAW7nD,KAAKiK,IAAIJ,GAClCm+C,EAAS,GAAKH,EAAW7nD,KAAKgK,IAAIH,KAEtC2uC,EAAK5H,gBAAAA,CACDzjC,OAAQqrC,EAAK7C,qBAAqBlT,GAClC2O,SAAU,IACVC,OAAAA,YAGJ56C,KAAK4wD,WACL5wD,KAAK4wD,UAAW,EAChB7O,EAAKnB,mBAEF,SAGH5gD,KAAKwwD,UAGLxwD,KAAKwwD,SAASW,QAElBnxD,KAAK0wD,aAAe,MACb,GAQfH,EAAQpwD,UAAU+tD,gBAAkB,SAAUvH,MACtC3mD,KAAKyuD,eAAextD,OAAS,GAAKjB,KAAK8wD,WAAWnK,GAAAA,KAE9C5E,EADM4E,EAAgBn4C,IACXw3C,iBACfhmD,KAAK0wD,aAAe,KAEhB3O,EAAK/H,gBACL+H,EAAK1G,mBAELr7C,KAAKwwD,UACLxwD,KAAKwwD,SAASW,QAIlBnxD,KAAKgxD,WAAahxD,KAAKyuD,eAAextD,OAAS,GACxC,SAGA,GAGRsvD,EAlJPD,+DCnCAkB,GAA0BvrD,eACtBlD,EAAgB,SAAUE,EAAGpC,UAC7BkC,EAAgBtD,OAAOyD,gBAAAA,CAChBC,UAAAA,cAA2B7B,OAAAA,SAAmB2B,EAAGpC,GAAKoC,EAAEE,UAAYtC,aAC7DoC,EAAGpC,WAAcuC,KAAKvC,EAAOpB,OAAOU,UAAUqC,eAAea,KAAKxC,EAAGuC,KAAIH,EAAEG,GAAKvC,EAAEuC,MAC3EH,EAAGpC,WAErB,SAAUoC,EAAGpC,GAEhB,SAAAyC,IAAgBtD,KAAKuD,YAAcN,EADnCF,EAAcE,EAAGpC,GAEjBoC,EAAE9C,UAAkB,OAANU,EAAapB,OAAO+D,OAAO3C,IAAMyC,EAAGnD,UAAYU,EAAEV,UAAAA,IAAemD,IAVzD2C,GAqC1BwrD,GAAAA,SAAsC/tD,GAKtC,SAAAguD,EAAoBphD,OACZzM,EAAQ7D,KACRmL,EAAUmF,GAAcA,UAC5BzM,EAAQH,EAAOL,KAAKrD,KAAA,CAChBsuD,SAAAA,KACEtuD,MAKA8wD,WAAa3lD,EAAQ0lD,UAAY1lD,EAAQ0lD,UAAAA,GAK/ChtD,EAAM8tD,gBAAa1sD,EAKnBpB,EAAMioD,eAAiC7mD,IAArBkG,EAAQwvC,SAAyBxvC,EAAQwvC,SAAW,IAC/D92C,SAzBX2tD,GAAUE,EAAYhuD,GA+BtBguD,EAAWvxD,UAAUguD,gBAAkB,SAAUxH,SAC9BA,QAGXn4C,EAAMm4C,EAAgBn4C,IACtBuzC,EAAOvzC,EAAIw3C,aACXjE,EAAKlF,iBAAiBlmC,WAAAA,QAGtBC,EAAOpI,EAAI83C,UACX/wC,EAASoxC,EAAgBz3C,MACzB8pC,EAAQzvC,KAAK+b,MAAM1O,EAAK,GAAK,EAAIrB,EAAO,GAAIA,EAAO,GAAKqB,EAAK,GAAK,WAC9C3R,IAApBjF,KAAK2xD,WAAe1sD,KAChB81C,EAAQ/B,EAAQh5C,KAAK2xD,WACzB5P,EAAK7B,wBAAwBnF,GAEjC/6C,KAAK2xD,WAAa3Y,KAOtB0Y,EAAWvxD,UAAUkuD,cAAgB,SAAU1H,aAC5BA,KAGLA,EAAgBn4C,IACXw3C,UACVpF,eAAe5gD,KAAK8rD,YAClB,IAOX4F,EAAWvxD,UAAU+tD,gBAAkB,SAAUvH,cAC9BA,WAGOA,KAClB3mD,KAAK8wD,WAAWnK,MACNA,EAAgBn4C,IACtBw3C,UAAUrF,mBACd3gD,KAAK2xD,gBAAa1sD,GACX,KAMRysD,EApFPD,2EClCAG,GAA0B3rD,eACtBlD,EAAgB,SAAUE,EAAGpC,UAC7BkC,EAAgBtD,OAAOyD,gBAAAA,CAChBC,UAAAA,cAA2B7B,OAAAA,SAAmB2B,EAAGpC,GAAKoC,EAAEE,UAAYtC,aAC7DoC,EAAGpC,WAAcuC,KAAKvC,EAAOpB,OAAOU,UAAUqC,eAAea,KAAKxC,EAAGuC,KAAIH,EAAEG,GAAKvC,EAAEuC,MAC3EH,EAAGpC,WAErB,SAAUoC,EAAGpC,GAEhB,SAAAyC,IAAgBtD,KAAKuD,YAAcN,EADnCF,EAAcE,EAAGpC,GAEjBoC,EAAE9C,UAAkB,OAANU,EAAapB,OAAO+D,OAAO3C,IAAMyC,EAAGnD,UAAYU,EAAEV,UAAAA,IAAemD,IAVzD2C,GAe1B4rD,GAAAA,SAAqCnuD,GAKrC,SAAAouD,EAAmBhmD,OACXjI,EAAQH,EAAOL,KAAKrD,OAASA,YAKjC6D,EAAMkuD,UAAY,KAKlBluD,EAAM86B,SAAW9kB,SAASC,cAAc,OACxCjW,EAAM86B,SAASzjB,MAAMoD,SAAW,WAChCza,EAAM86B,SAASzjB,MAAMkoC,cAAgB,OACrCv/C,EAAM86B,SAAS7yB,UAAY,UAAYA,EAKvCjI,EAAMg5B,KAAO,KAKbh5B,EAAMmuD,YAAc,KAKpBnuD,EAAMouD,UAAY,KACXpuD,SAlCX+tD,GAAUE,EAAWpuD,GAuCrBouD,EAAU3xD,UAAUO,gBAAkB,WAClCV,KAAKyO,OAAO,OAKhBqjD,EAAU3xD,UAAU+xD,QAAU,eACtBC,EAAanyD,KAAKgyD,YAClBI,EAAWpyD,KAAKiyD,UAChBI,EAAK,KACLn3C,EAAQlb,KAAK2+B,SAASzjB,MAC1BA,EAAMsD,KAAOjV,KAAKF,IAAI8oD,EAAW,GAAIC,EAAS,IAAMC,EACpDn3C,EAAM2qC,IAAMt8C,KAAKF,IAAI8oD,EAAW,GAAIC,EAAS,IAAMC,EACnDn3C,EAAMrD,MAAQtO,KAAKklB,IAAI2jC,EAAS,GAAKD,EAAW,IAAME,EACtDn3C,EAAMpD,OAASvO,KAAKklB,IAAI2jC,EAAS,GAAKD,EAAW,IAAME,GAK3DP,EAAU3xD,UAAUsO,OAAS,SAAUD,MAC/BxO,KAAK68B,KAAAA,CACL78B,KAAK68B,KAAK0pB,sBAAsB/rC,YAAYxa,KAAK2+B,cAC7CzjB,EAAQlb,KAAK2+B,SAASzjB,MAC1BA,EAAMsD,KAAO,UACbtD,EAAM2qC,IAAM,UACZ3qC,EAAMrD,MAAQ,UACdqD,EAAMpD,OAAS,UAEnB9X,KAAK68B,KAAOruB,EACRxO,KAAK68B,MACL78B,KAAK68B,KAAK0pB,sBAAsBhoC,YAAYve,KAAK2+B,WAOzDmzB,EAAU3xD,UAAUmyD,UAAY,SAAUH,EAAYC,GAClDpyD,KAAKgyD,YAAcG,EACnBnyD,KAAKiyD,UAAYG,EACjBpyD,KAAKuyD,yBACLvyD,KAAKkyD,WAKTJ,EAAU3xD,UAAUoyD,uBAAyB,eACrCJ,EAAanyD,KAAKgyD,YAClBI,EAAWpyD,KAAKiyD,UAOhBh+C,EANAu+C,CACAL,EAAAA,CACCA,EAAW,GAAIC,EAAS,IACzBA,EAAAA,CACCA,EAAS,GAAID,EAAW,KAEJ3jD,IAAIxO,KAAK68B,KAAKsoB,+BAAgCnlD,KAAK68B,MAE5E5oB,EAAY,GAAKA,EAAY,GAAG8L,QAC3B/f,KAAK+xD,UAIN/xD,KAAK+xD,UAAUriB,eAAAA,CAAgBz7B,IAH/BjU,KAAK+xD,UAAAA,IAAAA,GAAAA,QAAAA,CAAyB99C,KAStC69C,EAAU3xD,UAAUsyD,YAAc,kBACvBzyD,KAAK+xD,WAETD,EA/GPD,gDClBAa,GAA0BzsD,eACtBlD,EAAgB,SAAUE,EAAGpC,UAC7BkC,EAAgBtD,OAAOyD,gBAAAA,CAChBC,UAAAA,cAA2B7B,OAAAA,SAAmB2B,EAAGpC,GAAKoC,EAAEE,UAAYtC,aAC7DoC,EAAGpC,WAAcuC,KAAKvC,EAAOpB,OAAOU,UAAUqC,eAAea,KAAKxC,EAAGuC,KAAIH,EAAEG,GAAKvC,EAAEuC,MAC3EH,EAAGpC,WAErB,SAAUoC,EAAGpC,GAEhB,SAAAyC,IAAgBtD,KAAKuD,YAAcN,EADnCF,EAAcE,EAAGpC,GAEjBoC,EAAE9C,UAAkB,OAANU,EAAapB,OAAO+D,OAAO3C,IAAMyC,EAAGnD,UAAYU,EAAEV,UAAAA,IAAemD,IAVzD2C,GA4C1B0sD,GAMU,WANVA,GAYS,UAZTA,GAkBQ,SAlBRA,GAwBW,YAOXC,GAAAA,SAAwClvD,GAOxC,SAAAmvD,EAAsB9yD,EAAM0R,EAAYk1C,OAChC9iD,EAAQH,EAAOL,KAAKrD,KAAMD,IAASC,YAOvC6D,EAAM4N,WAAaA,EAMnB5N,EAAM8iD,gBAAkBA,EACjB9iD,SArBX6uD,GAAUG,EAAcnvD,GAuBjBmvD,EAxBPD,IAuCAE,GAAAA,SAAmCpvD,GAKnC,SAAAqvD,EAAiBziD,OACTzM,EAAQH,EAAOL,KAAKrD,OAASA,KAC7BmL,EAAUmF,GAAcA,UAK5BzM,EAAMmvD,KAAAA,IAAAA,GAAAA,QAAqB7nD,EAAQW,WAAa,cAKhDjI,EAAMovD,cAA+BhuD,IAApBkG,EAAQ+nD,QAAwB/nD,EAAQ+nD,QAAU,GAC/D/nD,EAAQgoD,WACRtvD,EAAMsvD,SAAWhoD,EAAQgoD,UAM7BtvD,EAAMmuD,YAAc,KAKpBnuD,EAAMitD,WAAa3lD,EAAQ0lD,UAAY1lD,EAAQ0lD,UAAAA,GAK/ChtD,EAAMuvD,iBAAmBjoD,EAAQkoD,gBAC3BloD,EAAQkoD,gBACRxvD,EAAMyvD,uBACLzvD,SArCX6uD,GAAUK,EAASrvD,GAgDnBqvD,EAAQ5yD,UAAUmzD,uBAAyB,SAAU3M,EAAiBwL,EAAYC,OAC1Ev6C,EAAQu6C,EAAS,GAAKD,EAAW,GACjCr6C,EAASs6C,EAAS,GAAKD,EAAW,UAC/Bt6C,EAAQA,EAAQC,EAASA,GAAU9X,KAAKizD,UAOnDF,EAAQ5yD,UAAUsyD,YAAc,kBACrBzyD,KAAKgzD,KAAKP,eAMrBM,EAAQ5yD,UAAUguD,gBAAkB,SAAUxH,GAC1C3mD,KAAKgzD,KAAKV,UAAUtyD,KAAKgyD,YAAarL,EAAgBz3C,OACtDlP,KAAKuE,cAAAA,IAAkBquD,GAAaD,GAA0BhM,EAAgBl1C,WAAYk1C,KAO9FoM,EAAQ5yD,UAAUkuD,cAAgB,SAAU1H,GACxC3mD,KAAKgzD,KAAKvkD,OAAO,UACb8kD,EAAcvzD,KAAKozD,iBAAiBzM,EAAiB3mD,KAAKgyD,YAAarL,EAAgBz3C,cACvFqkD,GACAvzD,KAAKmzD,SAASxM,GAElB3mD,KAAKuE,cAAAA,IAAkBquD,GAAaW,EAAcZ,GAA0BA,GAA4BhM,EAAgBl1C,WAAYk1C,KAC7H,GAOXoM,EAAQ5yD,UAAU+tD,gBAAkB,SAAUvH,WACtC3mD,KAAK8wD,WAAWnK,KAChB3mD,KAAKgyD,YAAcrL,EAAgBz3C,MACnClP,KAAKgzD,KAAKvkD,OAAOk4C,EAAgBn4C,KACjCxO,KAAKgzD,KAAKV,UAAUtyD,KAAKgyD,YAAahyD,KAAKgyD,aAC3ChyD,KAAKuE,cAAAA,IAAkBquD,GAAaD,GAA2BhM,EAAgBl1C,WAAYk1C,KACpF,IAUfoM,EAAQ5yD,UAAUgzD,SAAW,SAAU3uD,KAChCuuD,EA1GPD,yDClHAU,GAA0BvtD,eACtBlD,EAAgB,SAAUE,EAAGpC,UAC7BkC,EAAgBtD,OAAOyD,gBAAAA,CAChBC,UAAAA,cAA2B7B,OAAAA,SAAmB2B,EAAGpC,GAAKoC,EAAEE,UAAYtC,aAC7DoC,EAAGpC,WAAcuC,KAAKvC,EAAOpB,OAAOU,UAAUqC,eAAea,KAAKxC,EAAGuC,KAAIH,EAAEG,GAAKvC,EAAEuC,MAC3EH,EAAGpC,WAErB,SAAUoC,EAAGpC,GAEhB,SAAAyC,IAAgBtD,KAAKuD,YAAcN,EADnCF,EAAcE,EAAGpC,GAEjBoC,EAAE9C,UAAkB,OAANU,EAAapB,OAAO+D,OAAO3C,IAAMyC,EAAGnD,UAAYU,EAAEV,UAAAA,IAAemD,IAVzD2C,GA2C1BwtD,GAAAA,SAAoC/vD,GAKpC,SAAAgwD,EAAkBpjD,OACVzM,EAAQ7D,KACRmL,EAAUmF,GAAcA,GACxBugD,EAAY1lD,EAAQ0lD,UAAY1lD,EAAQ0lD,UAAAA,UAC5ChtD,EAAQH,EAAOL,KAAKrD,KAAA,CAChB6wD,UAAWA,EACX/kD,UAAWX,EAAQW,WAAa,cAChConD,QAAS/nD,EAAQ+nD,WACflzD,MAKA8rD,eAAiC7mD,IAArBkG,EAAQwvC,SAAyBxvC,EAAQwvC,SAAW,IAKtE92C,EAAM8vD,UAAuB1uD,IAAhBkG,EAAQyoD,KAAoBzoD,EAAQyoD,IAC1C/vD,SAvBX2vD,GAAUE,EAAUhwD,GA6BpBgwD,EAASvzD,UAAUgzD,SAAW,SAAU3uD,OzFmKEyP,EAAagB,EyFlK/CzG,EAAMxO,KAAKk+B,SACX6jB,EAAqDvzC,EAAIw3C,UACzDpvC,EAAkDpI,EAAI83C,UACtD15C,EAAS5M,KAAKyyD,cAAc5lD,eAC5B7M,KAAK2zD,KAAAA,KACDE,EAAY9R,EAAK7E,wBAAwBtmC,GACzCk9C,GzF4J8B7/C,EyF5J9B6/C,CACAtlD,EAAI63C,+BAAAA,GAA6Cz5C,IACjD4B,EAAI63C,+BAAAA,GAA2Cz5C,KzF4JpDwI,GADMF,GAAoBD,GACAhB,KAga9B,SAAyBrH,EAAQ9E,OAChCgiC,GAAWl9B,EAAO,GAAKA,EAAO,IAAM,GAAM9E,EAAQ,GAClDiiC,GAAWn9B,EAAO,GAAKA,EAAO,IAAM,GAAM9E,EAAQ,GACtD8E,EAAO,IAAMk9B,EACbl9B,EAAO,IAAMk9B,EACbl9B,EAAO,IAAMm9B,EACbn9B,EAAO,IAAMm9B,GyF/jBW8pB,EAAW,EADd9R,EAAKxE,+BAA+BuW,EAAgBl9C,IAEjEhK,EAASinD,MAET5jD,EAAa8xC,EAAKrE,yBAAyBqE,EAAKxE,+BAA+B3wC,EAAQgK,IACvFF,EAASqrC,EAAK7C,qBAAAA,GAA+BtyC,GAASqD,GAC1D8xC,EAAK5H,gBAAAA,CACDlqC,WAAYA,EACZyG,OAAQA,EACRikC,SAAU36C,KAAK8rD,UACflR,OAAAA,MAGD8Y,EAtDPD,kECnCM,MACF,MACG,MACD,GCXNM,GAA0B9tD,eACtBlD,EAAgB,SAAUE,EAAGpC,UAC7BkC,EAAgBtD,OAAOyD,gBAAAA,CAChBC,UAAAA,cAA2B7B,OAAAA,SAAmB2B,EAAGpC,GAAKoC,EAAEE,UAAYtC,aAC7DoC,EAAGpC,WAAcuC,KAAKvC,EAAOpB,OAAOU,UAAUqC,eAAea,KAAKxC,EAAGuC,KAAIH,EAAEG,GAAKvC,EAAEuC,MAC3EH,EAAGpC,WAErB,SAAUoC,EAAGpC,GAEhB,SAAAyC,IAAgBtD,KAAKuD,YAAcN,EADnCF,EAAcE,EAAGpC,GAEjBoC,EAAE9C,UAAkB,OAANU,EAAapB,OAAO+D,OAAO3C,IAAMyC,EAAGnD,UAAYU,EAAEV,UAAAA,IAAemD,IAVzD2C,GA6C1B+tD,GAAAA,SAAuCtwD,GAKvC,SAAAuwD,EAAqB3jD,OACbzM,EAAQH,EAAOL,KAAKrD,OAASA,KAC7BmL,EAAUmF,GAAAA,UAMdzM,EAAMqwD,kBAAoB,SAAUvN,aACTA,IAAAA,GAAsCA,IAMjE9iD,EAAMitD,gBACoB7rD,IAAtBkG,EAAQ0lD,UACF1lD,EAAQ0lD,UACRhtD,EAAMqwD,kBAKhBrwD,EAAMioD,eAAiC7mD,IAArBkG,EAAQwvC,SAAyBxvC,EAAQwvC,SAAW,IAKtE92C,EAAMswD,iBACqBlvD,IAAvBkG,EAAQipD,WAA2BjpD,EAAQipD,WAAa,IACrDvwD,SAlCXkwD,GAAUE,EAAavwD,GA4CvBuwD,EAAY9zD,UAAU0E,YAAc,SAAU8hD,OACtCkH,GAAY,KACZlH,EAAgB5mD,MAAAA,EAAkB8mD,KAC9BwN,EAAyC1N,EAAgBhkB,cACzD2xB,EAAUD,EAASC,WACnBt0D,KAAK8wD,WAAWnK,KACf2N,GAAAA,IACGA,GAAAA,IACAA,GAAAA,IACAA,GAAAA,IAAmBC,KAEnBxS,EADM4E,EAAgBn4C,IACXw3C,UACXwO,EAAgBzS,EAAKn4B,gBAAkB5pB,KAAKm0D,YAC5CrqB,EAAS,EAAGC,EAAS,EACrBuqB,GAAAA,GACAvqB,GAAUyqB,EAELF,GAAAA,GACLxqB,GAAU0qB,EAELF,GAAAA,GACLxqB,EAAS0qB,EAGTzqB,EAASyqB,MAETzZ,EAAAA,CAASjR,EAAQC,MACJgR,EAAOgH,EAAKnI,sBACzBmI,EAAMhH,EAAO/6C,KAAK8rD,WACtBuI,EAASj0D,iBACTytD,GAAY,UAGZA,GAELoG,EAhFPD,+DC7CAS,GAA0BxuD,eACtBlD,EAAgB,SAAUE,EAAGpC,UAC7BkC,EAAgBtD,OAAOyD,gBAAAA,CAChBC,UAAAA,cAA2B7B,OAAAA,SAAmB2B,EAAGpC,GAAKoC,EAAEE,UAAYtC,aAC7DoC,EAAGpC,WAAcuC,KAAKvC,EAAOpB,OAAOU,UAAUqC,eAAea,KAAKxC,EAAGuC,KAAIH,EAAEG,GAAKvC,EAAEuC,MAC3EH,EAAGpC,WAErB,SAAUoC,EAAGpC,GAEhB,SAAAyC,IAAgBtD,KAAKuD,YAAcN,EADnCF,EAAcE,EAAGpC,GAEjBoC,EAAE9C,UAAkB,OAANU,EAAapB,OAAO+D,OAAO3C,IAAMyC,EAAGnD,UAAYU,EAAEV,UAAAA,IAAemD,IAVzD2C,GAyC1ByuD,GAAAA,SAAwChxD,GAKxC,SAAAixD,EAAsBrkD,OACdzM,EAAQH,EAAOL,KAAKrD,OAASA,KAC7BmL,EAAUmF,GAAcA,UAK5BzM,EAAMitD,WAAa3lD,EAAQ0lD,UAAY1lD,EAAQ0lD,UAAAA,GAK/ChtD,EAAM+pD,OAASziD,EAAQ4vC,MAAQ5vC,EAAQ4vC,MAAQ,EAK/Cl3C,EAAMioD,eAAiC7mD,IAArBkG,EAAQwvC,SAAyBxvC,EAAQwvC,SAAW,IAC/D92C,SAtBX4wD,GAAUE,EAAcjxD,GAgCxBixD,EAAax0D,UAAU0E,YAAc,SAAU8hD,OACvCkH,GAAY,KACZlH,EAAgB5mD,MAAAA,GAChB4mD,EAAgB5mD,MAAAA,EAAkB60D,KAC9BP,EAAyC1N,EAAgBhkB,cACzDkyB,EAAWR,EAASQ,YACpB70D,KAAK8wD,WAAWnK,KACfkO,GAAAA,IAAgBC,WAAW,IAAMD,GAAAA,IAAgBC,WAAW,IAAA,KACzDtmD,EAAMm4C,EAAgBn4C,IACtBusC,EAAQ8Z,GAAAA,IAAgBC,WAAW,GAAK90D,KAAK4tD,QAAU5tD,KAAK4tD,OAC5D7L,EAAOvzC,EAAIw3C,yBACHjE,EAAMhH,OAAO91C,EAAWjF,KAAK8rD,WACzCuI,EAASj0D,iBACTytD,GAAY,UAGZA,GAEL8G,EAnDPD,yDChCAK,GAAAA,WAOA,SAAAC,EAAiBC,EAAOC,EAAaC,GAKjCn1D,KAAKo1D,OAASH,EAKdj1D,KAAKq1D,aAAeH,EAKpBl1D,KAAKs1D,OAASH,EAKdn1D,KAAKu1D,QAAAA,GAKLv1D,KAAKw1D,OAAS,EAKdx1D,KAAKy1D,iBAAmB,SAK5BT,EAAQ70D,UAAUgxD,MAAQ,WACtBnxD,KAAKu1D,QAAQt0D,OAAS,EACtBjB,KAAKw1D,OAAS,EACdx1D,KAAKy1D,iBAAmB,GAM5BT,EAAQ70D,UAAU+wD,OAAS,SAAUxnD,EAAGC,GACpC3J,KAAKu1D,QAAQzyD,KAAK4G,EAAGC,EAAG2wC,KAAKC,QAKjCya,EAAQ70D,UAAUqV,IAAM,cAChBxV,KAAKu1D,QAAQt0D,OAAS,SAGf,MAEPk0D,EAAQ7a,KAAKC,MAAQv6C,KAAKs1D,OAC1BI,EAAY11D,KAAKu1D,QAAQt0D,OAAS,KAClCjB,KAAKu1D,QAAQG,EAAY,GAAKP,SAGvB,UAGPQ,EAAaD,EAAY,EACtBC,EAAa,GAAK31D,KAAKu1D,QAAQI,EAAa,GAAKR,GACpDQ,GAAc,MAEdhb,EAAW36C,KAAKu1D,QAAQG,EAAY,GAAK11D,KAAKu1D,QAAQI,EAAa,MAInEhb,EAAW,IAAO,UACX,MAEPrwC,EAAKtK,KAAKu1D,QAAQG,GAAa11D,KAAKu1D,QAAQI,GAC5CprD,EAAKvK,KAAKu1D,QAAQG,EAAY,GAAK11D,KAAKu1D,QAAQI,EAAa,UACjE31D,KAAKw1D,OAASjsD,KAAK+b,MAAM/a,EAAID,GAC7BtK,KAAKy1D,iBAAmBlsD,KAAKgc,KAAKjb,EAAKA,EAAKC,EAAKA,GAAMowC,EAChD36C,KAAKy1D,iBAAmBz1D,KAAKq1D,cAKxCL,EAAQ70D,UAAUkxD,YAAc,kBACpBrxD,KAAKq1D,aAAer1D,KAAKy1D,kBAAoBz1D,KAAKo1D,QAK9DJ,EAAQ70D,UAAUmxD,SAAW,kBAClBtxD,KAAKw1D,QAETR,EApGPD,SCTAa,GAA0B3vD,eACtBlD,EAAgB,SAAUE,EAAGpC,UAC7BkC,EAAgBtD,OAAOyD,gBAAAA,CAChBC,UAAAA,cAA2B7B,OAAAA,SAAmB2B,EAAGpC,GAAKoC,EAAEE,UAAYtC,aAC7DoC,EAAGpC,WAAcuC,KAAKvC,EAAOpB,OAAOU,UAAUqC,eAAea,KAAKxC,EAAGuC,KAAIH,EAAEG,GAAKvC,EAAEuC,MAC3EH,EAAGpC,WAErB,SAAUoC,EAAGpC,GAEhB,SAAAyC,IAAgBtD,KAAKuD,YAAcN,EADnCF,EAAcE,EAAGpC,GAEjBoC,EAAE9C,UAAkB,OAANU,EAAapB,OAAO+D,OAAO3C,IAAMyC,EAAGnD,UAAYU,EAAEV,UAAAA,IAAemD,IAVzD2C,GAwBnB4vD,GACG,WADHA,GAEA,QAyBPC,GAAAA,SAA0CpyD,GAK1C,SAAAqyD,EAAwBzlD,OAChBzM,EAAQ7D,KACRmL,EAAUmF,GAAcA,IAC5BzM,EAAQH,EAAOL,KAAKrD,KAC0CmL,IAAanL,MAKrEg2D,YAAc,EAKpBnyD,EAAMoyD,WAAa,EAKnBpyD,EAAMkuC,eAAiC9sC,IAArBkG,EAAQolC,SAAyBplC,EAAQolC,SAAW,EAKtE1sC,EAAMioD,eAAiC7mD,IAArBkG,EAAQwvC,SAAyBxvC,EAAQwvC,SAAW,IAKtE92C,EAAMqyD,cAA+BjxD,IAApBkG,EAAQgrD,QAAwBhrD,EAAQgrD,QAAU,GAKnEtyD,EAAMuyD,gBACoBnxD,IAAtBkG,EAAQkrD,WAA0BlrD,EAAQkrD,UAK9CxyD,EAAMyyD,0BAC8BrxD,IAAhCkG,EAAQqsC,qBACFrsC,EAAQqsC,wBAEdqZ,EAAY1lD,EAAQ0lD,UAAY1lD,EAAQ0lD,UAAAA,UAK5ChtD,EAAMitD,WAAa3lD,EAAQ4lD,YAAAA,GAAAA,GACEF,GACvBA,EAKNhtD,EAAM0yD,YAAc,KAKpB1yD,EAAM2yD,gBAAavxD,EAKnBpB,EAAM4yD,WAKN5yD,EAAM6yD,WAAQzxD,EAMdpB,EAAM8yD,kBAAoB,IAI1B9yD,EAAM+yD,mBAMN/yD,EAAMgzD,cAAgB,IACfhzD,SA5FX+xD,GAAUG,EAAgBryD,GAiG1BqyD,EAAe51D,UAAU22D,gBAAkB,WACvC92D,KAAK42D,wBAAqB3xD,EACfjF,KAAKk+B,SAAS8nB,UACpBpF,oBAAe37C,EAAWjF,KAAKi2D,WAAcj2D,KAAKi2D,WAAa,EAAI,GAAK,EAAK,EAAGj2D,KAAKu2D,cAQ9FR,EAAe51D,UAAU0E,YAAc,SAAU8hD,OACxC3mD,KAAK8wD,WAAWnK,UACV,KAEAA,EAAgB5mD,OACvBA,SACO,MAUPg7C,EARAvsC,EAAMm4C,EAAgBn4C,IACtBuoD,EAAwCpQ,EAAgBhkB,iBAC5Do0B,EAAW32D,iBACPJ,KAAKo2D,aACLp2D,KAAKu2D,YAAc5P,EAAgBl1C,YAKnCk1C,EAAgB5mD,MAAAA,IAChBg7C,EAAQgc,EAAWhtB,WACJgtB,EAAWC,YAAcC,WAAWC,kBAC/Cnc,GAAAA,IAEAgc,EAAWC,YAAcC,WAAWE,iBACpCpc,GAAS,KAGH,IAAVA,SACO,EAGP/6C,KAAKi2D,WAAalb,MAElBR,EAAMD,KAAKC,WACSt1C,IAApBjF,KAAKw2D,aACLx2D,KAAKw2D,WAAajc,KAEjBv6C,KAAK02D,OAASnc,EAAMv6C,KAAKw2D,WAAax2D,KAAK22D,qBAC5C32D,KAAK02D,MAAQntD,KAAKklB,IAAIssB,GAAS,EAAI8a,GAAgBA,QAEnD9T,EAAOvzC,EAAIw3C,aACXhmD,KAAK02D,QAAUb,KACb9T,EAAKjF,2BAA4B98C,KAAKs2D,4BACpCt2D,KAAK42D,mBACLvxB,aAAarlC,KAAK42D,qBAGd7U,EAAK/H,gBACL+H,EAAK1G,mBAET0G,EAAKpB,oBAET3gD,KAAK42D,mBAAqBtxB,WAAWtlC,KAAK82D,gBAAgBpxD,KAAK1F,MAAOA,KAAKk2D,UAC3EnU,EAAK/B,YAAYjF,EAAQ/6C,KAAK62D,cAAe72D,KAAKu2D,aAClDv2D,KAAKw2D,WAAajc,GACX,EAEXv6C,KAAKg2D,aAAejb,MAChBqc,EAAW7tD,KAAKD,IAAItJ,KAAKk2D,UAAY3b,EAAMv6C,KAAKw2D,YAAa,UACjEnxB,aAAarlC,KAAKy2D,YAClBz2D,KAAKy2D,WAAanxB,WAAWtlC,KAAKq3D,iBAAiB3xD,KAAK1F,KAAMwO,GAAM4oD,IAC7D,GAMXrB,EAAe51D,UAAUk3D,iBAAmB,SAAU7oD,OAC9CuzC,EAAOvzC,EAAIw3C,UACXjE,EAAK/H,gBACL+H,EAAK1G,uBAELN,GAAAA,GAAe/6C,KAAKg2D,aAAch2D,KAAK+xC,UAAY/xC,KAAK62D,cAAe72D,KAAK+xC,UAAY/xC,KAAK62D,eAAiB72D,KAAK62D,eACnH9U,EAAKjF,0BAA4B98C,KAAKs2D,wBAEtCvb,EAAQA,EAASA,EAAQ,EAAI,GAAK,EAAK,kBAE/BgH,EAAMhH,EAAO/6C,KAAKu2D,YAAav2D,KAAK8rD,WAChD9rD,KAAK02D,WAAQzxD,EACbjF,KAAKg2D,YAAc,EACnBh2D,KAAKu2D,YAAc,KACnBv2D,KAAKw2D,gBAAavxD,EAClBjF,KAAKy2D,gBAAaxxD,GAQtB8wD,EAAe51D,UAAUm3D,eAAiB,SAAUjB,GAChDr2D,KAAKo2D,WAAaC,EACbA,IACDr2D,KAAKu2D,YAAc,OAGpBR,EA5MPD,+DCnDAyB,GAA0BtxD,eACtBlD,EAAgB,SAAUE,EAAGpC,UAC7BkC,EAAgBtD,OAAOyD,gBAAAA,CAChBC,UAAAA,cAA2B7B,OAAAA,SAAmB2B,EAAGpC,GAAKoC,EAAEE,UAAYtC,aAC7DoC,EAAGpC,WAAcuC,KAAKvC,EAAOpB,OAAOU,UAAUqC,eAAea,KAAKxC,EAAGuC,KAAIH,EAAEG,GAAKvC,EAAEuC,MAC3EH,EAAGpC,WAErB,SAAUoC,EAAGpC,GAEhB,SAAAyC,IAAgBtD,KAAKuD,YAAcN,EADnCF,EAAcE,EAAGpC,GAEjBoC,EAAE9C,UAAkB,OAANU,EAAapB,OAAO+D,OAAO3C,IAAMyC,EAAGnD,UAAYU,EAAEV,UAAAA,IAAemD,IAVzD2C,GA+B1BuxD,GAAAA,SAAuC9zD,GAKvC,SAAA+zD,EAAqBnnD,OACbzM,EAAQ7D,KACRmL,EAAUmF,GAAcA,GACxBonD,EAAgEvsD,SAC/DusD,EAAepJ,WAChBoJ,EAAepJ,SAAAA,IAEnBzqD,EAAQH,EAAOL,KAAKrD,KAAM03D,IAAmB13D,MAKvC23D,QAAU,KAKhB9zD,EAAM8tD,gBAAa1sD,EAKnBpB,EAAM+zD,WAAY,EAKlB/zD,EAAMg0D,eAAiB,EAKvBh0D,EAAMi0D,gBAAmC7yD,IAAtBkG,EAAQ4sD,UAA0B5sD,EAAQ4sD,UAAY,GAKzEl0D,EAAMioD,eAAiC7mD,IAArBkG,EAAQwvC,SAAyBxvC,EAAQwvC,SAAW,IAC/D92C,SA1CX0zD,GAAUE,EAAa/zD,GAgDvB+zD,EAAYt3D,UAAUguD,gBAAkB,SAAUxH,OAC1CqR,EAAgB,EAChBC,EAASj4D,KAAKyuD,eAAe,GAC7ByJ,EAASl4D,KAAKyuD,eAAe,GAE7Br7C,EAAQ7J,KAAK+b,MAAM4yC,EAAO/xB,QAAU8xB,EAAO9xB,QAAS+xB,EAAOhyB,QAAU+xB,EAAO/xB,iBACxDjhC,IAApBjF,KAAK2xD,WAAe1sD,KAChB81C,EAAQ3nC,EAAQpT,KAAK2xD,WACzB3xD,KAAK63D,gBAAkB9c,GAClB/6C,KAAK43D,WAAaruD,KAAKklB,IAAIzuB,KAAK63D,gBAAkB73D,KAAK83D,aACxD93D,KAAK43D,WAAY,GAErBI,EAAgBjd,EAEpB/6C,KAAK2xD,WAAav+C,MACd5E,EAAMm4C,EAAgBn4C,IACtBuzC,EAAOvzC,EAAIw3C,aACXjE,EAAKlF,iBAAiBlmC,WAAAA,QAMtB8uC,EAAmBj3C,EAAIowB,cAAc8mB,wBACrCuL,EAAAA,GAAAA,SAAgCjxD,KAAKyuD,gBACzCwC,EAAS,IAAMxL,EAAiBjnC,KAChCyyC,EAAS,IAAMxL,EAAiBI,IAChC7lD,KAAK23D,QAAUnpD,EAAI22C,+BAA+B8L,GAE9CjxD,KAAK43D,YACLppD,EAAID,SACJwzC,EAAK7B,uBAAuB8X,EAAeh4D,KAAK23D,YAQxDF,EAAYt3D,UAAUkuD,cAAgB,SAAU1H,WACxC3mD,KAAKyuD,eAAextD,OAAS,KACnB0lD,EAAgBn4C,IACXw3C,UACVpF,eAAe5gD,KAAK8rD,YAClB,IAWf2L,EAAYt3D,UAAU+tD,gBAAkB,SAAUvH,MAC1C3mD,KAAKyuD,eAAextD,QAAU,EAAA,KAC1BuN,EAAMm4C,EAAgBn4C,WAC1BxO,KAAK23D,QAAU,KACf33D,KAAK2xD,gBAAa1sD,EAClBjF,KAAK43D,WAAY,EACjB53D,KAAK63D,eAAiB,EACjB73D,KAAKuuD,wBACN//C,EAAIw3C,UAAUrF,oBAEX,SAGA,GAGR8W,EAxHPD,+DC/BAW,GAA0BlyD,eACtBlD,EAAgB,SAAUE,EAAGpC,UAC7BkC,EAAgBtD,OAAOyD,gBAAAA,CAChBC,UAAAA,cAA2B7B,OAAAA,SAAmB2B,EAAGpC,GAAKoC,EAAEE,UAAYtC,aAC7DoC,EAAGpC,WAAcuC,KAAKvC,EAAOpB,OAAOU,UAAUqC,eAAea,KAAKxC,EAAGuC,KAAIH,EAAEG,GAAKvC,EAAEuC,MAC3EH,EAAGpC,WAErB,SAAUoC,EAAGpC,GAEhB,SAAAyC,IAAgBtD,KAAKuD,YAAcN,EADnCF,EAAcE,EAAGpC,GAEjBoC,EAAE9C,UAAkB,OAANU,EAAapB,OAAO+D,OAAO3C,IAAMyC,EAAGnD,UAAYU,EAAEV,UAAAA,IAAemD,IAVzD2C,GA4B1BmyD,GAAAA,SAAqC10D,GAKrC,SAAA20D,EAAmB/nD,OACXzM,EAAQ7D,KACRmL,EAAUmF,GAAcA,GACxBonD,EAAgEvsD,SAC/DusD,EAAepJ,WAChBoJ,EAAepJ,SAAAA,IAEnBzqD,EAAQH,EAAOL,KAAKrD,KAAM03D,IAAmB13D,MAKvC23D,QAAU,KAKhB9zD,EAAMioD,eAAiC7mD,IAArBkG,EAAQwvC,SAAyBxvC,EAAQwvC,SAAW,IAKtE92C,EAAMy0D,mBAAgBrzD,EAKtBpB,EAAM00D,gBAAkB,EACjB10D,SAhCXs0D,GAAUE,EAAW30D,GAsCrB20D,EAAUl4D,UAAUguD,gBAAkB,SAAUxH,OACxC6R,EAAa,EACbP,EAASj4D,KAAKyuD,eAAe,GAC7ByJ,EAASl4D,KAAKyuD,eAAe,GAC7BnkD,EAAK2tD,EAAO/xB,QAAUgyB,EAAOhyB,QAC7B37B,EAAK0tD,EAAO9xB,QAAU+xB,EAAO/xB,QAE7BirB,EAAW7nD,KAAKgc,KAAKjb,EAAKA,EAAKC,EAAKA,QACbtF,IAAvBjF,KAAKs4D,gBACLE,EAAax4D,KAAKs4D,cAAgBlH,GAEtCpxD,KAAKs4D,cAAgBlH,MACjB5iD,EAAMm4C,EAAgBn4C,IACtBuzC,EAAOvzC,EAAIw3C,UACG,GAAdwS,IACAx4D,KAAKu4D,gBAAkBC,OAGvB/S,EAAmBj3C,EAAIowB,cAAc8mB,wBACrCuL,EAAAA,GAAAA,SAAgCjxD,KAAKyuD,gBACzCwC,EAAS,IAAMxL,EAAiBjnC,KAChCyyC,EAAS,IAAMxL,EAAiBI,IAChC7lD,KAAK23D,QAAUnpD,EAAI22C,+BAA+B8L,GAElDziD,EAAID,SACJwzC,EAAKlC,yBAAyB2Y,EAAYx4D,KAAK23D,UAOnDU,EAAUl4D,UAAUkuD,cAAgB,SAAU1H,MACtC3mD,KAAKyuD,eAAextD,OAAS,EAAA,KAEzB8gD,EADM4E,EAAgBn4C,IACXw3C,UACXhlD,EAAYhB,KAAKu4D,gBAAkB,EAAI,GAAK,SAChDxW,EAAKnB,eAAe5gD,KAAK8rD,UAAW9qD,IAC7B,SAGA,GAQfq3D,EAAUl4D,UAAU+tD,gBAAkB,SAAUvH,MACxC3mD,KAAKyuD,eAAextD,QAAU,EAAA,KAC1BuN,EAAMm4C,EAAgBn4C,WAC1BxO,KAAK23D,QAAU,KACf33D,KAAKs4D,mBAAgBrzD,EACrBjF,KAAKu4D,gBAAkB,EAClBv4D,KAAKuuD,wBACN//C,EAAIw3C,UAAUrF,oBAEX,SAGA,GAGR0X,EAvGPD,yDC5BAK,GAA0BxyD,eACtBlD,EAAgB,SAAUE,EAAGpC,UAC7BkC,EAAgBtD,OAAOyD,gBAAAA,CAChBC,UAAAA,cAA2B7B,OAAAA,SAAmB2B,EAAGpC,GAAKoC,EAAEE,UAAYtC,aAC7DoC,EAAGpC,WAAcuC,KAAKvC,EAAOpB,OAAOU,UAAUqC,eAAea,KAAKxC,EAAGuC,KAAIH,EAAEG,GAAKvC,EAAEuC,MAC3EH,EAAGpC,WAErB,SAAUoC,EAAGpC,GAEhB,SAAAyC,IAAgBtD,KAAKuD,YAAcN,EADnCF,EAAcE,EAAGpC,GAEjBoC,EAAE9C,UAAkB,OAANU,EAAapB,OAAO+D,OAAO3C,IAAMyC,EAAGnD,UAAYU,EAAEV,UAAAA,IAAemD,IAVzD2C,GAoE1ByyD,GAAAA,SAA+Bh1D,GAK/B,SAAAi1D,EAAaxtD,UAETA,EAAAA,EAAAA,GAAqBA,IACRw2C,WACTx2C,EAAQw2C,SC/Bb,SAAkBrxC,OACjBnF,EAAUmF,GAAcA,GACxBqxC,EAAAA,IAAAA,GAAAA,oBAC+B18C,IAAjBkG,EAAQ+E,MAAqB/E,EAAQ+E,OAEnDyxC,EAAS7+C,KAAAA,IAAAA,GAAAA,QAAcqI,EAAQytD,oBAEI3zD,IAAnBkG,EAAQoS,QAAuBpS,EAAQoS,SAEvDokC,EAAS7+C,KAAAA,IAAAA,GAAAA,QAAgBqI,EAAQ0tD,sBAEY5zD,IAAxBkG,EAAQ2tD,aAA4B3tD,EAAQ2tD,cAEjEnX,EAAS7+C,KAAAA,IAAAA,GAAAA,QAAqBqI,EAAQ4tD,qBAEnCpX,EDgBSA,IAEPx2C,EAAQy2C,eACTz2C,EAAQy2C,aEAb,SAAkBtxC,OACjBnF,EAAUmF,GAAcA,GACxBsxC,EAAAA,IAAAA,GAAAA,QACA6O,EAAAA,IAAAA,IAAuB,KAAO,IAAM,iBACgBxrD,IAA/BkG,EAAQ6tD,oBAC3B7tD,EAAQ6tD,qBAGVpX,EAAa9+C,KAAAA,IAAAA,GAAAA,eAEiCmC,IAA5BkG,EAAQ8tD,iBAAgC9tD,EAAQ8tD,kBAElErX,EAAa9+C,KAAAA,IAAAA,GAAAA,QAAAA,CACTi4C,MAAO5vC,EAAQ+tD,UACfve,SAAUxvC,EAAQguD,sBAGQl0D,IAApBkG,EAAQiuD,SAAwBjuD,EAAQiuD,UAElDxX,EAAa9+C,KAAAA,IAAAA,GAAAA,QAAAA,CACTiuD,YAAa5lD,EAAQ4lD,YACrBN,QAASA,WAGyBxrD,IAAxBkG,EAAQkuD,aAA4BluD,EAAQkuD,cAE1DzX,EAAa9+C,KAAAA,IAAAA,GAAAA,eAEqBmC,IAAtBkG,EAAQmuD,WAA0BnuD,EAAQmuD,YAEtD1X,EAAa9+C,KAAAA,IAAAA,GAAAA,QAAAA,CACT63C,SAAUxvC,EAAQguD,sBAGUl0D,IAArBkG,EAAQouD,UAAyBpuD,EAAQouD,YAEpD3X,EAAa9+C,KAAAA,IAAAA,GAAAA,SACb8+C,EAAa9+C,KAAAA,IAAAA,GAAAA,QAAAA,CACTi4C,MAAO5vC,EAAQ+tD,UACfve,SAAUxvC,EAAQguD,uBAGsBl0D,IAA3BkG,EAAQquD,gBAA+BruD,EAAQquD,iBAEhE5X,EAAa9+C,KAAAA,IAAAA,GAAAA,QAAAA,CACTiuD,YAAa5lD,EAAQ4lD,YACrBpW,SAAUxvC,EAAQguD,sBAGoBl0D,IAA1BkG,EAAQsuD,eAA8BtuD,EAAQsuD,gBAE9D7X,EAAa9+C,KAAAA,IAAAA,GAAAA,QAAAA,CACT63C,SAAUxvC,EAAQguD,gBAGnBvX,EFvDSA,CAAAA,CACJmP,aAAa,KAGbrtD,EAAOL,KAAKrD,KAAMmL,IAAYnL,YAf1Cy4D,GAAUE,EAAKj1D,GAkBfi1D,EAAIx4D,UAAU0P,eAAiB,iCACK7P,OAE7B24D,EAtBPD,uFGpEAgB,GAA0BzzD,eACtBlD,EAAgB,SAAUE,EAAGpC,UAC7BkC,EAAgBtD,OAAOyD,gBAAAA,CAChBC,UAAAA,cAA2B7B,OAAAA,SAAmB2B,EAAGpC,GAAKoC,EAAEE,UAAYtC,aAC7DoC,EAAGpC,WAAcuC,KAAKvC,EAAOpB,OAAOU,UAAUqC,eAAea,KAAKxC,EAAGuC,KAAIH,EAAEG,GAAKvC,EAAEuC,MAC3EH,EAAGpC,WAErB,SAAUoC,EAAGpC,GAEhB,SAAAyC,IAAgBtD,KAAKuD,YAAcN,EADnCF,EAAcE,EAAGpC,GAEjBoC,EAAE9C,UAAkB,OAANU,EAAapB,OAAO+D,OAAO3C,IAAMyC,EAAGnD,UAAYU,EAAEV,UAAAA,IAAemD,IAVzD2C,GAmF1B0zD,GAAAA,SAAgCj2D,GAOhC,SAAAk2D,EAAc3oD,EAAW9E,EAAOmE,OACxBzM,EAAQH,EAAOL,KAAKrD,OAASA,KAC7BmL,EAAUmF,GAAcA,UAI5BzM,EAAMoN,UAAYA,EAKlBpN,EAAMsI,MAAQA,EAOdtI,EAAMg2D,YAAc,KAOpBh2D,EAAMqlC,MAAO,EAObrlC,EAAMtB,IAAM,GAKZsB,EAAMi2D,iBACqB70D,IAAvBkG,EAAQ4uD,WAA2B,IAAM5uD,EAAQ4uD,WAMrDl2D,EAAMm2D,kBAAAA,GACCn2D,SAnDX61D,GAAUE,EAAMl2D,GAwDhBk2D,EAAKz5D,UAAUkG,QAAU,WACrBrG,KAAKuE,cAAAA,IAKTq1D,EAAKz5D,UAAU85D,QAAU,aAIzBL,EAAKz5D,UAAUuoC,OAAS,kBACb1oC,KAAKuC,IAAM,IAAMvC,KAAKiR,WAQjC2oD,EAAKz5D,UAAU+5D,eAAiB,eACvBl6D,KAAK65D,mBAEC75D,SAEPgR,EAAOhR,KAAK65D,kBAMR7oD,EAAKjC,YAAAA,UAGL/O,KAAK85D,YAAc,EACZ9oD,EAEXA,EAAOA,EAAK6oD,kBACP7oD,UAEFhR,MAMX45D,EAAKz5D,UAAUg6D,oBAAsB,cAC5Bn6D,KAAK65D,iBAGN7oD,EAAOhR,KAAK65D,YACZ54B,EAA4BjhC,WAExBgR,EAAKjC,YAAAA,GAAwBqlB,CAI7BpjB,EAAK6oD,YAAc,WAGd7oD,EAAKjC,YAAAA,GAGVkyB,EAAOjwB,EAEFA,EAAKjC,YAAAA,GAGVkyB,EAAK44B,YAAc7oD,EAAK6oD,YAGxB54B,EAAOjwB,EAEXA,EAAOiwB,EAAK44B,kBACP7oD,KAOb4oD,EAAKz5D,UAAUi6D,aAAe,kBACnBp6D,KAAKiR,WAKhB2oD,EAAKz5D,UAAU4O,SAAW,kBACf/O,KAAKmM,OAUhBytD,EAAKz5D,UAAUo1B,SAAW,SAAUppB,MAC5BnM,KAAKmM,QAAAA,IAA6BnM,KAAKmM,MAAQA,YACrCrF,MAAM,gCAEpB9G,KAAKmM,MAAQA,EACbnM,KAAKqG,WASTuzD,EAAKz5D,UAAUgS,KAAO,gBAStBynD,EAAKz5D,UAAUk6D,SAAW,SAAUv4B,EAAIylB,OAC/BvnD,KAAK85D,mBACC,MAEP9mB,EAAQhzC,KAAKg6D,kBAAkBl4B,MAC9BkR,OAIe,IAAXA,SACE,OAJPA,EAAQuU,EACRvnD,KAAKg6D,kBAAkBl4B,GAAMkR,MAK7B+H,EAAQwM,EAAOvU,EAAQ,IAAO,UAC9B+H,GAAS/6C,KAAK85D,YACP,KAEG/e,EAAQ/6C,KAAK85D,cAS/BF,EAAKz5D,UAAUm6D,aAAe,SAAUx4B,WAC/B9hC,KAAK85D,cAG6B,IAAhC95D,KAAKg6D,kBAAkBl4B,IAMlC83B,EAAKz5D,UAAUo6D,cAAgB,SAAUz4B,GACjC9hC,KAAK85D,cACL95D,KAAKg6D,kBAAkBl4B,IAAO,IAG/B83B,EAzNPD,wDCnFAa,GAA0Bv0D,eACtBlD,EAAgB,SAAUE,EAAGpC,UAC7BkC,EAAgBtD,OAAOyD,gBAAAA,CAChBC,UAAAA,cAA2B7B,OAAAA,SAAmB2B,EAAGpC,GAAKoC,EAAEE,UAAYtC,aAC7DoC,EAAGpC,WAAcuC,KAAKvC,EAAOpB,OAAOU,UAAUqC,eAAea,KAAKxC,EAAGuC,KAAIH,EAAEG,GAAKvC,EAAEuC,MAC3EH,EAAGpC,WAErB,SAAUoC,EAAGpC,GAEhB,SAAAyC,IAAgBtD,KAAKuD,YAAcN,EADnCF,EAAcE,EAAGpC,GAEjBoC,EAAE9C,UAAkB,OAANU,EAAapB,OAAO+D,OAAO3C,IAAMyC,EAAGnD,UAAYU,EAAEV,UAAAA,IAAemD,IAVzD2C,GAoB1Bw0D,GAAAA,SAAqC/2D,GAUrC,SAAAg3D,EAAmBzpD,EAAW9E,EAAOgjB,EAAKyH,EAAa+jC,EAAkBrqD,OACjEzM,EAAQH,EAAOL,KAAKrD,KAAMiR,EAAW9E,EAAOmE,IAAgBtQ,YAKhE6D,EAAM00B,aAAe3B,EAOrB/yB,EAAMizB,KAAO3H,EACbtrB,EAAMtB,IAAM4sB,EAKZtrB,EAAMolB,OAAAA,IAAahQ,MACC,OAAhB2d,IACA/yB,EAAMolB,OAAO2N,YAAcA,GAM/B/yB,EAAMkzB,UAAY,KAKlBlzB,EAAM+2D,kBAAoBD,EACnB92D,SA1CX22D,GAAUE,EAAWh3D,GAiDrBg3D,EAAUv6D,UAAU+oB,SAAW,kBACpBlpB,KAAKipB,QAOhByxC,EAAUv6D,UAAU82B,kBAAoB,WA0D5C,IACQ3H,EA1DAtvB,KAAKmM,MAAAA,GACLnM,KAAKk3B,iBACLl3B,KAAKipB,SAwDLqG,EAAAA,GAA4B,EAAG,IAC/BiD,UAAY,gBAChBjD,EAAIM,SAAS,EAAG,EAAG,EAAG,GACfN,EAAI3V,QA1DP3Z,KAAKqG,WAOTq0D,EAAUv6D,UAAUg3B,iBAAmB,eAC/BllB,EAAyCjS,KAAKipB,OAC9ChX,EAAM4oD,cAAgB5oD,EAAM6oD,cAC5B96D,KAAKmM,MAAAA,GAGLnM,KAAKmM,MAAAA,GAETnM,KAAKk3B,iBACLl3B,KAAKqG,WAMTq0D,EAAUv6D,UAAUgS,KAAO,WACnBnS,KAAKmM,OAAAA,KACLnM,KAAKmM,MAAAA,GACLnM,KAAKipB,OAAAA,IAAahQ,MACQ,OAAtBjZ,KAAKu4B,eACLv4B,KAAKipB,OAAO2N,YAAc52B,KAAKu4B,eAGnCv4B,KAAKmM,OAAAA,KACLnM,KAAKmM,MAAAA,GACLnM,KAAKqG,UACLrG,KAAK46D,kBAAkB56D,KAAMA,KAAK82B,MAClC92B,KAAK+2B,UAAAA,GAAAA,YAAwB/2B,KAAKipB,OAAQjpB,KAAKm3B,iBAAiBzxB,KAAK1F,MAAOA,KAAKi3B,kBAAkBvxB,KAAK1F,SAQhH06D,EAAUv6D,UAAU+2B,eAAiB,WAC7Bl3B,KAAK+2B,YACL/2B,KAAK+2B,YACL/2B,KAAK+2B,UAAY,OAGlB2jC,EA9GPD,+DCpBAM,GAA0B90D,eACtBlD,EAAgB,SAAUE,EAAGpC,UAC7BkC,EAAgBtD,OAAOyD,gBAAAA,CAChBC,UAAAA,cAA2B7B,OAAAA,SAAmB2B,EAAGpC,GAAKoC,EAAEE,UAAYtC,aAC7DoC,EAAGpC,WAAcuC,KAAKvC,EAAOpB,OAAOU,UAAUqC,eAAea,KAAKxC,EAAGuC,KAAIH,EAAEG,GAAKvC,EAAEuC,MAC3EH,EAAGpC,WAErB,SAAUoC,EAAGpC,GAEhB,SAAAyC,IAAgBtD,KAAKuD,YAAcN,EADnCF,EAAcE,EAAGpC,GAEjBoC,EAAE9C,UAAkB,OAANU,EAAapB,OAAO+D,OAAO3C,IAAMyC,EAAGnD,UAAYU,EAAEV,UAAAA,IAAemD,IAVzD2C,GAkC1B+0D,GAAAA,SAAsCt3D,GAiBtC,SAAAu3D,EAAoBxvC,EAAYyvC,EAAgBxvC,EAAYyvC,EAAgBlqD,EAAWmqD,EAAkBz8C,EAAY+R,EAAQ2qC,EAAiBC,EAAoB3qC,EAAiBC,OAC3K/sB,EAAQH,EAAOL,KAAKrD,KAAMiR,EAAAA,KAA8BjR,KAK5D6D,EAAM03D,kBAAmCt2D,IAApB0rB,GAAgCA,EAKrD9sB,EAAMiwB,gBAAkBlD,EAKxB/sB,EAAMwnB,YAAc1M,EAKpB9a,EAAM23D,QAAU9qC,EAKhB7sB,EAAMkwB,QAAU,KAKhBlwB,EAAM43D,gBAAkBP,EAKxBr3D,EAAM63D,gBAAkBP,EAKxBt3D,EAAM83D,kBAAoBP,GAAsCnqD,EAKhEpN,EAAM+3D,aAAAA,GAKN/3D,EAAMg4D,qBAAuB,KAK7Bh4D,EAAMi4D,SAAW,MACbnwC,EAAewvC,EAAeY,mBAAmBl4D,EAAM83D,mBACvDvoC,EAAkBvvB,EAAM63D,gBAAgB7uD,YACxC+e,EAAkB/nB,EAAM43D,gBAAgB5uD,YACxCwmB,EAAsBD,EAAAA,GACJzH,EAAcyH,GAC9BzH,KAC+B,OAAzB0H,UAGRxvB,EAAMsI,MAAAA,GACCtI,MAEPm4D,EAAmBvwC,EAAW5e,YAC9BmvD,IAKIpwC,EAJCA,EAIDA,GAAkCA,EAAiBowC,GAHjCA,OAMtBhsC,EAAmBmrC,EAAevxC,cAAc/lB,EAAM83D,kBAAkB,IACxEzrC,EjFZL,SAAyCzE,EAAYC,EAAYC,EAAcqE,OAC9ED,EAAAA,GAAyBpE,GACzBuE,EAAmBJ,GAA0BrE,EAAYC,EAAYqE,EAAcC,WAClF3B,SAAS6B,IAAqBA,GAAoB,OACrCvE,GAAc,SAAUnV,UAClC0Z,EAAmBJ,GAA0BrE,EAAYC,EAAYlV,EAAQwZ,GACtE3B,SAAS6B,IAAqBA,EAAmB,KAGzDA,EiFGCA,CAAmDzE,EAAYC,EAAY2H,EAAqBrD,OAC/F3B,SAAS6B,IAAqBA,GAAoB,SAGnDrsB,EAAMsI,MAAAA,GACCtI,MAEPo4D,OAAgDh3D,IAAvBq2D,EAAmCA,E9EjI3C,M8EsIrBz3D,EAAM4vB,eAAAA,IAAAA,GAAmChI,EAAYC,EAAY2H,EAAqBzH,EAAiBsE,EAAmB+rC,EAAwBjsC,GAC/F,IAA/CnsB,EAAM4vB,eAAerE,eAAenuB,cAEpC4C,EAAMsI,MAAAA,GACCtI,EAEXA,EAAMi4D,SAAWZ,EAAegB,kBAAkBhsC,OAC9CG,EAAexsB,EAAM4vB,eAAevE,2BACpCtD,IACIH,EAAW3J,YACXuO,EAAa,GAAAjnB,GAAWinB,EAAa,GAAIzE,EAAgB,GAAIA,EAAgB,IAC7EyE,EAAa,GAAAjnB,GAAWinB,EAAa,GAAIzE,EAAgB,GAAIA,EAAgB,KAG7EyE,EAAAA,GAA+BA,EAAczE,OAGxCyE,YAIL8rC,EAAcjB,EAAekB,0BAA0B/rC,EAAcxsB,EAAMi4D,UACtEO,EAAOF,EAAYxnD,KAAM0nD,GAAQF,EAAYtnD,KAAMwnD,YAC/CC,EAAOH,EAAYvnD,KAAM0nD,GAAQH,EAAYrnD,KAAMwnD,IAAAA,KACpDtrD,EAAOqqD,EAAgBx3D,EAAMi4D,SAAUO,EAAMC,EAAM39C,GACnD3N,GACAnN,EAAM+3D,aAAa94D,KAAKkO,GAIF,IAA9BnN,EAAM+3D,aAAa36D,SACnB4C,EAAMsI,MAAAA,SAbVtI,EAAMsI,MAAAA,UAgBHtI,SA7IXk3D,GAAUE,EAAYv3D,GAmJtBu3D,EAAW96D,UAAU+oB,SAAW,kBACrBlpB,KAAK+zB,SAKhBknC,EAAW96D,UAAUg0B,WAAa,eAC1B1D,EAAAA,MACJzwB,KAAK47D,aAAat0C,QAAAA,SAAkBtW,EAAM9P,EAAGH,GACrCiQ,GAAQA,EAAKjC,YAAAA,IACb0hB,EAAQ3tB,KAAAA,CACJ8J,OAAQ5M,KAAKy7D,gBAAgBM,mBAAmB/qD,EAAKC,WACrDgB,MAAOjB,EAAKkY,cAGtBxjB,KAAK1F,OACPA,KAAK47D,aAAa36D,OAAS,EACJ,IAAnBwvB,EAAQxvB,OACRjB,KAAKmM,MAAAA,YAGDurC,EAAI13C,KAAK27D,kBAAkB,GAC3B/kD,EAAO5W,KAAK07D,gBAAgBa,YAAY7kB,GACxC7/B,EAAwB,iBAATjB,EAAoBA,EAAOA,EAAK,GAC/CkB,EAAyB,iBAATlB,EAAoBA,EAAOA,EAAK,GAChDoZ,EAAmBhwB,KAAK07D,gBAAgB9xC,cAAc8tB,GACtDxnB,EAAmBlwB,KAAKy7D,gBAAgB7xC,cAAc5pB,KAAK87D,UAC3DnwC,EAAe3rB,KAAK07D,gBAAgBK,mBAAmB/7D,KAAK27D,mBAChE37D,KAAK+zB,QAAAA,GAA4Blc,EAAOC,EAAQ9X,KAAKqrB,YAAa6E,EAAkBlwB,KAAKy7D,gBAAgB5uD,YAAamjB,EAAkBrE,EAAc3rB,KAAKyzB,eAAgBhD,EAASzwB,KAAKw7D,QAASx7D,KAAKu7D,aAAcv7D,KAAK8zB,iBAC1N9zB,KAAKmM,MAAAA,GAETnM,KAAKqG,WAKT40D,EAAW96D,UAAUgS,KAAO,cACpBnS,KAAKmM,OAAAA,GAAmBonB,CACxBvzB,KAAKmM,MAAAA,GACLnM,KAAKqG,cACDm2D,EAAe,EACnBx8D,KAAK67D,qBAAAA,GACL77D,KAAK47D,aAAat0C,QAAAA,SAAkBtW,EAAM9P,EAAGH,OACrCoL,EAAQ6E,EAAKjC,cACb5C,GAAAA,IAA2BA,GAAAA,GAAmBswD,CAC9CD,QACIE,EAAAA,EAA2B1rD,EAAAA,GAAwB,SAAU1R,OACzD6M,EAAQ6E,EAAKjC,WACb5C,GAAAA,IACAA,GAAAA,IACAA,GAAAA,OACcuwD,GAEO,MADrBF,IAEIx8D,KAAK28D,mBACL38D,KAAKm0B,iBAGdn0B,MACHA,KAAK67D,qBAAqB/4D,KAAK45D,KAErCh3D,KAAK1F,OACPA,KAAK47D,aAAat0C,SAAQ,SAAUtW,EAAM9P,EAAGH,GAC7BiQ,EAAKjC,YACb5C,IACA6E,EAAKmB,UAGQ,IAAjBqqD,GACAl3B,WAAWtlC,KAAKm0B,WAAWzuB,KAAK1F,MAAO,KAOnDi7D,EAAW96D,UAAUw8D,iBAAmB,WACpC38D,KAAK67D,qBAAqBv0C,QAAAA,GAC1BtnB,KAAK67D,qBAAuB,MAEzBZ,EApOPD,+DCdA4B,GAAAA,WAIA,SAAAC,EAAkBC,GAMd98D,KAAK+8D,mBACqB93D,IAAtB63D,EAAkCA,EAAoB,KAK1D98D,KAAKg9D,OAAS,EAKdh9D,KAAKi9D,SAAAA,GAKLj9D,KAAKk9D,QAAU,KAKfl9D,KAAKm9D,QAAU,YAKnBN,EAAS18D,UAAUm8B,eAAiB,kBACzBt8B,KAAK+8D,cAAgB,GAAK/8D,KAAKsnC,WAAatnC,KAAK+8D,eAK5DF,EAAS18D,UAAUk8B,MAAQ,WACvBr8B,KAAKg9D,OAAS,EACdh9D,KAAKi9D,SAAAA,GACLj9D,KAAKk9D,QAAU,KACfl9D,KAAKm9D,QAAU,MAMnBN,EAAS18D,UAAUi9D,YAAc,SAAU76D,UAChCvC,KAAKi9D,SAASz6D,eAAeD,IAQxCs6D,EAAS18D,UAAUmnB,QAAU,SAAUzT,WAC/BwpD,EAAQr9D,KAAKk9D,QACVG,GACHxpD,EAAEwpD,EAAMC,OAAQD,EAAME,KAAMv9D,MAC5Bq9D,EAAQA,EAAMG,OAQtBX,EAAS18D,UAAUR,IAAM,SAAU4C,EAAK+N,OAChC+sD,EAAQr9D,KAAKi9D,SAAS16D,kBACT0C,IAAVo4D,EAAqB,IACxBA,IAAUr9D,KAAKm9D,UAGVE,IAAUr9D,KAAKk9D,SACpBl9D,KAAKk9D,QAAgCl9D,KAAKk9D,QAAQM,MAClDx9D,KAAKk9D,QAAQO,MAAQ,OAGrBJ,EAAMG,MAAMC,MAAQJ,EAAMI,MAC1BJ,EAAMI,MAAMD,MAAQH,EAAMG,OAE9BH,EAAMG,MAAQ,KACdH,EAAMI,MAAQz9D,KAAKm9D,QACnBn9D,KAAKm9D,QAAQK,MAAQH,EACrBr9D,KAAKm9D,QAAUE,GAbJA,EAAMC,QAqBrBT,EAAS18D,UAAU6gC,OAAS,SAAUz+B,OAC9B86D,EAAQr9D,KAAKi9D,SAAS16D,kBACT0C,IAAVo4D,EAAqB,IACxBA,IAAUr9D,KAAKm9D,SACfn9D,KAAKm9D,QAAgCE,EAAMI,MACvCz9D,KAAKm9D,UACLn9D,KAAKm9D,QAAQK,MAAQ,OAGpBH,IAAUr9D,KAAKk9D,SACpBl9D,KAAKk9D,QAAgCG,EAAMG,MACvCx9D,KAAKk9D,UACLl9D,KAAKk9D,QAAQO,MAAQ,QAIzBJ,EAAMG,MAAMC,MAAQJ,EAAMI,MAC1BJ,EAAMI,MAAMD,MAAQH,EAAMG,cAEvBx9D,KAAKi9D,SAAS16D,KACnBvC,KAAKg9D,OACAK,EAAMC,QAKjBT,EAAS18D,UAAUmnC,SAAW,kBACnBtnC,KAAKg9D,QAKhBH,EAAS18D,UAAU4H,QAAU,eAGrBs1D,EAFAj4D,EAAAA,IAAW9D,MAAMtB,KAAKg9D,QACtB97D,EAAI,MAEHm8D,EAAQr9D,KAAKm9D,QAASE,EAAOA,EAAQA,EAAMI,MAC5Cr4D,EAAKlE,KAAOm8D,EAAME,YAEfn4D,GAKXy3D,EAAS18D,UAAUu9D,UAAY,eAGvBL,EAFAx6D,EAAAA,IAAavB,MAAMtB,KAAKg9D,QACxB97D,EAAI,MAEHm8D,EAAQr9D,KAAKm9D,QAASE,EAAOA,EAAQA,EAAMI,MAC5C56D,EAAO3B,KAAOm8D,EAAMC,cAEjBz6D,GAKXg6D,EAAS18D,UAAUw9D,SAAW,kBACnB39D,KAAKk9D,QAAQI,QAKxBT,EAAS18D,UAAUy9D,YAAc,kBACtB59D,KAAKk9D,QAAQK,MAMxBV,EAAS18D,UAAU09D,aAAe,kBACvB79D,KAAKm9D,QAAQI,MAKxBV,EAAS18D,UAAUsgC,IAAM,eACjB48B,EAAQr9D,KAAKk9D,sBACVl9D,KAAKi9D,SAASI,EAAME,MACvBF,EAAMG,QACNH,EAAMG,MAAMC,MAAQ,MAExBz9D,KAAKk9D,QAAgCG,EAAMG,MACtCx9D,KAAKk9D,UACNl9D,KAAKm9D,QAAU,QAEjBn9D,KAAKg9D,OACAK,EAAMC,QAMjBT,EAAS18D,UAAUymB,QAAU,SAAUrkB,EAAKuF,GACxC9H,KAAKL,IAAI4C,GACTvC,KAAKi9D,SAAS16D,GAAK+6D,OAASx1D,GAMhC+0D,EAAS18D,UAAUkI,IAAM,SAAU9F,EAAKuF,QAC3BvF,KAAOvC,KAAKi9D,UAAW,QAC5BI,EAAAA,CACAE,KAAMh7D,EACNi7D,MAAO,KACPC,MAAOz9D,KAAKm9D,QACZG,OAAQx1D,GAEP9H,KAAKm9D,QAINn9D,KAAKm9D,QAAQK,MAAQH,EAHrBr9D,KAAKk9D,QAAUG,EAKnBr9D,KAAKm9D,QAAUE,EACfr9D,KAAKi9D,SAAS16D,GAAO86D,IACnBr9D,KAAKg9D,QAOXH,EAAS18D,UAAUub,QAAU,SAAU9E,GACnC5W,KAAK+8D,cAAgBnmD,GAElBimD,EAhOPD,GCJG,SAAAkB,GAAwBpmB,EAAGhuC,EAAGC,EAAGo0D,eACd94D,IAAlB84D,GACAA,EAAc,GAAKrmB,EACnBqmB,EAAc,GAAKr0D,EACnBq0D,EAAc,GAAKp0D,EACZo0D,IAGCrmB,EAAGhuC,EAAGC,GASf,SAAAq0D,GAAmBtmB,EAAGhuC,EAAGC,UACrB+tC,EAAI,IAAMhuC,EAAI,IAAMC,EAOxB,SAAAs0D,GAAgBhtD,UACZ+sD,GAAU/sD,EAAU,GAAIA,EAAU,GAAIA,EAAU,QC1CvDitD,GAA0Bj4D,eACtBlD,EAAgB,SAAUE,EAAGpC,UAC7BkC,EAAgBtD,OAAOyD,gBAAAA,CAChBC,UAAAA,cAA2B7B,OAAAA,SAAmB2B,EAAGpC,GAAKoC,EAAEE,UAAYtC,aAC7DoC,EAAGpC,WAAcuC,KAAKvC,EAAOpB,OAAOU,UAAUqC,eAAea,KAAKxC,EAAGuC,KAAIH,EAAEG,GAAKvC,EAAEuC,MAC3EH,EAAGpC,WAErB,SAAUoC,EAAGpC,GAEhB,SAAAyC,IAAgBtD,KAAKuD,YAAcN,EADnCF,EAAcE,EAAGpC,GAEjBoC,EAAE9C,UAAkB,OAANU,EAAapB,OAAO+D,OAAO3C,IAAMyC,EAAGnD,UAAYU,EAAEV,UAAAA,IAAemD,IAVzD2C,GAkB1Bk4D,GAAAA,SAAqCz6D,GAErC,SAAA06D,WACsB,OAAX16D,GAAmBA,EAAOkC,MAAM5F,KAAMqC,YAAcrC,YAF/Dk+D,GAAUE,EAAW16D,GAOrB06D,EAAUj+D,UAAUk+D,YAAc,SAAUjW,QACjCpoD,KAAKs8B,kBAAAA,IACGt8B,KAAK29D,WACPj1B,WAAY0f,QAIjBpoD,KAAKygC,MAAMw5B,YAOvBmE,EAAUj+D,UAAUm+D,mBAAqB,cACb,IAApBt+D,KAAKsnC,gBAKLoQ,EDGL,SAAiBn1C,UACbA,EAAIwG,MAAM,KAAKyF,IAAI+vD,QCLlBttD,CADMjR,KAAK69D,gBAEG,GAClB79D,KAAKsnB,QAAAA,SAAkBtW,GACfA,EAAKC,UAAU,KAAOymC,IACtB13C,KAAKghC,OAAAA,GAAchwB,EAAKC,YACxBD,EAAKipD,YAEXv0D,KAAK1F,SAEJo+D,EApCPD,0DCNe,mBAOF,iBAME,sBClBfK,GAAAA,WAOA,SAAAC,EAAmB9pD,EAAME,EAAMD,EAAME,GAIjC9U,KAAK2U,KAAOA,EAIZ3U,KAAK6U,KAAOA,EAIZ7U,KAAK4U,KAAOA,EAIZ5U,KAAK8U,KAAOA,SAMhB2pD,EAAUt+D,UAAU6mD,SAAW,SAAU/1C,UAC9BjR,KAAKytC,WAAWx8B,EAAU,GAAIA,EAAU,KAMnDwtD,EAAUt+D,UAAUu+D,kBAAoB,SAAUrtD,UACtCrR,KAAK2U,MAAQtD,EAAUsD,MAC3BtD,EAAUwD,MAAQ7U,KAAK6U,MACvB7U,KAAK4U,MAAQvD,EAAUuD,MACvBvD,EAAUyD,MAAQ9U,KAAK8U,MAO/B2pD,EAAUt+D,UAAUstC,WAAa,SAAU/jC,EAAGC,UACnC3J,KAAK2U,MAAQjL,GAAKA,GAAK1J,KAAK6U,MAAQ7U,KAAK4U,MAAQjL,GAAKA,GAAK3J,KAAK8U,MAM3E2pD,EAAUt+D,UAAUwlB,OAAS,SAAUtU,UAC3BrR,KAAK2U,MAAQtD,EAAUsD,MAC3B3U,KAAK4U,MAAQvD,EAAUuD,MACvB5U,KAAK6U,MAAQxD,EAAUwD,MACvB7U,KAAK8U,MAAQzD,EAAUyD,MAK/B2pD,EAAUt+D,UAAUugC,OAAS,SAAUrvB,GAC/BA,EAAUsD,KAAO3U,KAAK2U,OACtB3U,KAAK2U,KAAOtD,EAAUsD,MAEtBtD,EAAUwD,KAAO7U,KAAK6U,OACtB7U,KAAK6U,KAAOxD,EAAUwD,MAEtBxD,EAAUuD,KAAO5U,KAAK4U,OACtB5U,KAAK4U,KAAOvD,EAAUuD,MAEtBvD,EAAUyD,KAAO9U,KAAK8U,OACtB9U,KAAK8U,KAAOzD,EAAUyD,OAM9B2pD,EAAUt+D,UAAUw+D,UAAY,kBACrB3+D,KAAK8U,KAAO9U,KAAK4U,KAAO,GAKnC6pD,EAAUt+D,UAAUmmD,QAAU,kBAClBtmD,KAAK4+D,WAAY5+D,KAAK2+D,cAKlCF,EAAUt+D,UAAUy+D,SAAW,kBACpB5+D,KAAK6U,KAAO7U,KAAK2U,KAAO,GAMnC8pD,EAAUt+D,UAAU8yC,WAAa,SAAU5hC,UAC/BrR,KAAK2U,MAAQtD,EAAUwD,MAC3B7U,KAAK6U,MAAQxD,EAAUsD,MACvB3U,KAAK4U,MAAQvD,EAAUyD,MACvB9U,KAAK8U,MAAQzD,EAAUuD,MAExB6pD,EAzGPD,GAmHG,SAAAK,GAAwBlqD,EAAME,EAAMD,EAAME,EAAMzD,eACjCpM,IAAdoM,GACAA,EAAUsD,KAAOA,EACjBtD,EAAUwD,KAAOA,EACjBxD,EAAUuD,KAAOA,EACjBvD,EAAUyD,KAAOA,EACVzD,OAGImtD,GAAU7pD,EAAME,EAAMD,EAAME,OCpH3CgqD,GAAAA,CAAgB,EAAG,EAAG,GAqCtBC,GAAAA,WAIA,SAAAC,EAAkB7zD,GpImKf,IAAkBpK,EAAek+D,EAChCC,EoIrJI/nB,KAVJn3C,KAAK2L,aAA8B1G,IAApBkG,EAAQQ,QAAwBR,EAAQQ,QAAU,EAKjE3L,KAAK+1B,aAAe5qB,EAAQ6qB,gBpIyJXj1B,EoIxJDf,KAAK+1B,apIwJWkpC,GoItJ7B,EpIuJHC,EoIzJmC,SAAUt+D,EAAGC,UACrCA,EAAID,IpIwJOD,EACnBI,EAAIo+D,OAAM,SAAUC,EAAY/5D,MACrB,IAAVA,SACO,MAEPg6D,EAAMH,EAAQn+D,EAAIsE,EAAQ,GAAI+5D,WACzBC,EAAM,GAAMJ,GAAsB,IAARI,OoI7JzB,KAGLl0D,EAAQm0D,gBACAp+D,EAAI,EAAGkB,EAAKpC,KAAK+1B,aAAa90B,OAAS,EAAGC,EAAIkB,IAAMlB,KACpDi2C,MAIGn3C,KAAK+1B,aAAa70B,GAAKlB,KAAK+1B,aAAa70B,EAAI,KAAOi2C,EAAAA,CACpDA,OAAalyC,cAJjBkyC,EAAan3C,KAAK+1B,aAAa70B,GAAKlB,KAAK+1B,aAAa70B,EAAI,GActElB,KAAKs4C,YAAcnB,EAKnBn3C,KAAK4L,QAAU5L,KAAK+1B,aAAa90B,OAAS,EAK1CjB,KAAKu/D,aAA6Bt6D,IAAnBkG,EAAQq0D,OAAuBr0D,EAAQq0D,OAAS,KAK/Dx/D,KAAKy/D,SAAW,UACQx6D,IAApBkG,EAAQm0D,UACRt/D,KAAKy/D,SAAWt0D,EAAQm0D,WACjBt/D,KAAKy/D,SAASx+D,QAAUjB,KAAK+1B,aAAa90B,OAAQ,SAEzD2L,EAASzB,EAAQyB,YACN3H,IAAX2H,GAAyB5M,KAAKu/D,SAAYv/D,KAAKy/D,WAC/Cz/D,KAAKu/D,QAAAA,GAAqB3yD,QAErB5M,KAAKu/D,SAAWv/D,KAAKy/D,UAAcz/D,KAAKu/D,UAAYv/D,KAAKy/D,SAAW,IAK7Ez/D,KAAK0/D,WAAa,UACQz6D,IAAtBkG,EAAQw0D,YACR3/D,KAAK0/D,WAAav0D,EAAQw0D,aACnB3/D,KAAK0/D,WAAWz+D,QAAUjB,KAAK+1B,aAAa90B,OAAQ,KAM/DjB,KAAK4/D,eACoB36D,IAArBkG,EAAQ00D,SACF10D,EAAQ00D,SACP7/D,KAAK0/D,WAEF,KAFEA,OAGP1/D,KAAK4/D,WAAa5/D,KAAK0/D,YAC3B1/D,KAAK4/D,YAAc5/D,KAAK0/D,WAAa,IAK1C1/D,KAAKihB,aAAqBhc,IAAX2H,EAAuBA,EAAS,KAK/C5M,KAAK8/D,gBAAkB,KAKvB9/D,KAAK+/D,SAAAA,CAAY,EAAG,QACE96D,IAAlBkG,EAAQ60D,MACRhgE,KAAK8/D,gBAAkB30D,EAAQ60D,MAAMxxD,KAAI,SAAUoI,EAAM8gC,OACjDrmC,EAAAA,IAAAA,GAA0B9H,KAAKF,IAAI,EAAGuN,EAAK,IAAKrN,KAAKD,IAAIsN,EAAK,GAAK,GAAI,GAAIrN,KAAKF,IAAI,EAAGuN,EAAK,IAAKrN,KAAKD,IAAIsN,EAAK,GAAK,GAAI,OACxHhK,EAAAA,KACIqzD,EAAsBjgE,KAAKo8D,0BAA0BxvD,EAAQ8qC,GACjErmC,EAAUsD,KAAOpL,KAAKD,IAAI22D,EAAoBtrD,KAAMtD,EAAUsD,MAC9DtD,EAAUwD,KAAOtL,KAAKF,IAAI42D,EAAoBprD,KAAMxD,EAAUwD,MAC9DxD,EAAUuD,KAAOrL,KAAKD,IAAI22D,EAAoBrrD,KAAMvD,EAAUuD,MAC9DvD,EAAUyD,KAAOvL,KAAKF,IAAI42D,EAAoBnrD,KAAMzD,EAAUyD,aAE3DzD,IACRrR,MAEE4M,GACL5M,KAAKkgE,qBAAqBtzD,UAWlCoyD,EAAS7+D,UAAUggE,iBAAmB,SAAUvzD,EAAQsD,EAAMoB,WACtDD,EAAYrR,KAAKo8D,0BAA0BxvD,EAAQsD,GAC9ChP,EAAImQ,EAAUsD,KAAMvS,EAAKiP,EAAUwD,KAAM3T,GAAKkB,IAAMlB,UAChDgxB,EAAI7gB,EAAUuD,KAAMqgC,EAAK5jC,EAAUyD,KAAMod,GAAK+iB,IAAM/iB,EACzD5gB,EAAAA,CAAUpB,EAAMhP,EAAGgxB,KAW/B8sC,EAAS7+D,UAAUigE,gCAAkC,SAAUnvD,EAAWK,EAAU+uD,EAAeprD,OAChFvL,EAAGC,EACd22D,EAAkB,KAClB5oB,EAAIzmC,EAAU,GAAK,MACE,IAArBjR,KAAKs4C,aACL5uC,EAAIuH,EAAU,GACdtH,EAAIsH,EAAU,IAGdqvD,EAAkBtgE,KAAK+7D,mBAAmB9qD,EAAWgE,GAElDyiC,GAAK13C,KAAK2L,SAAAA,IAST2F,EAASomC,EARY,IAArB13C,KAAKs4C,YAGLjnC,GAFA3H,EAAIH,KAAK8c,MAAM3c,EAAI,GAEoBA,EADvCC,EAAIJ,KAAK8c,MAAM1c,EAAI,GAC0BA,EAAG02D,GAGpCrgE,KAAKo8D,0BAA0BkE,EAAiB5oB,EAAG2oB,WAGxD,IAET3oB,SAEC,GAOXsnB,EAAS7+D,UAAU0M,UAAY,kBACpB7M,KAAKihB,SAOhB+9C,EAAS7+D,UAAU8M,WAAa,kBACrBjN,KAAK4L,SAOhBozD,EAAS7+D,UAAU6M,WAAa,kBACrBhN,KAAK2L,SAQhBqzD,EAAS7+D,UAAUogE,UAAY,SAAU7oB,UACjC13C,KAAKu/D,QACEv/D,KAAKu/D,QAGLv/D,KAAKy/D,SAAS/nB,IAS7BsnB,EAAS7+D,UAAUypB,cAAgB,SAAU8tB,UAClC13C,KAAK+1B,aAAa2hB,IAO7BsnB,EAAS7+D,UAAUg1B,eAAiB,kBACzBn1B,KAAK+1B,cAQhBipC,EAAS7+D,UAAUqgE,2BAA6B,SAAUvvD,EAAWovD,EAAeprD,MAC5EhE,EAAU,GAAKjR,KAAK4L,QAAAA,IACK,IAArB5L,KAAKs4C,YAAgB,KACjB3jC,EAAsB,EAAf1D,EAAU,GACjB2D,EAAsB,EAAf3D,EAAU,aACU0D,EAAMA,EAAO,EAAGC,EAAMA,EAAO,EAAGyrD,OAE/DC,EAAkBtgE,KAAK+7D,mBAAmB9qD,EAAWgE,UAClDjV,KAAKo8D,0BAA0BkE,EAAiBrvD,EAAU,GAAK,EAAGovD,UAEtE,MASXrB,EAAS7+D,UAAUsgE,mBAAqB,SAAU/oB,EAAGrmC,EAAW4D,OACxDuqD,EAASx/D,KAAKugE,UAAU7oB,GACxBznC,EAAajQ,KAAK4pB,cAAc8tB,GAChCmoB,EAAAA,GAAkB7/D,KAAKu8D,YAAY7kB,GAAI13C,KAAK+/D,UAC5CprD,EAAO6qD,EAAO,GAAKnuD,EAAUsD,KAAOkrD,EAAS,GAAK5vD,EAClD4E,EAAO2qD,EAAO,IAAMnuD,EAAUwD,KAAO,GAAKgrD,EAAS,GAAK5vD,YAGtC0E,EAFX6qD,EAAO,GAAKnuD,EAAUuD,KAAOirD,EAAS,GAAK5vD,EAEpB4E,EADvB2qD,EAAO,IAAMnuD,EAAUyD,KAAO,GAAK+qD,EAAS,GAAK5vD,EACdgF,IASlD+pD,EAAS7+D,UAAUi8D,0BAA4B,SAAUxvD,EAAQ8qC,EAAG2oB,OAC5DpvD,EAAY6tD,GAChB9+D,KAAK0gE,uBAAuB9zD,EAAO,GAAIA,EAAO,GAAI8qC,GAAG,EAAOzmC,OACxD0D,EAAO1D,EAAU,GACjB2D,EAAO3D,EAAU,UACrBjR,KAAK0gE,uBAAuB9zD,EAAO,GAAIA,EAAO,GAAI8qC,GAAG,EAAMzmC,MAC5B0D,EAAM1D,EAAU,GAAI2D,EAAM3D,EAAU,GAAIovD,IAM3ErB,EAAS7+D,UAAUwgE,mBAAqB,SAAU1vD,OAC1CuuD,EAASx/D,KAAKugE,UAAUtvD,EAAU,IAClChB,EAAajQ,KAAK4pB,cAAc3Y,EAAU,IAC1C4uD,EAAAA,GAAkB7/D,KAAKu8D,YAAYtrD,EAAU,IAAKjR,KAAK+/D,iBAEvDP,EAAO,IAAMvuD,EAAU,GAAK,IAAO4uD,EAAS,GAAK5vD,EACjDuvD,EAAO,IAAMvuD,EAAU,GAAK,IAAO4uD,EAAS,GAAK5vD,IAWzD+uD,EAAS7+D,UAAU47D,mBAAqB,SAAU9qD,EAAWgE,OACrDuqD,EAASx/D,KAAKugE,UAAUtvD,EAAU,IAClChB,EAAajQ,KAAK4pB,cAAc3Y,EAAU,IAC1C4uD,EAAAA,GAAkB7/D,KAAKu8D,YAAYtrD,EAAU,IAAKjR,KAAK+/D,UACvDprD,EAAO6qD,EAAO,GAAKvuD,EAAU,GAAK4uD,EAAS,GAAK5vD,EAChD2E,EAAO4qD,EAAO,IAAMvuD,EAAU,GAAK,GAAK4uD,EAAS,GAAK5vD,YAGpC0E,EAAMC,EAFjBD,EAAOkrD,EAAS,GAAK5vD,EACrB2E,EAAOirD,EAAS,GAAK5vD,EACcgF,IAalD+pD,EAAS7+D,UAAUygE,kCAAoC,SAAUnvD,EAAYxB,EAAY8tD,UAC9E/9D,KAAK6gE,gCAAgCpvD,EAAW,GAAIA,EAAW,GAAIxB,GAAY,EAAO8tD,IAejGiB,EAAS7+D,UAAU0gE,gCAAkC,SAAUn3D,EAAGC,EAAGsG,EAAY6wD,EAA2B/C,OACpGrmB,EAAI13C,KAAKk8D,kBAAkBjsD,GAC3B+Z,EAAQ/Z,EAAajQ,KAAK4pB,cAAc8tB,GACxC8nB,EAASx/D,KAAKugE,UAAU7oB,GACxBmoB,EAAAA,GAAkB7/D,KAAKu8D,YAAY7kB,GAAI13C,KAAK+/D,UAC5CgB,EAAUD,EAA4B,GAAM,EAC5CE,EAAUF,EAA4B,GAAM,EAC5CG,EAAc13D,KAAK8c,OAAO3c,EAAI81D,EAAO,IAAMvvD,EAAa8wD,GACxDG,EAAc33D,KAAK8c,OAAOm5C,EAAO,GAAK71D,GAAKsG,EAAa+wD,GACxDG,EAAcn3C,EAAQi3C,EAAepB,EAAS,GAC9CuB,EAAcp3C,EAAQk3C,EAAerB,EAAS,UAC9CiB,GACAK,EAAa53D,KAAK6jB,KAAK+zC,GAAc,EACrCC,EAAa73D,KAAK6jB,KAAKg0C,GAAc,IAGrCD,EAAa53D,KAAK8c,MAAM86C,GACxBC,EAAa73D,KAAK8c,MAAM+6C,OAEG1pB,EAAGypB,EAAYC,EAAYrD,IAiB9DiB,EAAS7+D,UAAUugE,uBAAyB,SAAUh3D,EAAGC,EAAG+tC,EAAGopB,EAA2B/C,OAClFyB,EAASx/D,KAAKugE,UAAU7oB,GACxBznC,EAAajQ,KAAK4pB,cAAc8tB,GAChCmoB,EAAAA,GAAkB7/D,KAAKu8D,YAAY7kB,GAAI13C,KAAK+/D,UAC5CgB,EAAUD,EAA4B,GAAM,EAC5CE,EAAUF,EAA4B,GAAM,EAC5CG,EAAc13D,KAAK8c,OAAO3c,EAAI81D,EAAO,IAAMvvD,EAAa8wD,GACxDG,EAAc33D,KAAK8c,OAAOm5C,EAAO,GAAK71D,GAAKsG,EAAa+wD,GACxDG,EAAaF,EAAcpB,EAAS,GACpCuB,EAAaF,EAAcrB,EAAS,UACpCiB,GACAK,EAAa53D,KAAK6jB,KAAK+zC,GAAc,EACrCC,EAAa73D,KAAK6jB,KAAKg0C,GAAc,IAGrCD,EAAa53D,KAAK8c,MAAM86C,GACxBC,EAAa73D,KAAK8c,MAAM+6C,OAEG1pB,EAAGypB,EAAYC,EAAYrD,IAU9DiB,EAAS7+D,UAAUkhE,yBAA2B,SAAU5vD,EAAYimC,EAAGqmB,UAC5D/9D,KAAK0gE,uBAAuBjvD,EAAW,GAAIA,EAAW,GAAIimC,GAAG,EAAOqmB,IAM/EiB,EAAS7+D,UAAUmhE,uBAAyB,SAAUrwD,UAC3CjR,KAAK+1B,aAAa9kB,EAAU,KAUvC+tD,EAAS7+D,UAAUo8D,YAAc,SAAU7kB,UACnC13C,KAAK4/D,UACE5/D,KAAK4/D,UAGL5/D,KAAK0/D,WAAWhoB,IAO/BsnB,EAAS7+D,UAAUohE,iBAAmB,SAAU7pB,UACvC13C,KAAK8/D,gBAMC9/D,KAAK8/D,gBAAgBpoB,GALrB13C,KAAKihB,QACNjhB,KAAKo8D,0BAA0Bp8D,KAAKihB,QAASy2B,GAC7C,MAcdsnB,EAAS7+D,UAAU+7D,kBAAoB,SAAUjsD,EAAYgxC,aACrDvJ,EAAsB13C,KAAK+1B,aAAc9lB,EAAYgxC,GAAiB,GAC1DjhD,KAAK2L,QAAS3L,KAAK4L,UAMvCozD,EAAS7+D,UAAU+/D,qBAAuB,SAAUtzD,WAC5C3L,EAASjB,KAAK+1B,aAAa90B,OAC3BugE,EAAAA,IAAqBlgE,MAAML,GACtBy2C,EAAI13C,KAAK2L,QAAS+rC,EAAIz2C,IAAUy2C,EACrC8pB,EAAe9pB,GAAK13C,KAAKo8D,0BAA0BxvD,EAAQ8qC,GAE/D13C,KAAK8/D,gBAAkB0B,GAEpBxC,EAxcPD,GCrCG,SAAA0C,GAA0BrwD,OACzBoR,EAAWpR,EAAWkR,4BACrBE,IACDA,EA0GD,SAA6BpR,EAAYswD,EAAaC,EAAcC,UAxEpE,SAAyBh1D,EAAQ80D,EAAaC,EAAcC,OAC3DprD,OAAwBvR,IAAf28D,EAA2BA,EAAAA,GACpC5rC,EAAc6rC,GAAsBj1D,EAAQ80D,EAAaC,kBAEzD/0D,OAAQA,EACR4yD,OAAAA,GAAkB5yD,EAAQ4J,GAC1Bwf,YAAaA,EACb6pC,SAAU8B,IAmEPG,CADMC,GAAqB3wD,GACHswD,EAAaC,EAAcC,GA5G3CI,CAAoB5wD,GAC/BA,EAAWmR,mBAAmBC,IAE3BA,EA+EX,SAAAq/C,GAA+Bj1D,EAAQ80D,EAAaC,EAAcM,WAC1Dr2D,OAA0B3G,IAAhBy8D,EAA4BA,E3D9FhB,G2D+FtB5pD,EAAAA,GAAmBlL,GACnBiL,EAAAA,GAAiBjL,GACjBizD,EAAAA,QAAmC56D,IAAjB08D,EAA6BA,EAAAA,IAC/Cn2D,EAAgBy2D,EAAoB,EAClCA,EACA14D,KAAKD,IAAIuO,EAAQgoD,EAAS,GAAI/nD,EAAS+nD,EAAS,IAClD5+D,EAAS2K,EAAU,EACnBoqB,EAAAA,IAAkB10B,MAAML,GACnBy2C,EAAI,EAAGA,EAAIz2C,IAAUy2C,EAC1B1hB,EAAY0hB,GAAKlsC,EAAgBjC,KAAKmiC,IAAI,EAAGgM,UAE1C1hB,EAqBJ,SAAA+rC,GAA8B3wD,OAE7BxE,GADJwE,EAAAA,GAA2BA,IACHvE,gBACnBD,EAAAA,KACGs1D,EAAQ,IAAAvhD,GAAAD,IAAwCtP,EAAW6Q,mBAC/DrV,EAAAA,IAAyBs1D,GAAOA,EAAMA,EAAMA,UAEzCt1D,MC7IPu1D,GAA0Bl8D,eACtBlD,EAAgB,SAAUE,EAAGpC,UAC7BkC,EAAgBtD,OAAOyD,gBAAAA,CAChBC,UAAAA,cAA2B7B,OAAAA,SAAmB2B,EAAGpC,GAAKoC,EAAEE,UAAYtC,aAC7DoC,EAAGpC,WAAcuC,KAAKvC,EAAOpB,OAAOU,UAAUqC,eAAea,KAAKxC,EAAGuC,KAAIH,EAAEG,GAAKvC,EAAEuC,MAC3EH,EAAGpC,WAErB,SAAUoC,EAAGpC,GAEhB,SAAAyC,IAAgBtD,KAAKuD,YAAcN,EADnCF,EAAcE,EAAGpC,GAEjBoC,EAAE9C,UAAkB,OAANU,EAAapB,OAAO+D,OAAO3C,IAAMyC,EAAGnD,UAAYU,EAAEV,UAAAA,IAAemD,IAVzD2C,GAiD1Bm8D,GAAAA,SAAsC1+D,GAKtC,SAAA2+D,EAAoBl3D,OACZtH,EAAQH,EAAOL,KAAKrD,KAAA,CACpB20B,aAAcxpB,EAAQwpB,aACtBE,wBAAyB1pB,EAAQ0pB,wBACjCzjB,WAAYjG,EAAQiG,WACpBjF,MAAOhB,EAAQgB,MACf6oB,MAAO7pB,EAAQ6pB,SACbh1B,KAKN6D,EAAMy+D,aAA6Br9D,IAAnBkG,EAAQo3D,QAAuBp3D,EAAQo3D,OAKvD1+D,EAAM2+D,qBACyBv9D,IAA3BkG,EAAQs3D,eAA+Bt3D,EAAQs3D,eAAiB,EAKpE5+D,EAAM2e,cAAgCvd,IAArBkG,EAAQqX,SAAyBrX,EAAQqX,SAAW,SAEjEA,EAAWrX,EAAQqX,gBACnBA,MACOA,EAAS+5C,YAAY/5C,EAASxV,cAHrC6yD,CAAY,IAAK,MASrBh8D,EAAM6+D,UAAAA,IAAAA,GAAAA,QAA0Bv3D,EAAQywB,WAAa,GAKrD/3B,EAAM8+D,QAAAA,CAAW,EAAG,GAKpB9+D,EAAM05D,KAAOpyD,EAAQ5I,KAAO,GAK5BsB,EAAM++D,YAAAA,CAAgB7I,WAAY5uD,EAAQ4uD,YAQ1Cl2D,EAAMg/D,WAAa13D,EAAQ03D,WAAa13D,EAAQ03D,WAAa,EACtDh/D,SA7DXs+D,GAAUE,EAAY3+D,GAkEtB2+D,EAAWliE,UAAUm8B,eAAiB,kBAC3Bt8B,KAAK0iE,UAAUpmC,kBAM1B+lC,EAAWliE,UAAUk+D,YAAc,SAAUjtD,EAAYg3C,OACjDsa,EAAY1iE,KAAK8iE,0BAA0B1xD,GAC3CsxD,GACAA,EAAUrE,YAAYjW,IAY9Bia,EAAWliE,UAAUoR,kBAAoB,SAAUH,EAAYsmC,EAAGrmC,EAAWC,OACrEoxD,EAAY1iE,KAAK8iE,0BAA0B1xD,OAC1CsxD,SACM,UAGP1xD,EAAM+xD,EAAcC,EADpBC,GAAU,EAELv5D,EAAI2H,EAAUsD,KAAMjL,GAAK2H,EAAUwD,OAAQnL,UACvCC,EAAI0H,EAAUuD,KAAMjL,GAAK0H,EAAUyD,OAAQnL,EAChDo5D,EAAAA,GAAyBrrB,EAAGhuC,EAAGC,GAC/Bq5D,GAAS,EACLN,EAAUtF,YAAY2F,KAEtBC,GADAhyD,EAAqD0xD,EAAU/iE,IAAIojE,IACrDh0D,aAAAA,MAEVi0D,GAA4B,IAAnB1xD,EAASN,IAGrBgyD,IACDC,GAAU,UAIfA,GAMXZ,EAAWliE,UAAU+iE,uBAAyB,SAAU9xD,UAC7C,GAOXixD,EAAWliE,UAAUuoC,OAAS,kBACnB1oC,KAAKu9D,MAOhB8E,EAAWliE,UAAUgjE,OAAS,SAAU5gE,GAChCvC,KAAKu9D,OAASh7D,IACdvC,KAAKu9D,KAAOh7D,EACZvC,KAAKqG,YAObg8D,EAAWliE,UAAUijE,UAAY,SAAUhyD,UAChCpR,KAAKsiE,SAKhBD,EAAWliE,UAAUg1B,eAAiB,kBAC3Bn1B,KAAKwiB,SAAS2S,kBAWzBktC,EAAWliE,UAAUkjE,QAAU,SAAU3rB,EAAGhuC,EAAGC,EAAGgV,EAAYvN,eAQ9DixD,EAAWliE,UAAUmjE,YAAc,kBACxBtjE,KAAKwiB,UAMhB6/C,EAAWliE,UAAUojE,yBAA2B,SAAUnyD,UACjDpR,KAAKwiB,SAICxiB,KAAKwiB,YAHoBpR,IAWxCixD,EAAWliE,UAAU2iE,0BAA4B,SAAU1xD,gBACrCpR,KAAKk0B,gBAAiB9iB,GAAa,IAE9CpR,KAAK0iE,WAShBL,EAAWliE,UAAUqjE,kBAAoB,SAAU7kD,UACxC3e,KAAKwiE,iBAQhBH,EAAWliE,UAAUsjE,iBAAmB,SAAU/rB,EAAG/4B,EAAYvN,OpC9N/CwF,EAAMwiB,EAAOujB,EoC+NvBn6B,EAAWxiB,KAAKujE,yBAAyBnyD,GACzCqxD,EAAiBziE,KAAKwjE,kBAAkB7kD,GACxCkhD,EAAAA,GAAkBr9C,EAAS+5C,YAAY7kB,GAAI13C,KAAK2iE,gBAC9B,GAAlBF,EACO5C,GpCnOGjpD,EoCsOOipD,EpCtODzmC,EoCsOWqpC,OpCrOlBx9D,KADc03C,EoCsOoB38C,KAAK2iE,WpCpOpDhmB,EAAAA,CAAY,EAAG,IAEnBA,EAAS,GAAM/lC,EAAK,GAAKwiB,EAAQ,GAAO,EACxCujB,EAAS,GAAM/lC,EAAK,GAAKwiB,EAAQ,GAAO,EACjCujB,IoC4OP0lB,EAAWliE,UAAUujE,+BAAiC,SAAUzyD,EAAW0yD,OACnEvyD,OAAgCnM,IAAnB0+D,EAA+BA,EAAiB3jE,KAAKk0B,gBAClE1R,EAAWxiB,KAAKujE,yBAAyBnyD,UACzCpR,KAAKo1B,YAAchkB,EAAWgR,aAC9BnR,ED/PL,SAAeuR,EAAUvR,EAAWG,OACnCsmC,EAAIzmC,EAAU,GACdyF,EAAS8L,EAASm+C,mBAAmB1vD,GACrCkV,EAAmB47C,GAAqB3wD,SACpB+U,EAAkBzP,UAO/BzF,MANH+U,EAAAA,GAAsBG,GACtBF,EAAa1c,KAAK6jB,MAAMjH,EAAiB,GAAKzP,EAAO,IAAMsP,UAC/DtP,EAAO,IAAMsP,EAAaC,EACnBzD,EAAS6+C,yBAAyB3qD,EAAQghC,GCuP7CzmC,CAAkBuR,EAAUvR,EAAWG,IN5N5C,SAA0BH,EAAWuR,OACpCk1B,EAAIzmC,EAAU,GACdvH,EAAIuH,EAAU,GACdtH,EAAIsH,EAAU,MACduR,EAASxV,aAAe0qC,GAAKA,EAAIl1B,EAASvV,oBACnC,MAEPoE,EAAYmR,EAAS++C,iBAAiB7pB,UACrCrmC,GAIMA,EAAUo8B,WAAW/jC,EAAGC,IMkNPsH,EAAWuR,GAAYvR,EAAY,MAM/DoxD,EAAWliE,UAAUk8B,MAAQ,WACzBr8B,KAAK0iE,UAAUrmC,SAEnBgmC,EAAWliE,UAAUk1B,QAAU,WAC3Br1B,KAAKq8B,QACL34B,EAAOvD,UAAUk1B,QAAQhyB,KAAKrD,OAOlCqiE,EAAWliE,UAAUyjE,gBAAkB,SAAUC,EAAWzyD,OACpDsxD,EAAY1iE,KAAK8iE,0BAA0B1xD,GAC3CyyD,EAAYnB,EAAU3F,gBACtB2F,EAAU3F,cAAgB8G,IAWlCxB,EAAWliE,UAAU2jE,QAAU,SAAUpsB,EAAGhuC,EAAGC,EAAGyH,KAC3CixD,EA9QPD,aAqRA2B,GAAAA,SAA2CrgE,GAM3C,SAAAsgE,EAAyBjkE,EAAMiR,OACvBnN,EAAQH,EAAOL,KAAKrD,KAAMD,IAASC,YAMvC6D,EAAMmN,KAAOA,EACNnN,SAbXs+D,GAAU6B,EAAiBtgE,GAepBsgE,EAhBPD,IC3TG,SAAAE,GAA4BC,EAAU1hD,OACrC2hD,EAAS,SACTC,EAAS,SACTC,EAAS,SACTC,EAAa,0BAQPrzD,EAAW0N,EAAYvN,UACxBH,EAIMizD,EACFt9C,QAAQu9C,EAAQlzD,EAAU,GAAGC,YAC7B0V,QAAQw9C,EAAQnzD,EAAU,GAAGC,YAC7B0V,QAAQy9C,EAAQpzD,EAAU,GAAGC,YAC7B0V,QAAQ09C,GAAY,eACjB5sB,EAAIzmC,EAAU,GACdszD,EAAQ/hD,EAAS++C,iBAAiB7pB,aAC/B6sB,EAAO,KACNA,EAAM5F,YAAc1tD,EAAU,GAAK,GAClCC,sBAUlB,SAAAszD,GAA6BC,EAAWjiD,WACvChc,EAAMi+D,EAAUxjE,OAChByjE,EAAAA,IAAuBpjE,MAAMkF,GACxBtF,EAAI,EAAGA,EAAIsF,IAAOtF,EACvBwjE,EAAiBxjE,GAAK+iE,GAAmBQ,EAAUvjE,GAAIshB,UAQxD,SAAoCkiD,MACP,IAA5BA,EAAiBzjE,cACVyjE,EAAiB,mBASlBzzD,EAAW0N,EAAYvN,MACxBH,OAKG5L,EAAAA,GPpBT,SAAc4L,UACTA,EAAU,IAAMA,EAAU,IAAMA,EAAU,GOkBtCwrC,CAAkBxrC,GACAyzD,EAAiBzjE,eAChCyjE,EAAiBr/D,GAAO4L,EAAW0N,EAAYvN,KAxBvDuzD,CAA2BD,+FCrDlCE,GAA0B3+D,eACtBlD,EAAgB,SAAUE,EAAGpC,UAC7BkC,EAAgBtD,OAAOyD,gBAAAA,CAChBC,UAAAA,cAA2B7B,OAAAA,SAAmB2B,EAAGpC,GAAKoC,EAAEE,UAAYtC,aAC7DoC,EAAGpC,WAAcuC,KAAKvC,EAAOpB,OAAOU,UAAUqC,eAAea,KAAKxC,EAAGuC,KAAIH,EAAEG,GAAKvC,EAAEuC,MAC3EH,EAAGpC,WAErB,SAAUoC,EAAGpC,GAEhB,SAAAyC,IAAgBtD,KAAKuD,YAAcN,EADnCF,EAAcE,EAAGpC,GAEjBoC,EAAE9C,UAAkB,OAANU,EAAapB,OAAO+D,OAAO3C,IAAMyC,EAAGnD,UAAYU,EAAEV,UAAAA,IAAemD,IAVzD2C,GA+C1B4+D,GAAAA,SAAmCnhE,GAKnC,SAAAohE,EAAiB35D,OACTtH,EAAQH,EAAOL,KAAKrD,KAAA,CACpB20B,aAAcxpB,EAAQwpB,aACtBiH,UAAWzwB,EAAQywB,UACnB2mC,OAAQp3D,EAAQo3D,OAChBnxD,WAAYjG,EAAQiG,WACpBjF,MAAOhB,EAAQgB,MACfqW,SAAUrX,EAAQqX,SAClBigD,eAAgBt3D,EAAQs3D,eACxBztC,MAAO7pB,EAAQ6pB,MACf+kC,WAAY5uD,EAAQ4uD,WACpBx3D,IAAK4I,EAAQ5I,IACbsyB,wBAAyB1pB,EAAQ0pB,wBACjCguC,WAAY13D,EAAQ03D,cAClB7iE,YAKN6D,EAAMkhE,yBACFlhE,EAAMmhE,kBAAoBF,EAAQ3kE,UAAU6kE,gBAKhDnhE,EAAM82D,iBAAmBxvD,EAAQwvD,iBAC7BxvD,EAAQ65D,kBACRnhE,EAAMmhE,gBAAkB75D,EAAQ65D,iBAMpCnhE,EAAMohE,KAAO,KACT95D,EAAQ85D,KACRphE,EAAMqhE,QAAQ/5D,EAAQ85D,MAEjB95D,EAAQstB,KACb50B,EAAMg3B,OAAO1vB,EAAQstB,KAMzB50B,EAAMshE,iBAAAA,GACCthE,SAjDX+gE,GAAUE,EAASphE,GAwDnBohE,EAAQ3kE,UAAUilE,oBAAsB,kBAC7BplE,KAAK26D,kBAOhBmK,EAAQ3kE,UAAUklE,mBAAqB,kBAC5B5lE,OAAO6lE,eAAetlE,MAAMglE,kBAAoBhlE,KAAKglE,gBACtDhlE,KAAKglE,gBAAgBt/D,KAAK1F,MAC1BA,KAAKglE,iBASfF,EAAQ3kE,UAAUolE,QAAU,kBACjBvlE,KAAKilE,MAOhBH,EAAQ3kE,UAAUyoC,iBAAmB,SAAUpkC,OAIvCzE,EAHAiR,EAAoDxM,EAAMtE,OAC1DslE,EAAAA,EAAax0D,GACby0D,EAAYz0D,EAAKjC,WAEjB02D,GAAAA,IACAzlE,KAAKmlE,iBAAiBK,IAAO,EAC7BzlE,EAAAA,IAEKylE,KAAOxlE,KAAKmlE,0BACVnlE,KAAKmlE,iBAAiBK,GAC7BzlE,EACI0lE,GAAAA,GAAuBC,GAEjBD,GAAAA,GAAuBrxC,QAEnBnvB,GAENA,MAARlF,GACAC,KAAKuE,cAAAA,IAAAA,GAAAA,gBAAkCxE,EAAMiR,KAQrD8zD,EAAQ3kE,UAAUwlE,oBAAsB,SAAUhL,GAC9C36D,KAAK0iE,UAAUrmC,QACfr8B,KAAK26D,iBAAmBA,EACxB36D,KAAKqG,WAQTy+D,EAAQ3kE,UAAUylE,mBAAqB,SAAUZ,EAAiBziE,GAC9DvC,KAAKglE,gBAAkBA,EACvBhlE,KAAK0iE,UAAUpE,0BACI,IAAR/7D,EACPvC,KAAKmjE,OAAO5gE,GAGZvC,KAAKqG,WAQby+D,EAAQ3kE,UAAU06B,OAAS,SAAUpC,OAC7BwsC,ED5FL,SAAmBxsC,OAClBwsC,EAAAA,GACAhqD,EAAAA,sBAA8B4qD,KAAKptC,MACnCxd,EAAAA,KAEI6qD,EAAgB7qD,EAAM,GAAG65C,WAAW,GACpCiR,EAAe9qD,EAAM,GAAG65C,WAAW,GACnCD,OAAAA,MACCA,EAAWiR,EAAejR,GAAYkR,IAAgBlR,EACvDoQ,EAAKniE,KAAK21B,EAAI7R,QAAQ3L,EAAM,GAAI9T,OAAO6+D,aAAanR,YAEjDoQ,KAEXhqD,EAAAA,kBAA0B4qD,KAAKptC,GAC3Bxd,SAEIgrD,EAAS9qC,SAASlgB,EAAM,GAAI,IACvB/Z,EAAIi6B,SAASlgB,EAAM,GAAI,IAAK/Z,GAAK+kE,EAAQ/kE,IAC9C+jE,EAAKniE,KAAK21B,EAAI7R,QAAQ3L,EAAM,GAAI/Z,EAAEgQ,oBAE/B+zD,SAEXA,EAAKniE,KAAK21B,GACHwsC,ECqECA,CAAiBxsC,GACrBz4B,KAAKilE,KAAOA,EACZjlE,KAAKklE,QAAQD,IAOjBH,EAAQ3kE,UAAU+kE,QAAU,SAAUD,GAClCjlE,KAAKilE,KAAOA,MACR1iE,EAAM0iE,EAAKlxD,KAAK,MAChB/T,KAAK+kE,yBACL/kE,KAAK4lE,mBAAAA,GAAuCX,EAAMjlE,KAAKwiB,UAAWjgB,GAGlEvC,KAAKmjE,OAAO5gE,IASpBuiE,EAAQ3kE,UAAU6kE,gBAAkB,SAAU/zD,EAAW0N,EAAYvN,KASrE0zD,EAAQ3kE,UAAU2jE,QAAU,SAAUpsB,EAAGhuC,EAAGC,OACpCo5D,EAAAA,GAAyBrrB,EAAGhuC,EAAGC,GAC/B3J,KAAK0iE,UAAUtF,YAAY2F,IAC3B/iE,KAAK0iE,UAAU/iE,IAAIojE,IAGpB+B,EAnLPD,yDC/CAqB,GAA0BjgE,eACtBlD,EAAgB,SAAUE,EAAGpC,UAC7BkC,EAAgBtD,OAAOyD,gBAAAA,CAChBC,UAAAA,cAA2B7B,OAAAA,SAAmB2B,EAAGpC,GAAKoC,EAAEE,UAAYtC,aAC7DoC,EAAGpC,WAAcuC,KAAKvC,EAAOpB,OAAOU,UAAUqC,eAAea,KAAKxC,EAAGuC,KAAIH,EAAEG,GAAKvC,EAAEuC,MAC3EH,EAAGpC,WAErB,SAAUoC,EAAGpC,GAEhB,SAAAyC,IAAgBtD,KAAKuD,YAAcN,EADnCF,EAAcE,EAAGpC,GAEjBoC,EAAE9C,UAAkB,OAANU,EAAapB,OAAO+D,OAAO3C,IAAMyC,EAAGnD,UAAYU,EAAEV,UAAAA,IAAemD,IAVzD2C,GA+E1BkgE,GAAAA,SAAqCziE,GAKrC,SAAA0iE,EAAmBj7D,OACXtH,EAAQH,EAAOL,KAAKrD,KAAA,CACpB20B,aAAcxpB,EAAQwpB,aACtBiH,UAAWzwB,EAAQywB,UACnB2mC,OAAQp3D,EAAQo3D,OAChBnxD,WAAYjG,EAAQiG,WACpBjF,MAAOhB,EAAQgB,MACfqW,SAAUrX,EAAQqX,SAClBm4C,iBAAkBxvD,EAAQwvD,iBACpBxvD,EAAQwvD,iBACR0L,GACN5D,eAAgBt3D,EAAQs3D,eACxBuC,gBAAiB75D,EAAQ65D,gBACzBvsC,IAAKttB,EAAQstB,IACbwsC,KAAM95D,EAAQ85D,KACdjwC,MAAO7pB,EAAQ6pB,MACf+kC,WAAY5uD,EAAQ4uD,WACpBx3D,IAAK4I,EAAQ5I,IACbsyB,wBAAyB1pB,EAAQ0pB,wBACjCguC,WAAY13D,EAAQ03D,cAClB7iE,YAKN6D,EAAM+yB,iBACsB3xB,IAAxBkG,EAAQyrB,YAA4BzrB,EAAQyrB,YAAc,KAK9D/yB,EAAMyiE,eACoBrhE,IAAtBkG,EAAQm7D,UAA0Bn7D,EAAQm7D,UAAAA,GAAAA,QAK9CziE,EAAM0iE,uBAAAA,GAKN1iE,EAAM2iE,sBAAAA,GAKN3iE,EAAM4iE,4BAA8Bt7D,EAAQu7D,2BAK5C7iE,EAAMiwB,iBACyB,IAA3B3oB,EAAQgrB,eAAmBpL,QAAmC9lB,EAKlEpB,EAAM8iE,0BAA2B,EAC1B9iE,SA/DXqiE,GAAUE,EAAW1iE,GAoErB0iE,EAAUjmE,UAAUm8B,eAAiB,cAI7Bt8B,KAAK0iE,UAAUpmC,wBACR,UAGE/5B,KAAOvC,KAAKumE,0BACbvmE,KAAKumE,uBAAuBhkE,GAAK+5B,wBAC1B,SAIZ,GAMX8pC,EAAUjmE,UAAUk+D,YAAc,SAAUjtD,EAAYg3C,OAKhDwe,EAAgB5mE,KAAK8iE,0BAA0B1xD,WAE1C0wB,KADT9hC,KAAK0iE,UAAUrE,YAAYr+D,KAAK0iE,WAAakE,EAAgBxe,EAAAA,IAC9CpoD,KAAKumE,uBAAAA,KACZ7D,EAAY1iE,KAAKumE,uBAAuBzkC,GAC5C4gC,EAAUrE,YAAYqE,GAAakE,EAAgBxe,EAAAA,MAM3Dge,EAAUjmE,UAAUoqB,kBAAoB,kBAC7BvqB,KAAK8zB,iBAMhBsyC,EAAUjmE,UAAU+iE,uBAAyB,SAAU9xD,UAE/CpR,KAAKk0B,iBACL9iB,IAAAA,GACYpR,KAAKk0B,gBAAiB9iB,GAC3B,EAGApR,KAAK6mE,aAMpBT,EAAUjmE,UAAU0mE,UAAY,kBACrB,GAOXT,EAAUjmE,UAAUuoC,OAAS,kBACjBhlC,EAAOvD,UAAUuoC,OAAOrlC,KAAKrD,OAChCA,KAAK8zB,gBAAkB,KAAOgzC,KAAKC,UAAU/mE,KAAK8zB,iBAAmB,KAM9EsyC,EAAUjmE,UAAUijE,UAAY,SAAUhyD,WAElCpR,KAAKk0B,iBACL9iB,IAAAA,GACYpR,KAAKk0B,gBAAiB9iB,KAI3B1N,EAAOvD,UAAUijE,UAAU//D,KAAKrD,KAAMoR,IAOrDg1D,EAAUjmE,UAAUojE,yBAA2B,SAAUnyD,OAIjD41D,EAAWhnE,KAAKk0B,oBAChBl0B,KAAKwiB,UAAcwkD,IAAAA,GAAuBA,EAAU51D,QAIhD61D,EAAAA,EAAiB71D,UACf61D,KAAWjnE,KAAKwmE,wBAClBxmE,KAAKwmE,sBAAsBS,GAAAA,GAAoC71D,IAE5DpR,KAAKwmE,sBAAsBS,UAP3BjnE,KAAKwiB,UAcpB4jD,EAAUjmE,UAAU2iE,0BAA4B,SAAU1xD,OAIlD41D,EAAWhnE,KAAKk0B,oBACf8yC,GAAAA,GAAuBA,EAAU51D,UAC3BpR,KAAK0iE,cAGRuE,EAAAA,EAAiB71D,UACf61D,KAAWjnE,KAAKumE,yBAClBvmE,KAAKumE,uBAAuBU,GAAAA,IAAAA,GAAAA,QAAyBjnE,KAAK0iE,UAAU3F,gBAEjE/8D,KAAKumE,uBAAuBU,IAa3Cb,EAAUjmE,UAAU+mE,YAAc,SAAUxvB,EAAGhuC,EAAGC,EAAGgV,EAAYvN,EAAY7O,OACrE0O,EAAAA,CAAaymC,EAAGhuC,EAAGC,GACnBw9D,EAAennE,KAAK0jE,+BAA+BzyD,EAAWG,GAC9Dg2D,EAAUD,EACRnnE,KAAKglE,gBAAgBmC,EAAcxoD,EAAYvN,QAC/CnM,EACF+L,EAAAA,IAAWhR,KAAKsmE,UAAUr1D,OAAuBhM,IAAZmiE,EAAYniE,GAAsBsuB,QAAoCtuB,IAAZmiE,EAAwBA,EAAU,GAAIpnE,KAAK42B,YAAa52B,KAAK26D,iBAAkB36D,KAAK4iE,oBACvL5xD,EAAKzO,IAAMA,EACXyO,EAAK9M,iBAAAA,EAAmClE,KAAK4oC,iBAAiBljC,KAAK1F,OAC5DgR,GAUXo1D,EAAUjmE,UAAUkjE,QAAU,SAAU3rB,EAAGhuC,EAAGC,EAAGgV,EAAYvN,OACrD0W,EAAmB9nB,KAAKk0B,mBAEvBpM,GACA1W,IAAAA,GACU0W,EAAkB1W,QAIzBuqB,EAAQ37B,KAAK8iE,0BAA0B1xD,GACvCH,EAAAA,CAAaymC,EAAGhuC,EAAGC,GACnBqH,OAAAA,EACA+xD,EAAAA,GAAsB9xD,GACtB0qB,EAAMyhC,YAAY2F,KAClB/xD,EAAO2qB,EAAMh8B,IAAIojE,QAEjBxgE,EAAMvC,KAAK0oC,YACX13B,GAAQA,EAAKzO,KAAOA,SACbyO,MAGHkqD,EAAiBl7D,KAAKujE,yBAAyBz7C,GAC/CqzC,EAAiBn7D,KAAKujE,yBAAyBnyD,GAC/CgqD,EAAmBp7D,KAAK0jE,+BAA+BzyD,EAAWG,GAClEi2D,EAAAA,IAAAA,GAAAA,QAAyBv/C,EAAkBozC,EAAgB9pD,EAAY+pD,EAAgBlqD,EAAWmqD,EAAkBp7D,KAAKwjE,kBAAkB7kD,GAAa3e,KAAK6mE,YAAAA,SAAuBnvB,EAAGhuC,EAAGC,EAAGgV,UACtL3e,KAAKsnE,gBAAgB5vB,EAAGhuC,EAAGC,EAAGgV,EAAYmJ,IACnDpiB,KAAK1F,MAAOA,KAAKymE,4BAA6BzmE,KAAK2mE,yBAA0B3mE,KAAK8zB,wBACpFuzC,EAAQ9kE,IAAMA,EACVyO,GACAq2D,EAAQxN,YAAc7oD,EACtBq2D,EAAQlN,sBACRx+B,EAAM/U,QAAQm8C,EAAcsE,IAG5B1rC,EAAMtzB,IAAI06D,EAAcsE,GAErBA,SA9BJrnE,KAAKsnE,gBAAgB5vB,EAAGhuC,EAAGC,EAAGgV,EAAYmJ,GAAoB1W,IA2C7Eg1D,EAAUjmE,UAAUmnE,gBAAkB,SAAU5vB,EAAGhuC,EAAGC,EAAGgV,EAAYvN,OAC7DJ,EAAO,KACP+xD,EAAAA,GAAyBrrB,EAAGhuC,EAAGC,GAC/BpH,EAAMvC,KAAK0oC,YACV1oC,KAAK0iE,UAAUtF,YAAY2F,QAK5B/xD,EAAOhR,KAAK0iE,UAAU/iE,IAAIojE,IACjBxgE,KAAOA,EAAAA,KAIRs3D,EAAc7oD,EAClBA,EAAOhR,KAAKknE,YAAYxvB,EAAGhuC,EAAGC,EAAGgV,EAAYvN,EAAY7O,GAErDs3D,EAAY9qD,YAAAA,GAEZiC,EAAK6oD,YAAcA,EAAYA,YAG/B7oD,EAAK6oD,YAAcA,EAEvB7oD,EAAKmpD,sBACLn6D,KAAK0iE,UAAU97C,QAAQm8C,EAAc/xD,SApBzCA,EAAOhR,KAAKknE,YAAYxvB,EAAGhuC,EAAGC,EAAGgV,EAAYvN,EAAY7O,GACzDvC,KAAK0iE,UAAUr6D,IAAI06D,EAAc/xD,UAsB9BA,GAOXo1D,EAAUjmE,UAAUonE,2BAA6B,SAAUh5D,MAEnDvO,KAAK2mE,0BAA4Bp4D,WAI5BuzB,KADT9hC,KAAK2mE,yBAA2Bp4D,EACjBvO,KAAKumE,uBAChBvmE,KAAKumE,uBAAuBzkC,GAAIzF,QAEpCr8B,KAAKqG,YAcT+/D,EAAUjmE,UAAUqnE,yBAA2B,SAAUp2D,EAAYq2D,OAEzDC,EAAAA,GAAqBt2D,MACrBs2D,EAAAA,KACIT,EAAAA,EAAiBS,GACfT,KAAWjnE,KAAKwmE,wBAClBxmE,KAAKwmE,sBAAsBS,GAAWQ,KAK/CrB,EAnVPD,aAyVJ,SAAAE,GAAiCsB,EAAWx4C,GACUw4C,EAAUz+C,WAAYiG,IAAMA,8CCta9Ey4C,GAA0B3hE,eACtBlD,EAAgB,SAAUE,EAAGpC,UAC7BkC,EAAgBtD,OAAOyD,gBAAAA,CAChBC,UAAAA,cAA2B7B,OAAAA,SAAmB2B,EAAGpC,GAAKoC,EAAEE,UAAYtC,aAC7DoC,EAAGpC,WAAcuC,KAAKvC,EAAOpB,OAAOU,UAAUqC,eAAea,KAAKxC,EAAGuC,KAAIH,EAAEG,GAAKvC,EAAEuC,MAC3EH,EAAGpC,WAErB,SAAUoC,EAAGpC,GAEhB,SAAAyC,IAAgBtD,KAAKuD,YAAcN,EADnCF,EAAcE,EAAGpC,GAEjBoC,EAAE9C,UAAkB,OAANU,EAAapB,OAAO+D,OAAO3C,IAAMyC,EAAGnD,UAAYU,EAAEV,UAAAA,IAAemD,IAVzD2C,GA4E1B4hE,GAAAA,SAA+BnkE,GAK/B,SAAAokE,EAAax3D,OAELnF,EAAUmF,GAAAA,GACVc,OAAoCnM,IAAvBkG,EAAQiG,WAA2BjG,EAAQiG,WAAa,YACrEoR,OAAgCvd,IAArBkG,EAAQqX,SACjBrX,EAAQqX,SLVf,SAAmBlS,OAClBy3D,EAAaz3D,GAAAA,GACb1D,EAASm7D,EAAWn7D,QAAAA,GAAwB,aAAaC,YACzDm7D,EAAAA,CACAp7D,OAAQA,EACRjB,QAASo8D,EAAWp8D,QACpBk0D,SAAUkI,EAAWlI,SACrB7pC,YAAa6rC,GAAsBj1D,EAAQm7D,EAAWn8D,QAASm8D,EAAWlI,SAAUkI,EAAWv8D,8BAE/Ew8D,GKCFxlD,CAAAA,CAEN5V,OAAAA,GAA6BwE,GAC7B5F,cAAeL,EAAQK,cACvBI,QAAST,EAAQS,QACjBD,QAASR,EAAQQ,QACjBk0D,SAAU10D,EAAQ00D,kBAElBn8D,EAAOL,KAAKrD,KAAA,CAChB20B,aAAcxpB,EAAQwpB,aACtBiH,UAAWzwB,EAAQywB,UACnBhF,YAAazrB,EAAQyrB,YACrBT,eAAgBhrB,EAAQgrB,eACxBosC,OAAQp3D,EAAQo3D,OAChBnxD,WAAYA,EACZs1D,2BAA4Bv7D,EAAQu7D,2BACpClkD,SAAUA,EACVm4C,iBAAkBxvD,EAAQwvD,iBAC1B8H,eAAgBt3D,EAAQs3D,eACxBuC,gBAAiB75D,EAAQ65D,gBACzBvsC,IAAKttB,EAAQstB,IACbwsC,KAAM95D,EAAQ85D,KACdjwC,WAAyB/vB,IAAlBkG,EAAQ6pB,OAAsB7pB,EAAQ6pB,MAC7C+kC,WAAY5uD,EAAQ4uD,WACpBllC,wBAAyB1pB,EAAQ0pB,wBACjCguC,WAAY13D,EAAQ03D,cAClB7iE,YAnCV4nE,GAAUE,EAAKpkE,GAsCRokE,EAvCPD,yDC5EAI,GAA0BhiE,eACtBlD,EAAgB,SAAUE,EAAGpC,UAC7BkC,EAAgBtD,OAAOyD,gBAAAA,CAChBC,UAAAA,cAA2B7B,OAAAA,SAAmB2B,EAAGpC,GAAKoC,EAAEE,UAAYtC,aAC7DoC,EAAGpC,WAAcuC,KAAKvC,EAAOpB,OAAOU,UAAUqC,eAAea,KAAKxC,EAAGuC,KAAIH,EAAEG,GAAKvC,EAAEuC,MAC3EH,EAAGpC,WAErB,SAAUoC,EAAGpC,GAEhB,SAAAyC,IAAgBtD,KAAKuD,YAAcN,EADnCF,EAAcE,EAAGpC,GAEjBoC,EAAE9C,UAAkB,OAANU,EAAapB,OAAO+D,OAAO3C,IAAMyC,EAAGnD,UAAYU,EAAEV,UAAAA,IAAemD,IAVzD2C,GAqD1BiiE,GAAAA,SAA+BxkE,GAK/B,SAAAykE,EAAa73D,OAGLqkB,EADAxpB,EAAUmF,GAAAA,GAGVqkB,OADyB1vB,IAAzBkG,EAAQwpB,aACOxpB,EAAQwpB,aAGvBA,CA7Ca,gHA+CbiC,OAAsC3xB,IAAxBkG,EAAQyrB,YAA4BzrB,EAAQyrB,YAAc,YACxE6B,OAAsBxzB,IAAhBkG,EAAQstB,IACZttB,EAAQstB,IACR,8DACE/0B,EAAOL,KAAKrD,KAAA,CAChB20B,aAAcA,EACdE,yBAAyB,EACzB+G,UAAWzwB,EAAQywB,UACnBhF,YAAaA,EACbT,eAAgBhrB,EAAQgrB,eACxBvqB,aAA6B3G,IAApBkG,EAAQS,QAAwBT,EAAQS,QAAU,GAC3D22D,YAA2Bt9D,IAAnBkG,EAAQo3D,QAAuBp3D,EAAQo3D,OAC/CmE,2BAA4Bv7D,EAAQu7D,2BACpC/L,iBAAkBxvD,EAAQwvD,iBAC1BZ,WAAY5uD,EAAQ4uD,WACpBthC,IAAKA,EACLzD,MAAO7pB,EAAQ6pB,SACbh1B,YA/BVioE,GAAUE,EAAKzkE,GAkCRykE,EAnCPD,wECjDS,aACmB,yBCR5BE,GAA0BniE,eACtBlD,EAAgB,SAAUE,EAAGpC,UAC7BkC,EAAgBtD,OAAOyD,gBAAAA,CAChBC,UAAAA,cAA2B7B,OAAAA,SAAmB2B,EAAGpC,GAAKoC,EAAEE,UAAYtC,aAC7DoC,EAAGpC,WAAcuC,KAAKvC,EAAOpB,OAAOU,UAAUqC,eAAea,KAAKxC,EAAGuC,KAAIH,EAAEG,GAAKvC,EAAEuC,MAC3EH,EAAGpC,WAErB,SAAUoC,EAAGpC,GAEhB,SAAAyC,IAAgBtD,KAAKuD,YAAcN,EADnCF,EAAcE,EAAGpC,GAEjBoC,EAAE9C,UAAkB,OAANU,EAAapB,OAAO+D,OAAO3C,IAAMyC,EAAGnD,UAAYU,EAAEV,UAAAA,IAAemD,IAVzD2C,GA0D1BoiE,GAAAA,SAAyC3kE,GAKzC,SAAA4kE,EAAuBh4D,OACfzM,EAAQ7D,KACRmL,EAAUmF,GAAcA,GACxBpC,EAAAA,EAAAA,GAAyB/C,iBACtB+C,EAAYq6D,eACZr6D,EAAYs6D,wBACnB3kE,EAAQH,EAAOL,KAAKrD,KAAMkO,IAAgBlO,MACpCyoE,gBAA+BxjE,IAApBkG,EAAQo9D,QAAwBp9D,EAAQo9D,QAAU,GACnE1kE,EAAM6kE,+BAA6DzjE,IAAnCkG,EAAQq9D,wBAClCr9D,EAAQq9D,wBAEP3kE,SAfXukE,GAAUE,EAAe5kE,GAuBzB4kE,EAAcnoE,UAAUwoE,WAAa,kBACH3oE,KAAKL,IAAAA,KAQvC2oE,EAAcnoE,UAAUsoE,WAAa,SAAUF,GAC3CvoE,KAAKqI,IAAAA,GAA0BkgE,IAQnCD,EAAcnoE,UAAUyoE,0BAA4B,kBACjB5oE,KAAKL,IAAAA,KAQxC2oE,EAAcnoE,UAAUuoE,0BAA4B,SAAUF,GAC1DxoE,KAAKqI,IAAAA,GAA6CmgE,IAE/CF,EAtDPD,8DC1DAQ,GAA0B5iE,eACtBlD,EAAgB,SAAUE,EAAGpC,UAC7BkC,EAAgBtD,OAAOyD,gBAAAA,CAChBC,UAAAA,cAA2B7B,OAAAA,SAAmB2B,EAAGpC,GAAKoC,EAAEE,UAAYtC,aAC7DoC,EAAGpC,WAAcuC,KAAKvC,EAAOpB,OAAOU,UAAUqC,eAAea,KAAKxC,EAAGuC,KAAIH,EAAEG,GAAKvC,EAAEuC,MAC3EH,EAAGpC,WAErB,SAAUoC,EAAGpC,GAEhB,SAAAyC,IAAgBtD,KAAKuD,YAAcN,EADnCF,EAAcE,EAAGpC,GAEjBoC,EAAE9C,UAAkB,OAANU,EAAapB,OAAO+D,OAAO3C,IAAMyC,EAAGnD,UAAYU,EAAEV,UAAAA,IAAemD,IAVzD2C,GA+B1B6iE,GAAAA,SAAmDplE,GAKnD,SAAAqlE,EAAiCC,OACzBnlE,EAAQH,EAAOL,KAAKrD,KAAMgpE,IAAchpE,YAK5C6D,EAAMolE,eAAgB,EAKtBplE,EAAMqlE,gBAAkB,KAKxBrlE,EAAMslE,mBAKNtlE,EAAMulE,mBAAqB,KAK3BvlE,EAAMwlE,iBAKNxlE,EAAMylE,cAAAA,GAKNzlE,EAAM0lE,WAAY,EAKlB1lE,EAAM2lE,WtHiHF/9D,EAAAA,EAAUA,EAAAA,GAAAA,EAAAA,GAAWA,EAAAA,GsH5GzB5H,EAAM4lE,cAAAA,IAAAA,GAA8B,EAAG,EAAG,EAAG,GACtC5lE,SAnDXglE,GAAUE,EAAyBrlE,GA0DnCqlE,EAAwB5oE,UAAUupE,eAAiB,SAAU14D,OACrDg4D,EAAYhpE,KAAK6R,WACjB4zD,EAAYz0D,EAAKjC,WACjBy5D,EAAyBQ,EAAUJ,mCAC/BnD,GAAAA,IACJA,GAAAA,IACCA,GAAAA,KAAiC+C,GAS1CO,EAAwB5oE,UAAUkjE,QAAU,SAAU3rB,EAAGhuC,EAAGC,EAAGwF,OACvDwP,EAAaxP,EAAWwP,WACxBvN,EAAajC,EAAWa,UAAUoB,WAClC43D,EAAYhpE,KAAK6R,WAEjBb,EADag4D,EAAUl6D,YACLu0D,QAAQ3rB,EAAGhuC,EAAGC,EAAGgV,EAAYvN,UAC/CJ,EAAKjC,YAAAA,KACAi6D,EAAUJ,4BAINI,EAAUL,aAAe,IAE9B3oE,KAAKupE,WAAY,GAJjBv4D,EAAKukB,SAAAA,KAORv1B,KAAK0pE,eAAe14D,KACrBA,EAAOA,EAAKkpD,kBAETlpD,GAQX+3D,EAAwB5oE,UAAU2Q,mBAAqB,SAAUC,EAAOb,EAAMc,WACtEhR,KAAK0pE,eAAe14D,IACbtN,EAAOvD,UAAU2Q,mBAAmBzN,KAAKrD,KAAM+Q,EAAOb,EAAMc,IAS3E+3D,EAAwB5oE,UAAUmP,aAAe,SAAUH,WAC9CnP,KAAK6R,WAAW/C,aAQ7Bi6D,EAAwB5oE,UAAUoP,YAAc,SAAUJ,EAAYjP,OAC9DuP,EAAaN,EAAWK,iBAAiBL,EAAWga,YACpDnZ,EAAYb,EAAWa,UACvBoB,EAAapB,EAAUoB,WACvBgY,EAAiBpZ,EAAUC,WAC3B8Z,EAAa/Z,EAAU0G,OACvBC,EAAW3G,EAAU2G,SACrBgI,EAAaxP,EAAWwP,WACxBqqD,EAAYhpE,KAAK6R,WACjB83D,EAAaX,EAAUl6D,YACvB86D,EAAiBD,EAAWrjE,cAC5Bkc,EAAWmnD,EAAWpG,yBAAyBnyD,GAC/CsmC,EAAIl1B,EAAS05C,kBAAkB9yC,EAAgBugD,EAAW9G,YAC1Dj5B,EAAiBpnB,EAASoH,cAAc8tB,GACxC9qC,EAASuC,EAAWvC,OACpBoT,EAAcvQ,EAAW7C,QAAAA,GAAyB6C,EAAW7C,OAAQwE,GACrE4O,IACApT,EAAAA,GAAyBA,EAAAA,GAAuB6C,EAAW7C,OAAQwE,SAEnEqxD,EAAiBkH,EAAWnG,kBAAkB7kD,GAE9C9G,EAAQtO,KAAKgD,MAAM4C,EAAWyH,KAAK,GAAK6rD,GACxC3qD,EAASvO,KAAKgD,MAAM4C,EAAWyH,KAAK,GAAK6rD,MACzC9rD,EAAAA,KACIC,EAAOrN,KAAKgD,MAAMhD,KAAKgc,KAAK1N,EAAQA,EAAQC,EAASA,IACzDD,EAAQjB,EACRkB,EAASlB,MAETtM,EAAMs/B,EAAiB/xB,EAAS,EAAI4qD,EACpCl4D,EAAMq/B,EAAiB9xB,EAAU,EAAI2qD,EACrCoH,EAAAA,CACA9/C,EAAW,GAAKzf,EAChByf,EAAW,GAAKxf,EAChBwf,EAAW,GAAKzf,EAChByf,EAAW,GAAKxf,GAEhB8G,EAAYmR,EAAS45C,0BAA0BxvD,EAAQ8qC,GAIvDoyB,EAAAA,GACJA,EAAepyB,GAAAA,OACXqyB,EAAkB/pE,KAAKmR,uBAAuBw4D,EAAYv4D,EAAY04D,GACtEN,EAAYxpE,KAAKwpE,UACjBQ,EAAehqE,KAAKypE,cACxBzpE,KAAKupE,WAAY,UACR7/D,EAAI2H,EAAUsD,KAAMjL,GAAK2H,EAAUwD,OAAQnL,UACvCC,EAAI0H,EAAUuD,KAAMjL,GAAK0H,EAAUyD,OAAQnL,EAAAA,KAC5CqH,EAAOhR,KAAKqjE,QAAQ3rB,EAAGhuC,EAAGC,EAAGwF,MAC7BnP,KAAK0pE,eAAe14D,GAAAA,KAChBw0D,EAAAA,EAAaxlE,SACbgR,EAAKjC,YAAAA,GAAwBqlB,CAC7B01C,EAAepyB,GAAG1mC,EAAKC,UAAUC,YAAcF,MAC3CspD,EAAetpD,EAAKspD,aAAakL,GAChCxlE,KAAKupE,YACLjP,IAAsD,IAAtCt6D,KAAKspE,cAAchlE,QAAQ0M,KAC5ChR,KAAKupE,WAAY,MAGmB,IAAxCv4D,EAAKqpD,SAASmL,EAAKr2D,EAAWo4C,mBAKlC0iB,EAAiBznD,EAASg+C,2BAA2BxvD,EAAKC,UAAW+4D,EAAcR,GACnFvG,GAAU,EACVgH,IACAhH,EAAU8G,EAAgBryB,EAAI,EAAGuyB,IAEhChH,GACDzgD,EAAS49C,gCAAgCpvD,EAAKC,UAAW84D,EAAiBC,EAAcR,OAIhGU,EAActgC,EAAiBxgB,KAElBppB,KAAKge,eAAgB7O,EAAWyH,KAAK,GAAK,EAAGzH,EAAWyH,KAAK,GAAK,EAAG,EAAI6rD,EAAgB,EAAIA,EAAgB9rD,GAAWkB,EAAQ,GAAIC,EAAS,OAC1JoS,EAAAA,GAAwClqB,KAAKge,gBACjDhe,KAAKke,aAAahe,EAAQgqB,EAAiBza,EAAWpE,aAClDsH,EAAU3S,KAAK2S,QACfgH,EAAShH,EAAQgH,UACT3Z,KAAK0S,sBAAuB1S,KAAKge,mBAE5Bhe,KAAK+d,cAAelG,EAAQ,EAAGC,EAAS,EAAGoyD,EAAaA,EAAa,GAAIryD,EAAQ,GAAIC,EAAS,GAC3G6B,EAAO9B,OAASA,GAAS8B,EAAO7B,QAAUA,GAC1C6B,EAAO9B,MAAQA,EACf8B,EAAO7B,OAASA,GAEV9X,KAAKie,iBACXtL,EAAQ0N,UAAU,EAAG,EAAGxI,EAAOC,GAE/BkI,GACAhgB,KAAKuf,cAAc5M,EAASxD,EAAY6Q,KAErCrN,EAASg3D,EAAWp/C,qBAC3BvqB,KAAK2f,UAAUhN,EAASxD,GACxBnP,KAAKspE,cAAcroE,OAAS,MAIxBkpE,EAAOC,EAAQC,EAFfC,EAAK7qE,OAAO2F,KAAK0kE,GAAgBt7D,IAAI+vD,QACzC+L,EAAGvsC,KAAAA,GAEwB,IAAvBtuB,EAAWpE,SACTrL,KAAKie,kBACH0rD,EAAWvG,UAAUj0D,EAAWa,UAAUoB,aAI9C+4D,EAAAA,GACAC,EAAAA,IAJAE,EAAKA,EAAGC,kBAMHrpE,EAAIopE,EAAGrpE,OAAS,EAAGC,GAAK,IAAKA,EAAAA,KAC9BspE,EAAWF,EAAGppE,GACdupE,EAAuBd,EAAWlG,iBAAiB+G,EAAU7rD,EAAYvN,GAEzEs5D,EADoBloD,EAASoH,cAAc4gD,GACR5gC,EACnC+gC,EAAOF,EAAqB,GAAKC,EAAeR,EAChDU,EAAOH,EAAqB,GAAKC,EAAeR,EAChDW,EAAkBroD,EAAS6+C,yBAAAA,GAAoCwI,GAAeW,GAC9EM,GAAmBtoD,EAASu5C,mBAAmB8O,GAC/CE,GAAAA,GAA0B/qE,KAAK+d,cAAAA,CAC9B0kD,GAAkBqI,GAAiB,GAAKjB,EAAa,IAClDjgC,EACH64B,GAAkBoH,EAAa,GAAKiB,GAAiB,IAClDlhC,IAEJohC,GAAavI,EAAiBkH,EAAWzG,uBAAuB9xD,GAChE65D,GAAcnB,EAAeU,WACxBzH,MAAgBkI,GAAAA,KAEjBh6D,IADAD,EAA4Di6D,GAAYlI,KACvD9xD,UAEjBi6D,GAASH,GAAS,IAAMF,EAAgB,GAAK55D,GAAU,IAAM05D,EAC7DQ,GAAQ5hE,KAAKgD,MAAM2+D,GAASP,GAC5BS,GAASL,GAAS,IAAMF,EAAgB,GAAK55D,GAAU,IAAM25D,EAC7DS,GAAQ9hE,KAAKgD,MAAM6+D,GAASR,GAG5BpuB,GAAI2uB,IAFJzhE,EAAIH,KAAKgD,MAAM2+D,KAGfzuB,GAAI4uB,IAFJ1hE,EAAIJ,KAAKgD,MAAM6+D,KAGfrR,GAAariB,IAAM8yB,OACnBlQ,EAAeP,IAA+D,IAAjD/oD,EAAKqpD,SAAAA,EAAgBr6D,MAAOmP,EAAWo4C,UAEhE4iB,EAAAA,CAEAx3D,EAAQwM,OACRkrD,EAAAA,CAAe3gE,EAAGC,EAAGD,EAAI8yC,GAAG7yC,EAAGD,EAAI8yC,GAAG7yC,EAAI8yC,GAAG/yC,EAAGC,EAAI8yC,YAC3C6uB,GAAM,EAAGlpE,GAAK+nE,EAAMlpE,OAAQqqE,GAAMlpE,KAAMkpE,MACzC5zB,IAAM8yB,GAAYA,EAAWJ,EAAOkB,IAAAA,KAChC5sD,GAAOyrD,EAAMmB,IACjB34D,EAAQyM,YAERzM,EAAQ0M,OAAOgrD,EAAY,GAAIA,EAAY,IAC3C13D,EAAQ2M,OAAO+qD,EAAY,GAAIA,EAAY,IAC3C13D,EAAQ2M,OAAO+qD,EAAY,GAAIA,EAAY,IAC3C13D,EAAQ2M,OAAO+qD,EAAY,GAAIA,EAAY,IAE3C13D,EAAQ0M,OAAOX,GAAK,GAAIA,GAAK,IAC7B/L,EAAQ2M,OAAOZ,GAAK,GAAIA,GAAK,IAC7B/L,EAAQ2M,OAAOZ,GAAK,GAAIA,GAAK,IAC7B/L,EAAQ2M,OAAOZ,GAAK,GAAIA,GAAK,IAC7B/L,EAAQ+L,OAGhByrD,EAAMrnE,KAAKunE,GACXD,EAAOtnE,KAAK0nE,QAGZ73D,EAAQ0N,UAAU3W,EAAGC,EAAG6yC,GAAGC,IAGnCz8C,KAAKurE,cAAcv6D,EAAM7B,EAAYzF,EAAGC,EAAG6yC,GAAGC,GAAGuuB,GAAYjR,GAAYtqD,EAAWpE,SAChF8+D,IAAU7P,GACV3nD,EAAQ+X,UAEZ1qB,KAAKspE,cAAcxmE,KAAKkO,GACxBhR,KAAKwrE,gBAAgBr8D,EAAWi5C,UAAWuhB,EAAY34D,WAG/DhR,KAAKqpE,iBAAmBO,EACxB5pE,KAAK8d,mBAAqB8rB,EAC1B5pC,KAAKipE,eACAjpE,KAAKkpE,kBAAAA,GAA2BlpE,KAAKkpE,gBAAiBW,GAC3D7pE,KAAKkpE,gBAAkBW,EACvB7pE,KAAKmpE,mBAAqBxqD,EAC1B3e,KAAKopE,mBAAqBh4D,EAC1BpR,KAAKyrE,kBAAkBt8D,EAAYw6D,EAAYnnD,EAAU7D,EAAYvN,EAAYxE,EAAQ8qC,EAAGsxB,EAAUL,cACtG3oE,KAAK0rE,oBAAoBv8D,EAAYw6D,GACrC3pE,KAAK4f,WAAWjN,EAASxD,GACrBM,EAAW7C,QACX+F,EAAQ+X,UAERR,IAAoBvQ,EAAOuB,MAAMpI,YACjC6G,EAAOuB,MAAMpI,UAAYoX,GAEtBlqB,KAAK6d,WAahBkrD,EAAwB5oE,UAAUorE,cAAgB,SAAUv6D,EAAM7B,EAAYzF,EAAGC,EAAG6yC,EAAGC,EAAG/rB,EAAQqpC,EAAY1uD,OACtG4G,EAAQjS,KAAK2rE,aAAa36D,MACzBiB,OAGDuzD,EAAAA,EAAaxlE,MACb4rE,EAAY7R,EAAa/oD,EAAKqpD,SAASmL,EAAKr2D,EAAWo4C,MAAQ,EAC/DskB,EAAQxgE,EAAUugE,EAClBE,EAAeD,IAAU7rE,KAAK2S,QAAQ8X,YACtCqhD,IACA9rE,KAAK2S,QAAQwM,OACbnf,KAAK2S,QAAQ8X,YAAcohD,GAE/B7rE,KAAK2S,QAAQ2N,UAAUrO,EAAOye,EAAQA,EAAQze,EAAM4F,MAAQ,EAAI6Y,EAAQze,EAAM6F,OAAS,EAAI4Y,EAAQhnB,EAAGC,EAAG6yC,EAAGC,GACxGqvB,GACA9rE,KAAK2S,QAAQ+X,UAEC,IAAdkhD,EACAz8D,EAAW0qC,SAAU,EAEhBkgB,GACL/oD,EAAKupD,cAAciL,KAM3BuD,EAAwB5oE,UAAU+oB,SAAW,eACrCvW,EAAU3S,KAAK2S,eACZA,EAAUA,EAAQgH,OAAS,MAQtCovD,EAAwB5oE,UAAUwrE,aAAe,SAAU36D,UAChDA,EAAKkY,YAOhB6/C,EAAwB5oE,UAAUurE,oBAAsB,SAAUv8D,EAAYw6D,MACtEA,EAAWrtC,iBAAAA,KAMPyvC,EAAAA,SAA+BpC,EAAYn7D,EAAKW,OAC5Cu6B,EAAAA,EAAuBigC,GACvBjgC,KAAiBv6B,EAAWi5C,WAC5BuhB,EAAWtL,YAAYlvD,EAAWa,UAAUoB,WAAYjC,EAAWi5C,UAAU1e,KAEnFhkC,KAAK,KAAMikE,GACbx6D,EAAWivB,oBAAoBt7B,KACoCipE,KAS3EhD,EAAwB5oE,UAAUqrE,gBAAkB,SAAUpjB,EAAWuhB,EAAY34D,OAE7E04B,EAAAA,EAAuBigC,GACrBjgC,KAAiB0e,IACnBA,EAAU1e,GAAAA,IAEd0e,EAAU1e,GAAe14B,EAAK03B,WAAY,GAoB9CqgC,EAAwB5oE,UAAUsrE,kBAAoB,SAAUt8D,EAAYw6D,EAAYnnD,EAAU7D,EAAYvN,EAAYxE,EAAQ49D,EAAUjC,EAASyD,OAC7ItiC,EAAAA,EAAuBigC,GACrBjgC,KAAiBv6B,EAAW06B,cAC9B16B,EAAW06B,YAAYH,GAAAA,QAMvB14B,EAAMK,EAAWu4B,EAAgBlgC,EAAGC,EAAG+tC,EAJvC7N,EAAc16B,EAAW06B,YAAYH,GACrC2d,EAAYl4C,EAAWk4C,UAEvBwc,EAAY,MAEXnsB,EAHSl1B,EAASxV,aAGL0qC,GAAK8yB,IAAY9yB,MAC/BrmC,EAAYmR,EAAS45C,0BAA0BxvD,EAAQ8qC,EAAGrmC,GAC1Du4B,EAAiBpnB,EAASoH,cAAc8tB,GACnChuC,EAAI2H,EAAUsD,KAAMjL,GAAK2H,EAAUwD,OAAQnL,MACvCC,EAAI0H,EAAUuD,KAAMjL,GAAK0H,EAAUyD,OAAQnL,EACxC6gE,EAAW9yB,GAAK6wB,KACd1E,GACF7yD,EAAO24D,EAAWtG,QAAQ3rB,EAAGhuC,EAAGC,EAAGgV,EAAYvN,IACtCrC,YAAAA,KACL86B,EAAY74B,EAAK03B,WAAY,EACxB2e,EAAUzf,YAAY52B,EAAK03B,WAC5B2e,EAAUlgB,QAAAA,CACNn2B,EACA04B,EACAlnB,EAASm+C,mBAAmB3vD,EAAKC,WACjC24B,UAIa3kC,IAArB+mE,GACAA,EAAiBh7D,IAIrB24D,EAAW7F,QAAQpsB,EAAGhuC,EAAGC,EAAGyH,GAK5Cu4D,EAAW/F,gBAAgBC,EAAWzyD,IAEnC23D,EA/cPD,aAqdJA,GAAwB3oE,UAAU0R,qDCpf9Bo6D,GAA0BhmE,eACtBlD,EAAgB,SAAUE,EAAGpC,UAC7BkC,EAAgBtD,OAAOyD,gBAAAA,CAChBC,UAAAA,cAA2B7B,OAAAA,SAAmB2B,EAAGpC,GAAKoC,EAAEE,UAAYtC,aAC7DoC,EAAGpC,WAAcuC,KAAKvC,EAAOpB,OAAOU,UAAUqC,eAAea,KAAKxC,EAAGuC,KAAIH,EAAEG,GAAKvC,EAAEuC,MAC3EH,EAAGpC,WAErB,SAAUoC,EAAGpC,GAEhB,SAAAyC,IAAgBtD,KAAKuD,YAAcN,EADnCF,EAAcE,EAAGpC,GAEjBoC,EAAE9C,UAAkB,OAANU,EAAapB,OAAO+D,OAAO3C,IAAMyC,EAAGnD,UAAYU,EAAEV,UAAAA,IAAemD,IAVzD2C,GA4B1BimE,GAAAA,SAAqCxoE,GAKrC,SAAAyoE,EAAmB77D,UACR5M,EAAOL,KAAKrD,KAAMsQ,IAAgBtQ,YAL7CisE,GAAUE,EAAWzoE,GAYrByoE,EAAUhsE,UAAU0P,eAAiB,iCACE7P,OAEhCmsE,EAhBPD,yDCpBAE,GAAAA,IAAAA,GAAAA,QAAAA,CACF9pE,OAAAA,IAAAA,GAAAA,UAGE+pE,GAAAA,IAAAA,GAAAA,QAAAA,CACF5zC,IACE,kFACFV,OAAAA,CACEmC,OAAAA,CAAS,MAEXd,MAAO,EACPN,WAAY,YACZlC,YAAa,cAGX01C,GAAAA,IAAAA,EAAAA,QAAAA,CACF3gE,QAAS,EACTiB,OAAAA,EAAU,SAAU,SAAU,QAAS,SACvCtK,OAAQ+pE,KAGNE,GAAAA,IAAAA,GAAAA,QAAAA,CACF71D,OAAAA,EAAU,SAAU,SACpBxG,KAAM,IAGJs8D,GAAAA,IAAAA,GAAAA,QAAAA,CACFvyC,OAAAA,CAASmyC,GAASE,IAClBpsE,OAAQ,MACR6hD,KAAMwqB,KAGRC,GAAIjmE,GAAG,eAAe,SAAU9B,OAE1B2kB,EAAwCmjD,GAAK3iD,gBAC7C6O,EAAM4zC,GAAWhzC,kBACnB50B,EAAIgN,WACJ2X,EACA,YAAA,CACEqjD,YAAa,cAEbh0C,GACFi0C,MAAMj0C,GACHf,MAAK,SAAUi1C,UACPA,EAASvwD,UAEjBsb,MAAK,SAAUk1C,GACd/yD,SAAS6nC,eAAe,QAAQsJ,UAAY4hB,QAKpDJ,GAAIjmE,GAAG,eAAe,SAAU9B,OAC1BA,EAAIs+B,cAGJ7zB,EAAQs9D,GAAIxpC,cAAcv+B,EAAIk+B,eAC9BkqC,EAAML,GAAIxuC,oBAAoB9uB,GAAO,kBAChC,KAETs9D,GAAIzmB,mBAAmB7qC,MAAM4xD,OAASD,EAAM,UAAY","sources":["./node_modules/@parcel/scope-hoisting/lib/helpers.js","./node_modules/ol/events/Event.js","./node_modules/ol/ObjectEventType.js","./node_modules/ol/Disposable.js","./node_modules/ol/array.js","./node_modules/ol/functions.js","./node_modules/ol/obj.js","./node_modules/ol/events/Target.js","./node_modules/ol/events/EventType.js","./node_modules/ol/events.js","./node_modules/ol/Observable.js","./node_modules/ol/util.js","./node_modules/ol/Object.js","./node_modules/ol/layer/Property.js","./node_modules/ol/AssertionError.js","./node_modules/ol/asserts.js","./node_modules/ol/math.js","./node_modules/ol/layer/Base.js","./node_modules/ol/render/EventType.js","./node_modules/ol/source/State.js","./node_modules/ol/layer/Layer.js","./node_modules/ol/layer/BaseImage.js","./node_modules/ol/ImageState.js","./node_modules/ol/renderer/Layer.js","./node_modules/ol/render/Event.js","./node_modules/ol/transform.js","./node_modules/ol/extent/Corner.js","./node_modules/ol/extent/Relationship.js","./node_modules/ol/extent.js","./node_modules/ol/has.js","./node_modules/ol/dom.js","./node_modules/ol/css.js","./node_modules/ol/render/canvas.js","./node_modules/ol/renderer/canvas/Layer.js","./node_modules/ol/ViewHint.js","./node_modules/ol/proj/Units.js","./node_modules/ol/proj/Projection.js","./node_modules/ol/proj/epsg3857.js","./node_modules/ol/proj/epsg4326.js","./node_modules/ol/proj/projections.js","./node_modules/ol/proj/transforms.js","./node_modules/ol/geom/GeometryType.js","./node_modules/ol/sphere.js","./node_modules/ol/coordinate.js","./node_modules/ol/proj.js","./node_modules/ol/renderer/canvas/ImageLayer.js","./node_modules/ol/layer/Image.js","./node_modules/ol/source/common.js","./node_modules/ol/ImageBase.js","./node_modules/ol/reproj.js","./node_modules/ol/reproj/Triangulation.js","./node_modules/ol/reproj/Image.js","./node_modules/ol/reproj/common.js","./node_modules/ol/source/Source.js","./node_modules/ol/source/Image.js","./node_modules/ol/Image.js","./node_modules/ol/source/WMSServerType.js","./node_modules/ol/uri.js","./node_modules/ol/source/ImageWMS.js","./node_modules/ol/string.js","./node_modules/ol/color.js","./node_modules/ol/style/IconImageCache.js","./node_modules/ol/renderer/Map.js","./node_modules/ol/renderer/Composite.js","./node_modules/ol/CollectionEventType.js","./node_modules/ol/Collection.js","./node_modules/ol/layer/Group.js","./node_modules/ol/MapEvent.js","./node_modules/ol/MapBrowserEvent.js","./node_modules/ol/MapBrowserEventType.js","./node_modules/ol/pointer/EventType.js","./node_modules/ol/MapBrowserEventHandler.js","./node_modules/ol/MapEventType.js","./node_modules/ol/MapProperty.js","./node_modules/ol/structs/PriorityQueue.js","./node_modules/ol/TileState.js","./node_modules/ol/TileQueue.js","./node_modules/ol/ViewProperty.js","./node_modules/ol/tilegrid/common.js","./node_modules/ol/centerconstraint.js","./node_modules/ol/resolutionconstraint.js","./node_modules/ol/rotationconstraint.js","./node_modules/ol/easing.js","./node_modules/ol/geom/GeometryLayout.js","./node_modules/ol/geom/flat/transform.js","./node_modules/ol/geom/Geometry.js","./node_modules/ol/geom/SimpleGeometry.js","./node_modules/ol/geom/flat/closest.js","./node_modules/ol/geom/flat/deflate.js","./node_modules/ol/geom/flat/simplify.js","./node_modules/ol/geom/flat/inflate.js","./node_modules/ol/geom/flat/area.js","./node_modules/ol/geom/LinearRing.js","./node_modules/ol/geom/Point.js","./node_modules/ol/geom/flat/contains.js","./node_modules/ol/geom/flat/intersectsextent.js","./node_modules/ol/geom/flat/segments.js","./node_modules/ol/geom/flat/reverse.js","./node_modules/ol/geom/flat/orient.js","./node_modules/ol/geom/Polygon.js","./node_modules/ol/geom/flat/interiorpoint.js","./node_modules/ol/View.js","./node_modules/ol/size.js","./node_modules/ol/PluggableMap.js","./node_modules/ol/control/Control.js","./node_modules/ol/control/Attribution.js","./node_modules/ol/control/Rotate.js","./node_modules/ol/control/Zoom.js","./node_modules/ol/interaction/Property.js","./node_modules/ol/interaction/Interaction.js","./node_modules/ol/interaction/DoubleClickZoom.js","./node_modules/ol/interaction/Pointer.js","./node_modules/ol/events/condition.js","./node_modules/ol/interaction/DragPan.js","./node_modules/ol/interaction/DragRotate.js","./node_modules/ol/render/Box.js","./node_modules/ol/interaction/DragBox.js","./node_modules/ol/interaction/DragZoom.js","./node_modules/ol/events/KeyCode.js","./node_modules/ol/interaction/KeyboardPan.js","./node_modules/ol/interaction/KeyboardZoom.js","./node_modules/ol/Kinetic.js","./node_modules/ol/interaction/MouseWheelZoom.js","./node_modules/ol/interaction/PinchRotate.js","./node_modules/ol/interaction/PinchZoom.js","./node_modules/ol/Map.js","./node_modules/ol/control.js","./node_modules/ol/interaction.js","./node_modules/ol/Tile.js","./node_modules/ol/ImageTile.js","./node_modules/ol/reproj/Tile.js","./node_modules/ol/structs/LRUCache.js","./node_modules/ol/tilecoord.js","./node_modules/ol/TileCache.js","./node_modules/ol/source/TileEventType.js","./node_modules/ol/TileRange.js","./node_modules/ol/tilegrid/TileGrid.js","./node_modules/ol/tilegrid.js","./node_modules/ol/source/Tile.js","./node_modules/ol/tileurlfunction.js","./node_modules/ol/source/UrlTile.js","./node_modules/ol/source/TileImage.js","./node_modules/ol/source/XYZ.js","./node_modules/ol/source/OSM.js","./node_modules/ol/layer/TileProperty.js","./node_modules/ol/layer/BaseTile.js","./node_modules/ol/renderer/canvas/TileLayer.js","./node_modules/ol/layer/Tile.js","./main.js"],"sourcesContent":["var $parcel$global =\n  typeof globalThis !== 'undefined'\n    ? globalThis\n    : typeof self !== 'undefined'\n    ? self\n    : typeof window !== 'undefined'\n    ? window\n    : typeof global !== 'undefined'\n    ? global\n    : {};\n\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\nfunction $parcel$defineInteropFlag(a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n}\n\nfunction $parcel$export(e, n, v) {\n  Object.defineProperty(e, n, {get: v, enumerable: true});\n}\n\nfunction $parcel$exportWildcard(dest, source) {\n  Object.keys(source).forEach(function(key) {\n    if (key === 'default' || key === '__esModule') {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function get() {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n}\n\nfunction $parcel$missingModule(name) {\n  var err = new Error(\"Cannot find module '\" + name + \"'\");\n  err.code = 'MODULE_NOT_FOUND';\n  throw err;\n}\n","/**\n * @module ol/events/Event\n */\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nvar BaseEvent = /** @class */ (function () {\n    /**\n     * @param {string} type Type.\n     */\n    function BaseEvent(type) {\n        /**\n         * @type {boolean}\n         */\n        this.propagationStopped;\n        /**\n         * The event type.\n         * @type {string}\n         * @api\n         */\n        this.type = type;\n        /**\n         * The event target.\n         * @type {Object}\n         * @api\n         */\n        this.target = null;\n    }\n    /**\n     * Stop event propagation.\n     * @api\n     */\n    BaseEvent.prototype.preventDefault = function () {\n        this.propagationStopped = true;\n    };\n    /**\n     * Stop event propagation.\n     * @api\n     */\n    BaseEvent.prototype.stopPropagation = function () {\n        this.propagationStopped = true;\n    };\n    return BaseEvent;\n}());\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n    evt.stopPropagation();\n}\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n    evt.preventDefault();\n}\nexport default BaseEvent;\n//# sourceMappingURL=Event.js.map","/**\n * @module ol/ObjectEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when a property is changed.\n     * @event module:ol/Object.ObjectEvent#propertychange\n     * @api\n     */\n    PROPERTYCHANGE: 'propertychange',\n};\n//# sourceMappingURL=ObjectEventType.js.map","/**\n * @module ol/Disposable\n */\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nvar Disposable = /** @class */ (function () {\n    function Disposable() {\n        /**\n         * The object has already been disposed.\n         * @type {boolean}\n         * @protected\n         */\n        this.disposed = false;\n    }\n    /**\n     * Clean up.\n     */\n    Disposable.prototype.dispose = function () {\n        if (!this.disposed) {\n            this.disposed = true;\n            this.disposeInternal();\n        }\n    };\n    /**\n     * Extension point for disposable objects.\n     * @protected\n     */\n    Disposable.prototype.disposeInternal = function () { };\n    return Disposable;\n}());\nexport default Disposable;\n//# sourceMappingURL=Disposable.js.map","/**\n * @module ol/array\n */\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function=} opt_comparator Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n    var mid, cmp;\n    var comparator = opt_comparator || numberSafeCompareFunction;\n    var low = 0;\n    var high = haystack.length;\n    var found = false;\n    while (low < high) {\n        /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n         * to double (which gives the wrong results). */\n        mid = low + ((high - low) >> 1);\n        cmp = +comparator(haystack[mid], needle);\n        if (cmp < 0.0) {\n            /* Too low. */\n            low = mid + 1;\n        }\n        else {\n            /* Key found or too high */\n            high = mid;\n            found = !cmp;\n        }\n    }\n    /* Key not found. */\n    return found ? low : ~low;\n}\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n    return a > b ? 1 : a < b ? -1 : 0;\n}\n/**\n * Whether the array contains the given object.\n * @param {Array<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n    return arr.indexOf(obj) >= 0;\n}\n/**\n * @param {Array<number>} arr Array.\n * @param {number} target Target.\n * @param {number} direction 0 means return the nearest, > 0\n *    means return the largest nearest, < 0 means return the\n *    smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n    var n = arr.length;\n    if (arr[0] <= target) {\n        return 0;\n    }\n    else if (target <= arr[n - 1]) {\n        return n - 1;\n    }\n    else {\n        var i = void 0;\n        if (direction > 0) {\n            for (i = 1; i < n; ++i) {\n                if (arr[i] < target) {\n                    return i - 1;\n                }\n            }\n        }\n        else if (direction < 0) {\n            for (i = 1; i < n; ++i) {\n                if (arr[i] <= target) {\n                    return i;\n                }\n            }\n        }\n        else {\n            for (i = 1; i < n; ++i) {\n                if (arr[i] == target) {\n                    return i;\n                }\n                else if (arr[i] < target) {\n                    if (arr[i - 1] - target < target - arr[i]) {\n                        return i - 1;\n                    }\n                    else {\n                        return i;\n                    }\n                }\n            }\n        }\n        return n - 1;\n    }\n}\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n    while (begin < end) {\n        var tmp = arr[begin];\n        arr[begin] = arr[end];\n        arr[end] = tmp;\n        ++begin;\n        --end;\n    }\n}\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n    var extension = Array.isArray(data) ? data : [data];\n    var length = extension.length;\n    for (var i = 0; i < length; i++) {\n        arr[arr.length] = extension[i];\n    }\n}\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n    var i = arr.indexOf(obj);\n    var found = i > -1;\n    if (found) {\n        arr.splice(i, 1);\n    }\n    return found;\n}\n/**\n * @param {Array<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n    var length = arr.length >>> 0;\n    var value;\n    for (var i = 0; i < length; i++) {\n        value = arr[i];\n        if (func(value, i, arr)) {\n            return value;\n        }\n    }\n    return null;\n}\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n    var len1 = arr1.length;\n    if (len1 !== arr2.length) {\n        return false;\n    }\n    for (var i = 0; i < len1; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Sort the passed array such that the relative order of equal elements is preverved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n    var length = arr.length;\n    var tmp = Array(arr.length);\n    var i;\n    for (i = 0; i < length; i++) {\n        tmp[i] = { index: i, value: arr[i] };\n    }\n    tmp.sort(function (a, b) {\n        return compareFnc(a.value, b.value) || a.index - b.index;\n    });\n    for (i = 0; i < arr.length; i++) {\n        arr[i] = tmp[i].value;\n    }\n}\n/**\n * @param {Array<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n    var index;\n    var found = !arr.every(function (el, idx) {\n        index = idx;\n        return !func(el, idx, arr);\n    });\n    return found ? index : -1;\n}\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function=} opt_func Comparison function.\n * @param {boolean=} opt_strict Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n    var compare = opt_func || numberSafeCompareFunction;\n    return arr.every(function (currentVal, index) {\n        if (index === 0) {\n            return true;\n        }\n        var res = compare(arr[index - 1], currentVal);\n        return !(res > 0 || (opt_strict && res === 0));\n    });\n}\n//# sourceMappingURL=array.js.map","/**\n * @module ol/functions\n */\nimport { equals as arrayEquals } from './array.js';\n/**\n * Always returns true.\n * @returns {boolean} true.\n */\nexport function TRUE() {\n    return true;\n}\n/**\n * Always returns false.\n * @returns {boolean} false.\n */\nexport function FALSE() {\n    return false;\n}\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() { }\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n    var called = false;\n    /** @type {ReturnType} */\n    var lastResult;\n    /** @type {Array<any>} */\n    var lastArgs;\n    var lastThis;\n    return function () {\n        var nextArgs = Array.prototype.slice.call(arguments);\n        if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n            called = true;\n            lastThis = this;\n            lastArgs = nextArgs;\n            lastResult = fn.apply(this, arguments);\n        }\n        return lastResult;\n    };\n}\n//# sourceMappingURL=functions.js.map","/**\n * @module ol/obj\n */\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport var assign = typeof Object.assign === 'function'\n    ? Object.assign\n    : function (target, var_sources) {\n        if (target === undefined || target === null) {\n            throw new TypeError('Cannot convert undefined or null to object');\n        }\n        var output = Object(target);\n        for (var i = 1, ii = arguments.length; i < ii; ++i) {\n            var source = arguments[i];\n            if (source !== undefined && source !== null) {\n                for (var key in source) {\n                    if (source.hasOwnProperty(key)) {\n                        output[key] = source[key];\n                    }\n                }\n            }\n        }\n        return output;\n    };\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n    for (var property in object) {\n        delete object[property];\n    }\n}\n/**\n * Polyfill for Object.values().  Get an array of property values from an object.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/values\n *\n * @param {!Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport var getValues = typeof Object.values === 'function'\n    ? Object.values\n    : function (object) {\n        var values = [];\n        for (var property in object) {\n            values.push(object[property]);\n        }\n        return values;\n    };\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n    var property;\n    for (property in object) {\n        return false;\n    }\n    return !property;\n}\n//# sourceMappingURL=obj.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport { VOID } from '../functions.js';\nimport { clear } from '../obj.js';\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nvar Target = /** @class */ (function (_super) {\n    __extends(Target, _super);\n    /**\n     * @param {*=} opt_target Default event target for dispatched events.\n     */\n    function Target(opt_target) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {*}\n         */\n        _this.eventTarget_ = opt_target;\n        /**\n         * @private\n         * @type {Object<string, number>}\n         */\n        _this.pendingRemovals_ = null;\n        /**\n         * @private\n         * @type {Object<string, number>}\n         */\n        _this.dispatching_ = null;\n        /**\n         * @private\n         * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n         */\n        _this.listeners_ = null;\n        return _this;\n    }\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../events.js\").Listener} listener Listener.\n     */\n    Target.prototype.addEventListener = function (type, listener) {\n        if (!type || !listener) {\n            return;\n        }\n        var listeners = this.listeners_ || (this.listeners_ = {});\n        var listenersForType = listeners[type] || (listeners[type] = []);\n        if (listenersForType.indexOf(listener) === -1) {\n            listenersForType.push(listener);\n        }\n    };\n    /**\n     * Dispatches an event and calls all listeners listening for events\n     * of this type. The event parameter can either be a string or an\n     * Object with a `type` property.\n     *\n     * @param {import(\"./Event.js\").default|string} event Event object.\n     * @return {boolean|undefined} `false` if anyone called preventDefault on the\n     *     event object or if any of the listeners returned false.\n     * @api\n     */\n    Target.prototype.dispatchEvent = function (event) {\n        /** @type {import(\"./Event.js\").default|Event} */\n        var evt = typeof event === 'string' ? new Event(event) : event;\n        var type = evt.type;\n        if (!evt.target) {\n            evt.target = this.eventTarget_ || this;\n        }\n        var listeners = this.listeners_ && this.listeners_[type];\n        var propagate;\n        if (listeners) {\n            var dispatching = this.dispatching_ || (this.dispatching_ = {});\n            var pendingRemovals = this.pendingRemovals_ || (this.pendingRemovals_ = {});\n            if (!(type in dispatching)) {\n                dispatching[type] = 0;\n                pendingRemovals[type] = 0;\n            }\n            ++dispatching[type];\n            for (var i = 0, ii = listeners.length; i < ii; ++i) {\n                if ('handleEvent' in listeners[i]) {\n                    propagate = /** @type {import(\"../events.js\").ListenerObject} */ (listeners[i]).handleEvent(evt);\n                }\n                else {\n                    propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (listeners[i]).call(this, evt);\n                }\n                if (propagate === false || evt.propagationStopped) {\n                    propagate = false;\n                    break;\n                }\n            }\n            --dispatching[type];\n            if (dispatching[type] === 0) {\n                var pr = pendingRemovals[type];\n                delete pendingRemovals[type];\n                while (pr--) {\n                    this.removeEventListener(type, VOID);\n                }\n                delete dispatching[type];\n            }\n            return propagate;\n        }\n    };\n    /**\n     * Clean up.\n     */\n    Target.prototype.disposeInternal = function () {\n        this.listeners_ && clear(this.listeners_);\n    };\n    /**\n     * Get the listeners for a specified event type. Listeners are returned in the\n     * order that they will be called in.\n     *\n     * @param {string} type Type.\n     * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n     */\n    Target.prototype.getListeners = function (type) {\n        return (this.listeners_ && this.listeners_[type]) || undefined;\n    };\n    /**\n     * @param {string=} opt_type Type. If not provided,\n     *     `true` will be returned if this event target has any listeners.\n     * @return {boolean} Has listeners.\n     */\n    Target.prototype.hasListener = function (opt_type) {\n        if (!this.listeners_) {\n            return false;\n        }\n        return opt_type\n            ? opt_type in this.listeners_\n            : Object.keys(this.listeners_).length > 0;\n    };\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../events.js\").Listener} listener Listener.\n     */\n    Target.prototype.removeEventListener = function (type, listener) {\n        var listeners = this.listeners_ && this.listeners_[type];\n        if (listeners) {\n            var index = listeners.indexOf(listener);\n            if (index !== -1) {\n                if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n                    // make listener a no-op, and remove later in #dispatchEvent()\n                    listeners[index] = VOID;\n                    ++this.pendingRemovals_[type];\n                }\n                else {\n                    listeners.splice(index, 1);\n                    if (listeners.length === 0) {\n                        delete this.listeners_[type];\n                    }\n                }\n            }\n        }\n    };\n    return Target;\n}(Disposable));\nexport default Target;\n//# sourceMappingURL=Target.js.map","/**\n * @module ol/events/EventType\n */\n/**\n * @enum {string}\n * @const\n */\nexport default {\n    /**\n     * Generic change event. Triggered when the revision counter is increased.\n     * @event module:ol/events/Event~BaseEvent#change\n     * @api\n     */\n    CHANGE: 'change',\n    /**\n     * Generic error event. Triggered when an error occurs.\n     * @event module:ol/events/Event~BaseEvent#error\n     * @api\n     */\n    ERROR: 'error',\n    BLUR: 'blur',\n    CLEAR: 'clear',\n    CONTEXTMENU: 'contextmenu',\n    CLICK: 'click',\n    DBLCLICK: 'dblclick',\n    DRAGENTER: 'dragenter',\n    DRAGOVER: 'dragover',\n    DROP: 'drop',\n    FOCUS: 'focus',\n    KEYDOWN: 'keydown',\n    KEYPRESS: 'keypress',\n    LOAD: 'load',\n    RESIZE: 'resize',\n    TOUCHMOVE: 'touchmove',\n    WHEEL: 'wheel',\n};\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/events\n */\nimport { clear } from './obj.js';\n/**\n * Key to use with {@link module:ol/Observable~Observable#unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener\n * @property {import(\"./events/Target.js\").EventTargetLike} target\n * @property {string} type\n * @api\n */\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent\n */\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events~unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean=} opt_once If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n    if (opt_this && opt_this !== target) {\n        listener = listener.bind(opt_this);\n    }\n    if (opt_once) {\n        var originalListener_1 = listener;\n        listener = function () {\n            target.removeEventListener(type, listener);\n            originalListener_1.apply(this, arguments);\n        };\n    }\n    var eventsKey = {\n        target: target,\n        type: type,\n        listener: listener,\n    };\n    target.addEventListener(type, listener);\n    return eventsKey;\n}\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events~unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events~listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n    return listen(target, type, listener, opt_this, true);\n}\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events~listen} or {@link module:ol/events~listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n    if (key && key.target) {\n        key.target.removeEventListener(key.type, key.listener);\n        clear(key);\n    }\n}\n//# sourceMappingURL=events.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport { listen, listenOnce, unlistenByKey } from './events.js';\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nvar Observable = /** @class */ (function (_super) {\n    __extends(Observable, _super);\n    function Observable() {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.revision_ = 0;\n        return _this;\n    }\n    /**\n     * Increases the revision counter and dispatches a 'change' event.\n     * @api\n     */\n    Observable.prototype.changed = function () {\n        ++this.revision_;\n        this.dispatchEvent(EventType.CHANGE);\n    };\n    /**\n     * Get the version number for this object.  Each time the object is modified,\n     * its version number will be incremented.\n     * @return {number} Revision.\n     * @api\n     */\n    Observable.prototype.getRevision = function () {\n        return this.revision_;\n    };\n    /**\n     * Listen for a certain type of event.\n     * @param {string|Array<string>} type The event type or array of event types.\n     * @param {function(?): ?} listener The listener function.\n     * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n     *     called with an array of event types as the first argument, the return\n     *     will be an array of keys.\n     * @api\n     */\n    Observable.prototype.on = function (type, listener) {\n        if (Array.isArray(type)) {\n            var len = type.length;\n            var keys = new Array(len);\n            for (var i = 0; i < len; ++i) {\n                keys[i] = listen(this, type[i], listener);\n            }\n            return keys;\n        }\n        else {\n            return listen(this, /** @type {string} */ (type), listener);\n        }\n    };\n    /**\n     * Listen once for a certain type of event.\n     * @param {string|Array<string>} type The event type or array of event types.\n     * @param {function(?): ?} listener The listener function.\n     * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n     *     called with an array of event types as the first argument, the return\n     *     will be an array of keys.\n     * @api\n     */\n    Observable.prototype.once = function (type, listener) {\n        var key;\n        if (Array.isArray(type)) {\n            var len = type.length;\n            key = new Array(len);\n            for (var i = 0; i < len; ++i) {\n                key[i] = listenOnce(this, type[i], listener);\n            }\n        }\n        else {\n            key = listenOnce(this, /** @type {string} */ (type), listener);\n        }\n        /** @type {Object} */ (listener).ol_key = key;\n        return key;\n    };\n    /**\n     * Unlisten for a certain type of event.\n     * @param {string|Array<string>} type The event type or array of event types.\n     * @param {function(?): ?} listener The listener function.\n     * @api\n     */\n    Observable.prototype.un = function (type, listener) {\n        var key = /** @type {Object} */ (listener).ol_key;\n        if (key) {\n            unByKey(key);\n        }\n        else if (Array.isArray(type)) {\n            for (var i = 0, ii = type.length; i < ii; ++i) {\n                this.removeEventListener(type[i], listener);\n            }\n        }\n        else {\n            this.removeEventListener(type, listener);\n        }\n    };\n    return Observable;\n}(EventTarget));\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n    if (Array.isArray(key)) {\n        for (var i = 0, ii = key.length; i < ii; ++i) {\n            unlistenByKey(key[i]);\n        }\n    }\n    else {\n        unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n    }\n}\nexport default Observable;\n//# sourceMappingURL=Observable.js.map","/**\n * @module ol/util\n */\n/**\n * @return {?} Any return.\n */\nexport function abstract() {\n    return /** @type {?} */ ((function () {\n        throw new Error('Unimplemented abstract method.');\n    })());\n}\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nvar uidCounter_ = 0;\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n    return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport var VERSION = '6.5.0';\n//# sourceMappingURL=util.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport { assign, isEmpty } from './obj.js';\nimport { getUid } from './util.js';\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nvar ObjectEvent = /** @class */ (function (_super) {\n    __extends(ObjectEvent, _super);\n    /**\n     * @param {string} type The event type.\n     * @param {string} key The property name.\n     * @param {*} oldValue The old value for `key`.\n     */\n    function ObjectEvent(type, key, oldValue) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The name of the property whose value is changing.\n         * @type {string}\n         * @api\n         */\n        _this.key = key;\n        /**\n         * The old value. To get the new value use `e.target.get(e.key)` where\n         * `e` is the event object.\n         * @type {*}\n         * @api\n         */\n        _this.oldValue = oldValue;\n        return _this;\n    }\n    return ObjectEvent;\n}(Event));\nexport { ObjectEvent };\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nvar BaseObject = /** @class */ (function (_super) {\n    __extends(BaseObject, _super);\n    /**\n     * @param {Object<string, *>=} opt_values An object with key-value pairs.\n     */\n    function BaseObject(opt_values) {\n        var _this = _super.call(this) || this;\n        // Call {@link module:ol/util~getUid} to ensure that the order of objects' ids is\n        // the same as the order in which they were created.  This also helps to\n        // ensure that object properties are always added in the same order, which\n        // helps many JavaScript engines generate faster code.\n        getUid(_this);\n        /**\n         * @private\n         * @type {Object<string, *>}\n         */\n        _this.values_ = null;\n        if (opt_values !== undefined) {\n            _this.setProperties(opt_values);\n        }\n        return _this;\n    }\n    /**\n     * Gets a value.\n     * @param {string} key Key name.\n     * @return {*} Value.\n     * @api\n     */\n    BaseObject.prototype.get = function (key) {\n        var value;\n        if (this.values_ && this.values_.hasOwnProperty(key)) {\n            value = this.values_[key];\n        }\n        return value;\n    };\n    /**\n     * Get a list of object property names.\n     * @return {Array<string>} List of property names.\n     * @api\n     */\n    BaseObject.prototype.getKeys = function () {\n        return (this.values_ && Object.keys(this.values_)) || [];\n    };\n    /**\n     * Get an object of all property names and values.\n     * @return {Object<string, *>} Object.\n     * @api\n     */\n    BaseObject.prototype.getProperties = function () {\n        return (this.values_ && assign({}, this.values_)) || {};\n    };\n    /**\n     * @return {boolean} The object has properties.\n     */\n    BaseObject.prototype.hasProperties = function () {\n        return !!this.values_;\n    };\n    /**\n     * @param {string} key Key name.\n     * @param {*} oldValue Old value.\n     */\n    BaseObject.prototype.notify = function (key, oldValue) {\n        var eventType;\n        eventType = getChangeEventType(key);\n        this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n        eventType = ObjectEventType.PROPERTYCHANGE;\n        this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    };\n    /**\n     * Sets a value.\n     * @param {string} key Key name.\n     * @param {*} value Value.\n     * @param {boolean=} opt_silent Update without triggering an event.\n     * @api\n     */\n    BaseObject.prototype.set = function (key, value, opt_silent) {\n        var values = this.values_ || (this.values_ = {});\n        if (opt_silent) {\n            values[key] = value;\n        }\n        else {\n            var oldValue = values[key];\n            values[key] = value;\n            if (oldValue !== value) {\n                this.notify(key, oldValue);\n            }\n        }\n    };\n    /**\n     * Sets a collection of key-value pairs.  Note that this changes any existing\n     * properties and adds new ones (it does not remove any existing properties).\n     * @param {Object<string, *>} values Values.\n     * @param {boolean=} opt_silent Update without triggering an event.\n     * @api\n     */\n    BaseObject.prototype.setProperties = function (values, opt_silent) {\n        for (var key in values) {\n            this.set(key, values[key], opt_silent);\n        }\n    };\n    /**\n     * Apply any properties from another object without triggering events.\n     * @param {BaseObject} source The source object.\n     * @protected\n     */\n    BaseObject.prototype.applyProperties = function (source) {\n        if (!source.values_) {\n            return;\n        }\n        assign(this.values_ || (this.values_ = {}), source.values_);\n    };\n    /**\n     * Unsets a property.\n     * @param {string} key Key name.\n     * @param {boolean=} opt_silent Unset without triggering an event.\n     * @api\n     */\n    BaseObject.prototype.unset = function (key, opt_silent) {\n        if (this.values_ && key in this.values_) {\n            var oldValue = this.values_[key];\n            delete this.values_[key];\n            if (isEmpty(this.values_)) {\n                this.values_ = null;\n            }\n            if (!opt_silent) {\n                this.notify(key, oldValue);\n            }\n        }\n    };\n    return BaseObject;\n}(Observable));\n/**\n * @type {Object<string, string>}\n */\nvar changeEventTypeCache = {};\n/**\n * @param {string} key Key name.\n * @return {string} Change name.\n */\nexport function getChangeEventType(key) {\n    return changeEventTypeCache.hasOwnProperty(key)\n        ? changeEventTypeCache[key]\n        : (changeEventTypeCache[key] = 'change:' + key);\n}\nexport default BaseObject;\n//# sourceMappingURL=Object.js.map","/**\n * @module ol/layer/Property\n */\n/**\n * @enum {string}\n */\nexport default {\n    OPACITY: 'opacity',\n    VISIBLE: 'visible',\n    EXTENT: 'extent',\n    Z_INDEX: 'zIndex',\n    MAX_RESOLUTION: 'maxResolution',\n    MIN_RESOLUTION: 'minResolution',\n    MAX_ZOOM: 'maxZoom',\n    MIN_ZOOM: 'minZoom',\n    SOURCE: 'source',\n};\n//# sourceMappingURL=Property.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/AssertionError\n */\nimport { VERSION } from './util.js';\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nvar AssertionError = /** @class */ (function (_super) {\n    __extends(AssertionError, _super);\n    /**\n     * @param {number} code Error code.\n     */\n    function AssertionError(code) {\n        var _this = this;\n        var path = VERSION === 'latest' ? VERSION : 'v' + VERSION.split('-')[0];\n        var message = 'Assertion failed. See https://openlayers.org/en/' +\n            path +\n            '/doc/errors/#' +\n            code +\n            ' for details.';\n        _this = _super.call(this, message) || this;\n        /**\n         * Error code. The meaning of the code can be found on\n         * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n         * the version found in the OpenLayers script's header comment if a version\n         * other than the latest is used).\n         * @type {number}\n         * @api\n         */\n        _this.code = code;\n        /**\n         * @type {string}\n         */\n        _this.name = 'AssertionError';\n        // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n        _this.message = message;\n        return _this;\n    }\n    return AssertionError;\n}(Error));\nexport default AssertionError;\n//# sourceMappingURL=AssertionError.js.map","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n    if (!assertion) {\n        throw new AssertionError(errorCode);\n    }\n}\n//# sourceMappingURL=asserts.js.map","/**\n * @module ol/math\n */\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n    return Math.min(Math.max(value, min), max);\n}\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport var cosh = (function () {\n    // Wrapped in a iife, to save the overhead of checking for the native\n    // implementation on every invocation.\n    var cosh;\n    if ('cosh' in Math) {\n        // The environment supports the native Math.cosh function, use it…\n        cosh = Math.cosh;\n    }\n    else {\n        // … else, use the reference implementation of MDN:\n        cosh = function (x) {\n            var y = /** @type {Math} */ (Math).exp(x);\n            return (y + 1 / y) / 2;\n        };\n    }\n    return cosh;\n})();\n/**\n * Return the base 2 logarithm of a given number. The method will use the\n * native `Math.log2` function if it is available, otherwise the base 2\n * logarithm will be calculated via the reference implementation of the\n * Mozilla developer network.\n *\n * @param {number} x X.\n * @return {number} Base 2 logarithm of x.\n */\nexport var log2 = (function () {\n    // Wrapped in a iife, to save the overhead of checking for the native\n    // implementation on every invocation.\n    var log2;\n    if ('log2' in Math) {\n        // The environment supports the native Math.log2 function, use it…\n        log2 = Math.log2;\n    }\n    else {\n        // … else, use the reference implementation of MDN:\n        log2 = function (x) {\n            return Math.log(x) * Math.LOG2E;\n        };\n    }\n    return log2;\n})();\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n    var dx = x2 - x1;\n    var dy = y2 - y1;\n    if (dx !== 0 || dy !== 0) {\n        var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n        if (t > 1) {\n            x1 = x2;\n            y1 = y2;\n        }\n        else if (t > 0) {\n            x1 += dx * t;\n            y1 += dy * t;\n        }\n    }\n    return squaredDistance(x, y, x1, y1);\n}\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n    var dx = x2 - x1;\n    var dy = y2 - y1;\n    return dx * dx + dy * dy;\n}\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n    var n = mat.length;\n    for (var i = 0; i < n; i++) {\n        // Find max in the i-th column (ignoring i - 1 first rows)\n        var maxRow = i;\n        var maxEl = Math.abs(mat[i][i]);\n        for (var r = i + 1; r < n; r++) {\n            var absValue = Math.abs(mat[r][i]);\n            if (absValue > maxEl) {\n                maxEl = absValue;\n                maxRow = r;\n            }\n        }\n        if (maxEl === 0) {\n            return null; // matrix is singular\n        }\n        // Swap max row with i-th (current) row\n        var tmp = mat[maxRow];\n        mat[maxRow] = mat[i];\n        mat[i] = tmp;\n        // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n        for (var j = i + 1; j < n; j++) {\n            var coef = -mat[j][i] / mat[i][i];\n            for (var k = i; k < n + 1; k++) {\n                if (i == k) {\n                    mat[j][k] = 0;\n                }\n                else {\n                    mat[j][k] += coef * mat[i][k];\n                }\n            }\n        }\n    }\n    // Solve Ax=b for upper triangular matrix A (mat)\n    var x = new Array(n);\n    for (var l = n - 1; l >= 0; l--) {\n        x[l] = mat[l][n] / mat[l][l];\n        for (var m = l - 1; m >= 0; m--) {\n            mat[m][n] -= mat[m][l] * x[l];\n        }\n    }\n    return x;\n}\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n    return (angleInRadians * 180) / Math.PI;\n}\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n    return (angleInDegrees * Math.PI) / 180;\n}\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n    var r = a % b;\n    return r * b < 0 ? r + b : r;\n}\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n    return a + x * (b - a);\n}\n//# sourceMappingURL=math.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport { abstract } from '../util.js';\nimport { assert } from '../asserts.js';\nimport { assign } from '../obj.js';\nimport { clamp } from '../math.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nvar BaseLayer = /** @class */ (function (_super) {\n    __extends(BaseLayer, _super);\n    /**\n     * @param {Options} options Layer options.\n     */\n    function BaseLayer(options) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {Object<string, *>}\n         */\n        var properties = assign({}, options);\n        properties[LayerProperty.OPACITY] =\n            options.opacity !== undefined ? options.opacity : 1;\n        assert(typeof properties[LayerProperty.OPACITY] === 'number', 64); // Layer opacity must be a number\n        properties[LayerProperty.VISIBLE] =\n            options.visible !== undefined ? options.visible : true;\n        properties[LayerProperty.Z_INDEX] = options.zIndex;\n        properties[LayerProperty.MAX_RESOLUTION] =\n            options.maxResolution !== undefined ? options.maxResolution : Infinity;\n        properties[LayerProperty.MIN_RESOLUTION] =\n            options.minResolution !== undefined ? options.minResolution : 0;\n        properties[LayerProperty.MIN_ZOOM] =\n            options.minZoom !== undefined ? options.minZoom : -Infinity;\n        properties[LayerProperty.MAX_ZOOM] =\n            options.maxZoom !== undefined ? options.maxZoom : Infinity;\n        /**\n         * @type {string}\n         * @private\n         */\n        _this.className_ =\n            properties.className !== undefined ? options.className : 'ol-layer';\n        delete properties.className;\n        _this.setProperties(properties);\n        /**\n         * @type {import(\"./Layer.js\").State}\n         * @private\n         */\n        _this.state_ = null;\n        return _this;\n    }\n    /**\n     * @return {string} CSS class name.\n     */\n    BaseLayer.prototype.getClassName = function () {\n        return this.className_;\n    };\n    /**\n     * This method is not meant to be called by layers or layer renderers because the state\n     * is incorrect if the layer is included in a layer group.\n     *\n     * @param {boolean=} opt_managed Layer is managed.\n     * @return {import(\"./Layer.js\").State} Layer state.\n     */\n    BaseLayer.prototype.getLayerState = function (opt_managed) {\n        /** @type {import(\"./Layer.js\").State} */\n        var state = this.state_ ||\n            /** @type {?} */ ({\n                layer: this,\n                managed: opt_managed === undefined ? true : opt_managed,\n            });\n        var zIndex = this.getZIndex();\n        state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n        state.sourceState = this.getSourceState();\n        state.visible = this.getVisible();\n        state.extent = this.getExtent();\n        state.zIndex =\n            zIndex !== undefined ? zIndex : state.managed === false ? Infinity : 0;\n        state.maxResolution = this.getMaxResolution();\n        state.minResolution = Math.max(this.getMinResolution(), 0);\n        state.minZoom = this.getMinZoom();\n        state.maxZoom = this.getMaxZoom();\n        this.state_ = state;\n        return state;\n    };\n    /**\n     * @abstract\n     * @param {Array<import(\"./Layer.js\").default>=} opt_array Array of layers (to be\n     *     modified in place).\n     * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n     */\n    BaseLayer.prototype.getLayersArray = function (opt_array) {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @param {Array<import(\"./Layer.js\").State>=} opt_states Optional list of layer\n     *     states (to be modified in place).\n     * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n     */\n    BaseLayer.prototype.getLayerStatesArray = function (opt_states) {\n        return abstract();\n    };\n    /**\n     * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n     * will be visible regardless of extent.\n     * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getExtent = function () {\n        return /** @type {import(\"../extent.js\").Extent|undefined} */ (this.get(LayerProperty.EXTENT));\n    };\n    /**\n     * Return the maximum resolution of the layer.\n     * @return {number} The maximum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getMaxResolution = function () {\n        return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n    };\n    /**\n     * Return the minimum resolution of the layer.\n     * @return {number} The minimum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getMinResolution = function () {\n        return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n    };\n    /**\n     * Return the minimum zoom level of the layer.\n     * @return {number} The minimum zoom level of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getMinZoom = function () {\n        return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n    };\n    /**\n     * Return the maximum zoom level of the layer.\n     * @return {number} The maximum zoom level of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getMaxZoom = function () {\n        return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n    };\n    /**\n     * Return the opacity of the layer (between 0 and 1).\n     * @return {number} The opacity of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getOpacity = function () {\n        return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n    };\n    /**\n     * @abstract\n     * @return {import(\"../source/State.js\").default} Source state.\n     */\n    BaseLayer.prototype.getSourceState = function () {\n        return abstract();\n    };\n    /**\n     * Return the visibility of the layer (`true` or `false`).\n     * @return {boolean} The visibility of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getVisible = function () {\n        return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n    };\n    /**\n     * Return the Z-index of the layer, which is used to order layers before\n     * rendering. The default Z-index is 0.\n     * @return {number} The Z-index of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getZIndex = function () {\n        return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n    };\n    /**\n     * Set the extent at which the layer is visible.  If `undefined`, the layer\n     * will be visible at all extents.\n     * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setExtent = function (extent) {\n        this.set(LayerProperty.EXTENT, extent);\n    };\n    /**\n     * Set the maximum resolution at which the layer is visible.\n     * @param {number} maxResolution The maximum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setMaxResolution = function (maxResolution) {\n        this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n    };\n    /**\n     * Set the minimum resolution at which the layer is visible.\n     * @param {number} minResolution The minimum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setMinResolution = function (minResolution) {\n        this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n    };\n    /**\n     * Set the maximum zoom (exclusive) at which the layer is visible.\n     * Note that the zoom levels for layer visibility are based on the\n     * view zoom level, which may be different from a tile source zoom level.\n     * @param {number} maxZoom The maximum zoom of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setMaxZoom = function (maxZoom) {\n        this.set(LayerProperty.MAX_ZOOM, maxZoom);\n    };\n    /**\n     * Set the minimum zoom (inclusive) at which the layer is visible.\n     * Note that the zoom levels for layer visibility are based on the\n     * view zoom level, which may be different from a tile source zoom level.\n     * @param {number} minZoom The minimum zoom of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setMinZoom = function (minZoom) {\n        this.set(LayerProperty.MIN_ZOOM, minZoom);\n    };\n    /**\n     * Set the opacity of the layer, allowed values range from 0 to 1.\n     * @param {number} opacity The opacity of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setOpacity = function (opacity) {\n        assert(typeof opacity === 'number', 64); // Layer opacity must be a number\n        this.set(LayerProperty.OPACITY, opacity);\n    };\n    /**\n     * Set the visibility of the layer (`true` or `false`).\n     * @param {boolean} visible The visibility of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setVisible = function (visible) {\n        this.set(LayerProperty.VISIBLE, visible);\n    };\n    /**\n     * Set Z-index of the layer, which is used to order layers before rendering.\n     * The default Z-index is 0.\n     * @param {number} zindex The z-index of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setZIndex = function (zindex) {\n        this.set(LayerProperty.Z_INDEX, zindex);\n    };\n    /**\n     * Clean up.\n     */\n    BaseLayer.prototype.disposeInternal = function () {\n        if (this.state_) {\n            this.state_.layer = null;\n            this.state_ = null;\n        }\n        _super.prototype.disposeInternal.call(this);\n    };\n    return BaseLayer;\n}(BaseObject));\nexport default BaseLayer;\n//# sourceMappingURL=Base.js.map","/**\n * @module ol/render/EventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered before a layer is rendered.\n     * @event module:ol/render/Event~RenderEvent#prerender\n     * @api\n     */\n    PRERENDER: 'prerender',\n    /**\n     * Triggered after a layer is rendered.\n     * @event module:ol/render/Event~RenderEvent#postrender\n     * @api\n     */\n    POSTRENDER: 'postrender',\n    /**\n     * Triggered before layers are rendered.\n     * The event object will not have a `context` set.\n     * @event module:ol/render/Event~RenderEvent#precompose\n     * @api\n     */\n    PRECOMPOSE: 'precompose',\n    /**\n     * Triggered after all layers are rendered.\n     * The event object will not have a `context` set.\n     * @event module:ol/render/Event~RenderEvent#postcompose\n     * @api\n     */\n    POSTCOMPOSE: 'postcompose',\n    /**\n     * Triggered when rendering is complete, i.e. all sources and tiles have\n     * finished loading for the current viewport, and all tiles are faded in.\n     * The event object will not have a `context` set.\n     * @event module:ol/render/Event~RenderEvent#rendercomplete\n     * @api\n     */\n    RENDERCOMPLETE: 'rendercomplete',\n};\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/source/State\n */\n/**\n * @enum {string}\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\nexport default {\n    UNDEFINED: 'undefined',\n    LOADING: 'loading',\n    READY: 'ready',\n    ERROR: 'error',\n};\n//# sourceMappingURL=State.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport { assert } from '../asserts.js';\nimport { assign } from '../obj.js';\nimport { getChangeEventType } from '../Object.js';\nimport { listen, unlistenByKey } from '../events.js';\n/**\n * @typedef {function(import(\"../PluggableMap.js\").FrameState):HTMLElement} RenderFunction\n */\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../source/Source.js\").default} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../PluggableMap.js\").default} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n */\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {import(\"../source/State.js\").default} sourceState\n * @property {boolean} visible\n * @property {boolean} managed\n * @property {import(\"../extent.js\").Extent} [extent]\n * @property {number} zIndex\n * @property {number} maxResolution\n * @property {number} minResolution\n * @property {number} minZoom\n * @property {number} maxZoom\n */\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is be added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with {@link module:ol/Map#addLayer}. Components\n * like {@link module:ol/interaction/Select~Select} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * Please note that for performance reasons several layers might get rendered to\n * the same HTML element, which will cause {@link module:ol/Map~Map#forEachLayerAtPixel} to\n * give false positives. To avoid this, apply different `className` properties to the\n * layers at creation time.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n *\n * @template {import(\"../source/Source.js\").default} SourceType\n * @api\n */\nvar Layer = /** @class */ (function (_super) {\n    __extends(Layer, _super);\n    /**\n     * @param {Options} options Layer options.\n     */\n    function Layer(options) {\n        var _this = this;\n        var baseOptions = assign({}, options);\n        delete baseOptions.source;\n        _this = _super.call(this, baseOptions) || this;\n        /**\n         * @private\n         * @type {?import(\"../events.js\").EventsKey}\n         */\n        _this.mapPrecomposeKey_ = null;\n        /**\n         * @private\n         * @type {?import(\"../events.js\").EventsKey}\n         */\n        _this.mapRenderKey_ = null;\n        /**\n         * @private\n         * @type {?import(\"../events.js\").EventsKey}\n         */\n        _this.sourceChangeKey_ = null;\n        /**\n         * @private\n         * @type {import(\"../renderer/Layer.js\").default}\n         */\n        _this.renderer_ = null;\n        // Overwrite default render method with a custom one\n        if (options.render) {\n            _this.render = options.render;\n        }\n        if (options.map) {\n            _this.setMap(options.map);\n        }\n        _this.addEventListener(getChangeEventType(LayerProperty.SOURCE), _this.handleSourcePropertyChange_);\n        var source = options.source\n            ? /** @type {SourceType} */ (options.source)\n            : null;\n        _this.setSource(source);\n        return _this;\n    }\n    /**\n     * @param {Array<import(\"./Layer.js\").default>=} opt_array Array of layers (to be modified in place).\n     * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n     */\n    Layer.prototype.getLayersArray = function (opt_array) {\n        var array = opt_array ? opt_array : [];\n        array.push(this);\n        return array;\n    };\n    /**\n     * @param {Array<import(\"./Layer.js\").State>=} opt_states Optional list of layer states (to be modified in place).\n     * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n     */\n    Layer.prototype.getLayerStatesArray = function (opt_states) {\n        var states = opt_states ? opt_states : [];\n        states.push(this.getLayerState());\n        return states;\n    };\n    /**\n     * Get the layer source.\n     * @return {SourceType} The layer source (or `null` if not yet set).\n     * @observable\n     * @api\n     */\n    Layer.prototype.getSource = function () {\n        return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n    };\n    /**\n     * @return {import(\"../source/State.js\").default} Source state.\n     */\n    Layer.prototype.getSourceState = function () {\n        var source = this.getSource();\n        return !source ? SourceState.UNDEFINED : source.getState();\n    };\n    /**\n     * @private\n     */\n    Layer.prototype.handleSourceChange_ = function () {\n        this.changed();\n    };\n    /**\n     * @private\n     */\n    Layer.prototype.handleSourcePropertyChange_ = function () {\n        if (this.sourceChangeKey_) {\n            unlistenByKey(this.sourceChangeKey_);\n            this.sourceChangeKey_ = null;\n        }\n        var source = this.getSource();\n        if (source) {\n            this.sourceChangeKey_ = listen(source, EventType.CHANGE, this.handleSourceChange_, this);\n        }\n        this.changed();\n    };\n    /**\n     * @param {import(\"../pixel\").Pixel} pixel Pixel.\n     * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n     * an array of features.\n     */\n    Layer.prototype.getFeatures = function (pixel) {\n        return this.renderer_.getFeatures(pixel);\n    };\n    /**\n     * In charge to manage the rendering of the layer. One layer type is\n     * bounded with one layer renderer.\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {HTMLElement} target Target which the renderer may (but need not) use\n     * for rendering its content.\n     * @return {HTMLElement} The rendered element.\n     */\n    Layer.prototype.render = function (frameState, target) {\n        var layerRenderer = this.getRenderer();\n        if (layerRenderer.prepareFrame(frameState)) {\n            return layerRenderer.renderFrame(frameState, target);\n        }\n    };\n    /**\n     * Sets the layer to be rendered on top of other layers on a map. The map will\n     * not manage this layer in its layers collection, and the callback in\n     * {@link module:ol/Map#forEachLayerAtPixel} will receive `null` as layer. This\n     * is useful for temporary layers. To remove an unmanaged layer from the map,\n     * use `#setMap(null)`.\n     *\n     * To add the layer to a map and have it managed by the map, use\n     * {@link module:ol/Map#addLayer} instead.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     * @api\n     */\n    Layer.prototype.setMap = function (map) {\n        if (this.mapPrecomposeKey_) {\n            unlistenByKey(this.mapPrecomposeKey_);\n            this.mapPrecomposeKey_ = null;\n        }\n        if (!map) {\n            this.changed();\n        }\n        if (this.mapRenderKey_) {\n            unlistenByKey(this.mapRenderKey_);\n            this.mapRenderKey_ = null;\n        }\n        if (map) {\n            this.mapPrecomposeKey_ = listen(map, RenderEventType.PRECOMPOSE, function (evt) {\n                var renderEvent = /** @type {import(\"../render/Event.js\").default} */ (evt);\n                var layerStatesArray = renderEvent.frameState.layerStatesArray;\n                var layerState = this.getLayerState(false);\n                // A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.\n                assert(!layerStatesArray.some(function (arrayLayerState) {\n                    return arrayLayerState.layer === layerState.layer;\n                }), 67);\n                layerStatesArray.push(layerState);\n            }, this);\n            this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n            this.changed();\n        }\n    };\n    /**\n     * Set the layer source.\n     * @param {SourceType} source The layer source.\n     * @observable\n     * @api\n     */\n    Layer.prototype.setSource = function (source) {\n        this.set(LayerProperty.SOURCE, source);\n    };\n    /**\n     * Get the renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} The layer renderer.\n     */\n    Layer.prototype.getRenderer = function () {\n        if (!this.renderer_) {\n            this.renderer_ = this.createRenderer();\n        }\n        return this.renderer_;\n    };\n    /**\n     * @return {boolean} The layer has a renderer.\n     */\n    Layer.prototype.hasRenderer = function () {\n        return !!this.renderer_;\n    };\n    /**\n     * Create a renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n     * @protected\n     */\n    Layer.prototype.createRenderer = function () {\n        return null;\n    };\n    /**\n     * Clean up.\n     */\n    Layer.prototype.disposeInternal = function () {\n        this.setSource(null);\n        _super.prototype.disposeInternal.call(this);\n    };\n    return Layer;\n}(BaseLayer));\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n    if (!layerState.visible) {\n        return false;\n    }\n    var resolution = viewState.resolution;\n    if (resolution < layerState.minResolution ||\n        resolution >= layerState.maxResolution) {\n        return false;\n    }\n    var zoom = viewState.zoom;\n    return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\nexport default Layer;\n//# sourceMappingURL=Layer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/BaseImage\n */\nimport Layer from './Layer.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {import(\"../source/Image.js\").default} [source] Source for this layer.\n */\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @extends {Layer<import(\"../source/Image.js\").default>}\n * @api\n */\nvar BaseImageLayer = /** @class */ (function (_super) {\n    __extends(BaseImageLayer, _super);\n    /**\n     * @param {Options=} opt_options Layer options.\n     */\n    function BaseImageLayer(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, options) || this;\n        return _this;\n    }\n    return BaseImageLayer;\n}(Layer));\nexport default BaseImageLayer;\n//# sourceMappingURL=BaseImage.js.map","/**\n * @module ol/ImageState\n */\n/**\n * @enum {number}\n */\nexport default {\n    IDLE: 0,\n    LOADING: 1,\n    LOADED: 2,\n    ERROR: 3,\n    EMPTY: 4,\n};\n//# sourceMappingURL=ImageState.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport SourceState from '../source/State.js';\nimport { abstract } from '../util.js';\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nvar LayerRenderer = /** @class */ (function (_super) {\n    __extends(LayerRenderer, _super);\n    /**\n     * @param {LayerType} layer Layer.\n     */\n    function LayerRenderer(layer) {\n        var _this = _super.call(this) || this;\n        /** @private */\n        _this.boundHandleImageChange_ = _this.handleImageChange_.bind(_this);\n        /**\n         * @protected\n         * @type {LayerType}\n         */\n        _this.layer_ = layer;\n        /**\n         * @type {import(\"../render/canvas/ExecutorGroup\").default}\n         */\n        _this.declutterExecutorGroup = null;\n        return _this;\n    }\n    /**\n     * Asynchronous layer level hit detection.\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n     * an array of features.\n     */\n    LayerRenderer.prototype.getFeatures = function (pixel) {\n        return abstract();\n    };\n    /**\n     * Determine whether render should be called.\n     * @abstract\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {boolean} Layer is ready to be rendered.\n     */\n    LayerRenderer.prototype.prepareFrame = function (frameState) {\n        return abstract();\n    };\n    /**\n     * Render the layer.\n     * @abstract\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {HTMLElement} target Target that may be used to render content to.\n     * @return {HTMLElement} The rendered element.\n     */\n    LayerRenderer.prototype.renderFrame = function (frameState, target) {\n        return abstract();\n    };\n    /**\n     * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n     * @param {number} zoom Zoom level.\n     * @param {import(\"../Tile.js\").default} tile Tile.\n     * @return {boolean|void} If `false`, the tile will not be considered loaded.\n     */\n    LayerRenderer.prototype.loadedTileCallback = function (tiles, zoom, tile) {\n        if (!tiles[zoom]) {\n            tiles[zoom] = {};\n        }\n        tiles[zoom][tile.tileCoord.toString()] = tile;\n        return undefined;\n    };\n    /**\n     * Create a function that adds loaded tiles to the tile lookup.\n     * @param {import(\"../source/Tile.js\").default} source Tile source.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n     * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n     * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n     *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n     * @protected\n     */\n    LayerRenderer.prototype.createLoadedTileFinder = function (source, projection, tiles) {\n        return (\n        /**\n         * @param {number} zoom Zoom level.\n         * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n         * @return {boolean} The tile range is fully loaded.\n         * @this {LayerRenderer}\n         */\n        function (zoom, tileRange) {\n            var callback = this.loadedTileCallback.bind(this, tiles, zoom);\n            return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n        }.bind(this));\n    };\n    /**\n     * @abstract\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n     * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    LayerRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, callback, matches) {\n        return undefined;\n    };\n    /**\n     * @abstract\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n     *    location, null will be returned.  If there is data, but pixel values cannot be\n     *    returned, and empty array will be returned.\n     */\n    LayerRenderer.prototype.getDataAtPixel = function (pixel, frameState, hitTolerance) {\n        return abstract();\n    };\n    /**\n     * @return {LayerType} Layer.\n     */\n    LayerRenderer.prototype.getLayer = function () {\n        return this.layer_;\n    };\n    /**\n     * Perform action necessary to get the layer rendered after new fonts have loaded\n     * @abstract\n     */\n    LayerRenderer.prototype.handleFontsChanged = function () { };\n    /**\n     * Handle changes in image state.\n     * @param {import(\"../events/Event.js\").default} event Image change event.\n     * @private\n     */\n    LayerRenderer.prototype.handleImageChange_ = function (event) {\n        var image = /** @type {import(\"../Image.js\").default} */ (event.target);\n        if (image.getState() === ImageState.LOADED) {\n            this.renderIfReadyAndVisible();\n        }\n    };\n    /**\n     * Load the image if not already loaded, and register the image change\n     * listener if needed.\n     * @param {import(\"../ImageBase.js\").default} image Image.\n     * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n     * @protected\n     */\n    LayerRenderer.prototype.loadImage = function (image) {\n        var imageState = image.getState();\n        if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n            image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n        }\n        if (imageState == ImageState.IDLE) {\n            image.load();\n            imageState = image.getState();\n        }\n        return imageState == ImageState.LOADED;\n    };\n    /**\n     * @protected\n     */\n    LayerRenderer.prototype.renderIfReadyAndVisible = function () {\n        var layer = this.getLayer();\n        if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\n            layer.changed();\n        }\n    };\n    return LayerRenderer;\n}(Observable));\nexport default LayerRenderer;\n//# sourceMappingURL=Layer.js.map","/**\n * @module ol/render/Event\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Event from '../events/Event.js';\nvar RenderEvent = /** @class */ (function (_super) {\n    __extends(RenderEvent, _super);\n    /**\n     * @param {import(\"./EventType.js\").default} type Type.\n     * @param {import(\"../transform.js\").Transform=} opt_inversePixelTransform Transform for\n     *     CSS pixels to rendered pixels.\n     * @param {import(\"../PluggableMap.js\").FrameState=} opt_frameState Frame state.\n     * @param {?CanvasRenderingContext2D=} opt_context Context.\n     */\n    function RenderEvent(type, opt_inversePixelTransform, opt_frameState, opt_context) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n         * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n         * @type {import(\"../transform.js\").Transform|undefined}\n         * @api\n         */\n        _this.inversePixelTransform = opt_inversePixelTransform;\n        /**\n         * An object representing the current render frame state.\n         * @type {import(\"../PluggableMap.js\").FrameState|undefined}\n         * @api\n         */\n        _this.frameState = opt_frameState;\n        /**\n         * Canvas context. Not available when the event is dispatched by the map. Only available\n         * when a Canvas renderer is used, null otherwise.\n         * @type {CanvasRenderingContext2D|null|undefined}\n         * @api\n         */\n        _this.context = opt_context;\n        return _this;\n    }\n    return RenderEvent;\n}(Event));\nexport default RenderEvent;\n//# sourceMappingURL=Event.js.map","/**\n * @module ol/transform\n */\nimport { assert } from './asserts.js';\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n/**\n * @private\n * @type {Transform}\n */\nvar tmp_ = new Array(6);\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n    return [1, 0, 0, 1, 0, 0];\n}\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n    return set(transform, 1, 0, 0, 1, 0, 0);\n}\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n    var a1 = transform1[0];\n    var b1 = transform1[1];\n    var c1 = transform1[2];\n    var d1 = transform1[3];\n    var e1 = transform1[4];\n    var f1 = transform1[5];\n    var a2 = transform2[0];\n    var b2 = transform2[1];\n    var c2 = transform2[2];\n    var d2 = transform2[3];\n    var e2 = transform2[4];\n    var f2 = transform2[5];\n    transform1[0] = a1 * a2 + c1 * b2;\n    transform1[1] = b1 * a2 + d1 * b2;\n    transform1[2] = a1 * c2 + c1 * d2;\n    transform1[3] = b1 * c2 + d1 * d2;\n    transform1[4] = a1 * e2 + c1 * f2 + e1;\n    transform1[5] = b1 * e2 + d1 * f2 + f1;\n    return transform1;\n}\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n    transform[0] = a;\n    transform[1] = b;\n    transform[2] = c;\n    transform[3] = d;\n    transform[4] = e;\n    transform[5] = f;\n    return transform;\n}\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n    transform1[0] = transform2[0];\n    transform1[1] = transform2[1];\n    transform1[2] = transform2[2];\n    transform1[3] = transform2[3];\n    transform1[4] = transform2[4];\n    transform1[5] = transform2[5];\n    return transform1;\n}\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n    var x = coordinate[0];\n    var y = coordinate[1];\n    coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n    coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n    return coordinate;\n}\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n    var cos = Math.cos(angle);\n    var sin = Math.sin(angle);\n    return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n    return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n    return set(target, x, 0, 0, y, 0, 0);\n}\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n    return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n    var sin = Math.sin(angle);\n    var cos = Math.cos(angle);\n    transform[0] = sx * cos;\n    transform[1] = sy * sin;\n    transform[2] = -sx * sin;\n    transform[3] = sy * cos;\n    transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n    transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n    return transform;\n}\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` porperty of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n    return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n    return makeInverse(source, source);\n}\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n    var det = determinant(source);\n    assert(det !== 0, 32); // Transformation matrix cannot be inverted\n    var a = source[0];\n    var b = source[1];\n    var c = source[2];\n    var d = source[3];\n    var e = source[4];\n    var f = source[5];\n    target[0] = d / det;\n    target[1] = -b / det;\n    target[2] = -c / det;\n    target[3] = a / det;\n    target[4] = (c * f - d * e) / det;\n    target[5] = -(a * f - b * e) / det;\n    return target;\n}\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n    return mat[0] * mat[3] - mat[1] * mat[2];\n}\n/**\n * A string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n    return 'matrix(' + mat.join(', ') + ')';\n}\n//# sourceMappingURL=transform.js.map","/**\n * @module ol/extent/Corner\n */\n/**\n * Extent corner.\n * @enum {string}\n */\nexport default {\n    BOTTOM_LEFT: 'bottom-left',\n    BOTTOM_RIGHT: 'bottom-right',\n    TOP_LEFT: 'top-left',\n    TOP_RIGHT: 'top-right',\n};\n//# sourceMappingURL=Corner.js.map","/**\n * @module ol/extent/Relationship\n */\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n    UNKNOWN: 0,\n    INTERSECTING: 1,\n    ABOVE: 2,\n    RIGHT: 4,\n    BELOW: 8,\n    LEFT: 16,\n};\n//# sourceMappingURL=Relationship.js.map","/**\n * @module ol/extent\n */\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\nimport { assert } from './asserts.js';\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n    var extent = createEmpty();\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        extendCoordinate(extent, coordinates[i]);\n    }\n    return extent;\n}\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent=} opt_extent Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n    var minX = Math.min.apply(null, xs);\n    var minY = Math.min.apply(null, ys);\n    var maxX = Math.max.apply(null, xs);\n    var maxY = Math.max.apply(null, ys);\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = extent[0] - value;\n        opt_extent[1] = extent[1] - value;\n        opt_extent[2] = extent[2] + value;\n        opt_extent[3] = extent[3] + value;\n        return opt_extent;\n    }\n    else {\n        return [\n            extent[0] - value,\n            extent[1] - value,\n            extent[2] + value,\n            extent[3] + value,\n        ];\n    }\n}\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = extent[0];\n        opt_extent[1] = extent[1];\n        opt_extent[2] = extent[2];\n        opt_extent[3] = extent[3];\n        return opt_extent;\n    }\n    else {\n        return extent.slice();\n    }\n}\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n    var dx, dy;\n    if (x < extent[0]) {\n        dx = extent[0] - x;\n    }\n    else if (extent[2] < x) {\n        dx = x - extent[2];\n    }\n    else {\n        dx = 0;\n    }\n    if (y < extent[1]) {\n        dy = extent[1] - y;\n    }\n    else if (extent[3] < y) {\n        dy = y - extent[3];\n    }\n    else {\n        dy = 0;\n    }\n    return dx * dx + dy * dy;\n}\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n    return containsXY(extent, coordinate[0], coordinate[1]);\n}\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n    return (extent1[0] <= extent2[0] &&\n        extent2[2] <= extent1[2] &&\n        extent1[1] <= extent2[1] &&\n        extent2[3] <= extent1[3]);\n}\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n    return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n    var minX = extent[0];\n    var minY = extent[1];\n    var maxX = extent[2];\n    var maxY = extent[3];\n    var x = coordinate[0];\n    var y = coordinate[1];\n    var relationship = Relationship.UNKNOWN;\n    if (x < minX) {\n        relationship = relationship | Relationship.LEFT;\n    }\n    else if (x > maxX) {\n        relationship = relationship | Relationship.RIGHT;\n    }\n    if (y < minY) {\n        relationship = relationship | Relationship.BELOW;\n    }\n    else if (y > maxY) {\n        relationship = relationship | Relationship.ABOVE;\n    }\n    if (relationship === Relationship.UNKNOWN) {\n        relationship = Relationship.INTERSECTING;\n    }\n    return relationship;\n}\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n    return [Infinity, Infinity, -Infinity, -Infinity];\n}\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = minX;\n        opt_extent[1] = minY;\n        opt_extent[2] = maxX;\n        opt_extent[3] = maxY;\n        return opt_extent;\n    }\n    else {\n        return [minX, minY, maxX, maxY];\n    }\n}\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n    return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n    var x = coordinate[0];\n    var y = coordinate[1];\n    return createOrUpdate(x, y, x, y, opt_extent);\n}\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n    var extent = createOrUpdateEmpty(opt_extent);\n    return extendCoordinates(extent, coordinates);\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(flatCoordinates, offset, end, stride, opt_extent) {\n    var extent = createOrUpdateEmpty(opt_extent);\n    return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n    var extent = createOrUpdateEmpty(opt_extent);\n    return extendRings(extent, rings);\n}\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n    return (extent1[0] == extent2[0] &&\n        extent1[2] == extent2[2] &&\n        extent1[1] == extent2[1] &&\n        extent1[3] == extent2[3]);\n}\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n    return (Math.abs(extent1[0] - extent2[0]) < tolerance &&\n        Math.abs(extent1[2] - extent2[2]) < tolerance &&\n        Math.abs(extent1[1] - extent2[1]) < tolerance &&\n        Math.abs(extent1[3] - extent2[3]) < tolerance);\n}\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n    if (extent2[0] < extent1[0]) {\n        extent1[0] = extent2[0];\n    }\n    if (extent2[2] > extent1[2]) {\n        extent1[2] = extent2[2];\n    }\n    if (extent2[1] < extent1[1]) {\n        extent1[1] = extent2[1];\n    }\n    if (extent2[3] > extent1[3]) {\n        extent1[3] = extent2[3];\n    }\n    return extent1;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n    if (coordinate[0] < extent[0]) {\n        extent[0] = coordinate[0];\n    }\n    if (coordinate[0] > extent[2]) {\n        extent[2] = coordinate[0];\n    }\n    if (coordinate[1] < extent[1]) {\n        extent[1] = coordinate[1];\n    }\n    if (coordinate[1] > extent[3]) {\n        extent[3] = coordinate[1];\n    }\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        extendCoordinate(extent, coordinates[i]);\n    }\n    return extent;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(extent, flatCoordinates, offset, end, stride) {\n    for (; offset < end; offset += stride) {\n        extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n    }\n    return extent;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n    for (var i = 0, ii = rings.length; i < ii; ++i) {\n        extendCoordinates(extent, rings[i]);\n    }\n    return extent;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n    extent[0] = Math.min(extent[0], x);\n    extent[1] = Math.min(extent[1], y);\n    extent[2] = Math.max(extent[2], x);\n    extent[3] = Math.max(extent[3], y);\n}\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n    var val;\n    val = callback(getBottomLeft(extent));\n    if (val) {\n        return val;\n    }\n    val = callback(getBottomRight(extent));\n    if (val) {\n        return val;\n    }\n    val = callback(getTopRight(extent));\n    if (val) {\n        return val;\n    }\n    val = callback(getTopLeft(extent));\n    if (val) {\n        return val;\n    }\n    return false;\n}\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n    var area = 0;\n    if (!isEmpty(extent)) {\n        area = getWidth(extent) * getHeight(extent);\n    }\n    return area;\n}\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n    return [extent[0], extent[1]];\n}\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n    return [extent[2], extent[1]];\n}\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n    return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./extent/Corner.js\").default} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n    var coordinate;\n    if (corner === Corner.BOTTOM_LEFT) {\n        coordinate = getBottomLeft(extent);\n    }\n    else if (corner === Corner.BOTTOM_RIGHT) {\n        coordinate = getBottomRight(extent);\n    }\n    else if (corner === Corner.TOP_LEFT) {\n        coordinate = getTopLeft(extent);\n    }\n    else if (corner === Corner.TOP_RIGHT) {\n        coordinate = getTopRight(extent);\n    }\n    else {\n        assert(false, 13); // Invalid corner\n    }\n    return coordinate;\n}\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n    var minX = Math.min(extent1[0], extent2[0]);\n    var minY = Math.min(extent1[1], extent2[1]);\n    var maxX = Math.max(extent1[2], extent2[2]);\n    var maxY = Math.max(extent1[3], extent2[3]);\n    return (maxX - minX) * (maxY - minY);\n}\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, opt_extent) {\n    var dx = (resolution * size[0]) / 2;\n    var dy = (resolution * size[1]) / 2;\n    var cosRotation = Math.cos(rotation);\n    var sinRotation = Math.sin(rotation);\n    var xCos = dx * cosRotation;\n    var xSin = dx * sinRotation;\n    var yCos = dy * cosRotation;\n    var ySin = dy * sinRotation;\n    var x = center[0];\n    var y = center[1];\n    var x0 = x - xCos + ySin;\n    var x1 = x - xCos - ySin;\n    var x2 = x + xCos - ySin;\n    var x3 = x + xCos + ySin;\n    var y0 = y - xSin - yCos;\n    var y1 = y - xSin + yCos;\n    var y2 = y + xSin + yCos;\n    var y3 = y + xSin - yCos;\n    return createOrUpdate(Math.min(x0, x1, x2, x3), Math.min(y0, y1, y2, y3), Math.max(x0, x1, x2, x3), Math.max(y0, y1, y2, y3), opt_extent);\n}\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n    return extent[3] - extent[1];\n}\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n    var intersection = getIntersection(extent1, extent2);\n    return getArea(intersection);\n}\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent=} opt_extent Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n    var intersection = opt_extent ? opt_extent : createEmpty();\n    if (intersects(extent1, extent2)) {\n        if (extent1[0] > extent2[0]) {\n            intersection[0] = extent1[0];\n        }\n        else {\n            intersection[0] = extent2[0];\n        }\n        if (extent1[1] > extent2[1]) {\n            intersection[1] = extent1[1];\n        }\n        else {\n            intersection[1] = extent2[1];\n        }\n        if (extent1[2] < extent2[2]) {\n            intersection[2] = extent1[2];\n        }\n        else {\n            intersection[2] = extent2[2];\n        }\n        if (extent1[3] < extent2[3]) {\n            intersection[3] = extent1[3];\n        }\n        else {\n            intersection[3] = extent2[3];\n        }\n    }\n    else {\n        createOrUpdateEmpty(intersection);\n    }\n    return intersection;\n}\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n    return getWidth(extent) + getHeight(extent);\n}\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n    return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n    return [extent[0], extent[3]];\n}\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n    return [extent[2], extent[3]];\n}\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n    return extent[2] - extent[0];\n}\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n    return (extent1[0] <= extent2[2] &&\n        extent1[2] >= extent2[0] &&\n        extent1[1] <= extent2[3] &&\n        extent1[3] >= extent2[1]);\n}\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n    return extent[2] < extent[0] || extent[3] < extent[1];\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = extent[0];\n        opt_extent[1] = extent[1];\n        opt_extent[2] = extent[2];\n        opt_extent[3] = extent[3];\n        return opt_extent;\n    }\n    else {\n        return extent;\n    }\n}\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n    var deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n    var deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n    extent[0] -= deltaX;\n    extent[2] += deltaX;\n    extent[1] -= deltaY;\n    extent[3] += deltaY;\n}\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n    var intersects = false;\n    var startRel = coordinateRelationship(extent, start);\n    var endRel = coordinateRelationship(extent, end);\n    if (startRel === Relationship.INTERSECTING ||\n        endRel === Relationship.INTERSECTING) {\n        intersects = true;\n    }\n    else {\n        var minX = extent[0];\n        var minY = extent[1];\n        var maxX = extent[2];\n        var maxY = extent[3];\n        var startX = start[0];\n        var startY = start[1];\n        var endX = end[0];\n        var endY = end[1];\n        var slope = (endY - startY) / (endX - startX);\n        var x = void 0, y = void 0;\n        if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n            // potentially intersects top\n            x = endX - (endY - maxY) / slope;\n            intersects = x >= minX && x <= maxX;\n        }\n        if (!intersects &&\n            !!(endRel & Relationship.RIGHT) &&\n            !(startRel & Relationship.RIGHT)) {\n            // potentially intersects right\n            y = endY - (endX - maxX) * slope;\n            intersects = y >= minY && y <= maxY;\n        }\n        if (!intersects &&\n            !!(endRel & Relationship.BELOW) &&\n            !(startRel & Relationship.BELOW)) {\n            // potentially intersects bottom\n            x = endX - (endY - minY) / slope;\n            intersects = x >= minX && x <= maxX;\n        }\n        if (!intersects &&\n            !!(endRel & Relationship.LEFT) &&\n            !(startRel & Relationship.LEFT)) {\n            // potentially intersects left\n            y = endY - (endX - minX) * slope;\n            intersects = y >= minY && y <= maxY;\n        }\n    }\n    return intersects;\n}\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent=} opt_extent Destination extent.\n * @param {number=} opt_stops Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent, opt_stops) {\n    var coordinates = [];\n    if (opt_stops > 1) {\n        var width = extent[2] - extent[0];\n        var height = extent[3] - extent[1];\n        for (var i = 0; i < opt_stops; ++i) {\n            coordinates.push(extent[0] + (width * i) / opt_stops, extent[1], extent[2], extent[1] + (height * i) / opt_stops, extent[2] - (width * i) / opt_stops, extent[3], extent[0], extent[3] - (height * i) / opt_stops);\n        }\n    }\n    else {\n        coordinates = [\n            extent[0],\n            extent[1],\n            extent[2],\n            extent[1],\n            extent[2],\n            extent[3],\n            extent[0],\n            extent[3],\n        ];\n    }\n    transformFn(coordinates, coordinates, 2);\n    var xs = [];\n    var ys = [];\n    for (var i = 0, l = coordinates.length; i < l; i += 2) {\n        xs.push(coordinates[i]);\n        ys.push(coordinates[i + 1]);\n    }\n    return _boundingExtentXYs(xs, ys, opt_extent);\n}\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n    var projectionExtent = projection.getExtent();\n    var center = getCenter(extent);\n    if (projection.canWrapX() &&\n        (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])) {\n        var worldWidth = getWidth(projectionExtent);\n        var worldsAway = Math.floor((center[0] - projectionExtent[0]) / worldWidth);\n        var offset = worldsAway * worldWidth;\n        extent[0] -= offset;\n        extent[2] -= offset;\n    }\n    return extent;\n}\n//# sourceMappingURL=extent.js.map","/**\n * @module ol/has\n */\nvar ua = typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport var FIREFOX = ua.indexOf('firefox') !== -1;\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport var SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport var WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport var MAC = ua.indexOf('macintosh') !== -1;\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport var DEVICE_PIXEL_RATIO = typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport var WORKER_OFFSCREEN_CANVAS = typeof WorkerGlobalScope !== 'undefined' &&\n    typeof OffscreenCanvas !== 'undefined' &&\n    self instanceof WorkerGlobalScope; //eslint-disable-line\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport var IMAGE_DECODE = typeof Image !== 'undefined' && Image.prototype.decode;\n/**\n * @type {boolean}\n */\nexport var PASSIVE_EVENT_LISTENERS = (function () {\n    var passive = false;\n    try {\n        var options = Object.defineProperty({}, 'passive', {\n            get: function () {\n                passive = true;\n            },\n        });\n        window.addEventListener('_', null, options);\n        window.removeEventListener('_', null, options);\n    }\n    catch (error) {\n        // passive not supported\n    }\n    return passive;\n})();\n//# sourceMappingURL=has.js.map","import { WORKER_OFFSCREEN_CANVAS } from './has.js';\n/**\n * @module ol/dom\n */\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number=} opt_width Canvas width.\n * @param {number=} opt_height Canvas height.\n * @param {Array<HTMLCanvasElement>=} opt_canvasPool Canvas pool to take existing canvas from.\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(opt_width, opt_height, opt_canvasPool) {\n    var canvas = opt_canvasPool && opt_canvasPool.length\n        ? opt_canvasPool.shift()\n        : WORKER_OFFSCREEN_CANVAS\n            ? new OffscreenCanvas(opt_width || 300, opt_height || 300)\n            : document.createElement('canvas');\n    if (opt_width) {\n        canvas.width = opt_width;\n    }\n    if (opt_height) {\n        canvas.height = opt_height;\n    }\n    //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n    return /** @type {CanvasRenderingContext2D} */ (canvas.getContext('2d'));\n}\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n    var width = element.offsetWidth;\n    var style = getComputedStyle(element);\n    width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n    return width;\n}\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n    var height = element.offsetHeight;\n    var style = getComputedStyle(element);\n    height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n    return height;\n}\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n    var parent = oldNode.parentNode;\n    if (parent) {\n        parent.replaceChild(newNode, oldNode);\n    }\n}\n/**\n * @param {Node} node The node to remove.\n * @returns {Node} The node that was removed or null.\n */\nexport function removeNode(node) {\n    return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n    while (node.lastChild) {\n        node.removeChild(node.lastChild);\n    }\n}\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n    var oldChildren = node.childNodes;\n    for (var i = 0; true; ++i) {\n        var oldChild = oldChildren[i];\n        var newChild = children[i];\n        // check if our work is done\n        if (!oldChild && !newChild) {\n            break;\n        }\n        // check if children match\n        if (oldChild === newChild) {\n            continue;\n        }\n        // check if a new child needs to be added\n        if (!oldChild) {\n            node.appendChild(newChild);\n            continue;\n        }\n        // check if an old child needs to be removed\n        if (!newChild) {\n            node.removeChild(oldChild);\n            --i;\n            continue;\n        }\n        // reorder\n        node.insertBefore(newChild, oldChild);\n    }\n}\n//# sourceMappingURL=dom.js.map","/**\n * @module ol/css\n */\n/**\n * @typedef {Object} FontParameters\n * @property {string} style\n * @property {string} variant\n * @property {string} weight\n * @property {string} size\n * @property {string} lineHeight\n * @property {string} family\n * @property {Array<string>} families\n */\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_HIDDEN = 'ol-hidden';\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_SELECTABLE = 'ol-selectable';\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_UNSELECTABLE = 'ol-unselectable';\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_UNSUPPORTED = 'ol-unsupported';\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_CONTROL = 'ol-control';\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_COLLAPSED = 'ol-collapsed';\n/**\n * From http://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nvar fontRegEx = new RegExp([\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n].join(''), 'i');\nvar fontRegExMatchIndex = [\n    'style',\n    'variant',\n    'weight',\n    'size',\n    'lineHeight',\n    'family',\n];\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters} The font parameters (or null if the input spec is invalid).\n */\nexport var getFontParameters = function (fontSpec) {\n    var match = fontSpec.match(fontRegEx);\n    if (!match) {\n        return null;\n    }\n    var style = /** @type {FontParameters} */ ({\n        lineHeight: 'normal',\n        size: '1.2em',\n        style: 'normal',\n        weight: 'normal',\n        variant: 'normal',\n    });\n    for (var i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n        var value = match[i + 1];\n        if (value !== undefined) {\n            style[fontRegExMatchIndex[i]] = value;\n        }\n    }\n    style.families = style.family.split(/,\\s?/);\n    return style;\n};\n//# sourceMappingURL=css.js.map","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport EventTarget from '../events/Target.js';\nimport { WORKER_OFFSCREEN_CANVAS } from '../has.js';\nimport { clear } from '../obj.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport { getFontParameters } from '../css.js';\nimport { toString } from '../transform.js';\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle\n */\n/**\n * @typedef Label\n * @property {number} width\n * @property {number} height\n * @property {Array<string|number>} contextInstructions\n */\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle]\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle]\n * @property {CanvasLineCap} [currentLineCap]\n * @property {Array<number>} currentLineDash\n * @property {number} [currentLineDashOffset]\n * @property {CanvasLineJoin} [currentLineJoin]\n * @property {number} [currentLineWidth]\n * @property {number} [currentMiterLimit]\n * @property {number} [lastStroke]\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle]\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle]\n * @property {CanvasLineCap} [lineCap]\n * @property {Array<number>} lineDash\n * @property {number} [lineDashOffset]\n * @property {CanvasLineJoin} [lineJoin]\n * @property {number} [lineWidth]\n * @property {number} [miterLimit]\n */\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap\n * @property {Array<number>} lineDash\n * @property {number} lineDashOffset\n * @property {CanvasLineJoin} lineJoin\n * @property {number} lineWidth\n * @property {number} miterLimit\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle\n */\n/**\n * @typedef {Object} TextState\n * @property {string} font\n * @property {string} [textAlign]\n * @property {string} textBaseline\n * @property {string} [placement]\n * @property {number} [maxAngle]\n * @property {boolean} [overflow]\n * @property {import(\"../style/Fill.js\").default} [backgroundFill]\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke]\n * @property {import(\"../size.js\").Size} [scale]\n * @property {Array<number>} [padding]\n */\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n/**\n * @const\n * @type {string}\n */\nexport var defaultFont = '10px sans-serif';\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport var defaultFillStyle = '#000';\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport var defaultLineCap = 'round';\n/**\n * @const\n * @type {Array<number>}\n */\nexport var defaultLineDash = [];\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineDashOffset = 0;\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport var defaultLineJoin = 'round';\n/**\n * @const\n * @type {number}\n */\nexport var defaultMiterLimit = 10;\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport var defaultStrokeStyle = '#000';\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextAlign = 'center';\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextBaseline = 'middle';\n/**\n * @const\n * @type {Array<number>}\n */\nexport var defaultPadding = [0, 0, 0, 0];\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineWidth = 1;\n/**\n * @type {BaseObject}\n */\nexport var checkedFonts = new BaseObject();\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache#setSize}.\n * Deprecated - there is no label cache any more.\n * @type {?}\n * @api\n * @deprecated\n */\nexport var labelCache = new EventTarget();\nlabelCache.setSize = function () {\n    console.warn('labelCache is deprecated.'); //eslint-disable-line\n};\n/**\n * @type {CanvasRenderingContext2D}\n */\nvar measureContext = null;\n/**\n * @type {string}\n */\nvar measureFont;\n/**\n * @type {!Object<string, number>}\n */\nexport var textHeights = {};\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport var registerFont = (function () {\n    var retries = 100;\n    var size = '32px ';\n    var referenceFonts = ['monospace', 'serif'];\n    var len = referenceFonts.length;\n    var text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n    var interval, referenceWidth;\n    /**\n     * @param {string} fontStyle Css font-style\n     * @param {string} fontWeight Css font-weight\n     * @param {*} fontFamily Css font-family\n     * @return {boolean} Font with style and weight is available\n     */\n    function isAvailable(fontStyle, fontWeight, fontFamily) {\n        var available = true;\n        for (var i = 0; i < len; ++i) {\n            var referenceFont = referenceFonts[i];\n            referenceWidth = measureTextWidth(fontStyle + ' ' + fontWeight + ' ' + size + referenceFont, text);\n            if (fontFamily != referenceFont) {\n                var width = measureTextWidth(fontStyle +\n                    ' ' +\n                    fontWeight +\n                    ' ' +\n                    size +\n                    fontFamily +\n                    ',' +\n                    referenceFont, text);\n                // If width and referenceWidth are the same, then the fallback was used\n                // instead of the font we wanted, so the font is not available.\n                available = available && width != referenceWidth;\n            }\n        }\n        if (available) {\n            return true;\n        }\n        return false;\n    }\n    function check() {\n        var done = true;\n        var fonts = checkedFonts.getKeys();\n        for (var i = 0, ii = fonts.length; i < ii; ++i) {\n            var font = fonts[i];\n            if (checkedFonts.get(font) < retries) {\n                if (isAvailable.apply(this, font.split('\\n'))) {\n                    clear(textHeights);\n                    // Make sure that loaded fonts are picked up by Safari\n                    measureContext = null;\n                    measureFont = undefined;\n                    checkedFonts.set(font, retries);\n                }\n                else {\n                    checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n                    done = false;\n                }\n            }\n        }\n        if (done) {\n            clearInterval(interval);\n            interval = undefined;\n        }\n    }\n    return function (fontSpec) {\n        var font = getFontParameters(fontSpec);\n        if (!font) {\n            return;\n        }\n        var families = font.families;\n        for (var i = 0, ii = families.length; i < ii; ++i) {\n            var family = families[i];\n            var key = font.style + '\\n' + font.weight + '\\n' + family;\n            if (checkedFonts.get(key) === undefined) {\n                checkedFonts.set(key, retries, true);\n                if (!isAvailable(font.style, font.weight, family)) {\n                    checkedFonts.set(key, 0, true);\n                    if (interval === undefined) {\n                        interval = setInterval(check, 32);\n                    }\n                }\n            }\n        }\n    };\n})();\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport var measureTextHeight = (function () {\n    /**\n     * @type {HTMLDivElement}\n     */\n    var div;\n    return function (fontSpec) {\n        var height = textHeights[fontSpec];\n        if (height == undefined) {\n            if (WORKER_OFFSCREEN_CANVAS) {\n                var font = getFontParameters(fontSpec);\n                var metrics = measureText(fontSpec, 'Žg');\n                var lineHeight = isNaN(Number(font.lineHeight))\n                    ? 1.2\n                    : Number(font.lineHeight);\n                height =\n                    lineHeight *\n                        (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n            }\n            else {\n                if (!div) {\n                    div = document.createElement('div');\n                    div.innerHTML = 'M';\n                    div.style.margin = '0 !important';\n                    div.style.padding = '0 !important';\n                    div.style.position = 'absolute !important';\n                    div.style.left = '-99999px !important';\n                }\n                div.style.font = fontSpec;\n                document.body.appendChild(div);\n                height = div.offsetHeight;\n                document.body.removeChild(div);\n            }\n            textHeights[fontSpec] = height;\n        }\n        return height;\n    };\n})();\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n    if (!measureContext) {\n        measureContext = createCanvasContext2D(1, 1);\n    }\n    if (font != measureFont) {\n        measureContext.font = font;\n        measureFont = measureContext.font;\n    }\n    return measureContext.measureText(text);\n}\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n    return measureText(font, text).width;\n}\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @returns {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n    if (text in cache) {\n        return cache[text];\n    }\n    var width = measureTextWidth(font, text);\n    cache[text] = width;\n    return width;\n}\n/**\n * @param {string} font Font to use for measuring.\n * @param {Array<string>} lines Lines to measure.\n * @param {Array<number>} widths Array will be populated with the widths of\n * each line.\n * @return {number} Width of the whole text.\n */\nexport function measureTextWidths(font, lines, widths) {\n    var numLines = lines.length;\n    var width = 0;\n    for (var i = 0; i < numLines; ++i) {\n        var currentWidth = measureTextWidth(font, lines[i]);\n        width = Math.max(width, currentWidth);\n        widths.push(currentWidth);\n    }\n    return width;\n}\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n    if (rotation !== 0) {\n        context.translate(offsetX, offsetY);\n        context.rotate(rotation);\n        context.translate(-offsetX, -offsetY);\n    }\n}\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(context, transform, opacity, labelOrImage, originX, originY, w, h, x, y, scale) {\n    context.save();\n    if (opacity !== 1) {\n        context.globalAlpha *= opacity;\n    }\n    if (transform) {\n        context.setTransform.apply(context, transform);\n    }\n    if ( /** @type {*} */(labelOrImage).contextInstructions) {\n        // label\n        context.translate(x, y);\n        context.scale(scale[0], scale[1]);\n        executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n    }\n    else if (scale[0] < 0 || scale[1] < 0) {\n        // flipped image\n        context.translate(x, y);\n        context.scale(scale[0], scale[1]);\n        context.drawImage(\n        /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (labelOrImage), originX, originY, w, h, 0, 0, w, h);\n    }\n    else {\n        // if image not flipped translate and scale can be avoided\n        context.drawImage(\n        /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (labelOrImage), originX, originY, w, h, x, y, w * scale[0], h * scale[1]);\n    }\n    context.restore();\n}\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n    var contextInstructions = label.contextInstructions;\n    for (var i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n        if (Array.isArray(contextInstructions[i + 1])) {\n            context[contextInstructions[i]].apply(context, contextInstructions[i + 1]);\n        }\n        else {\n            context[contextInstructions[i]] = contextInstructions[i + 1];\n        }\n    }\n}\n/**\n * @type {HTMLCanvasElement}\n * @private\n */\nvar createTransformStringCanvas = null;\n/**\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @return {string} CSS transform.\n */\nexport function createTransformString(transform) {\n    if (WORKER_OFFSCREEN_CANVAS) {\n        return toString(transform);\n    }\n    else {\n        if (!createTransformStringCanvas) {\n            createTransformStringCanvas = createCanvasContext2D(1, 1).canvas;\n        }\n        createTransformStringCanvas.style.transform = toString(transform);\n        return createTransformStringCanvas.style.transform;\n    }\n}\n//# sourceMappingURL=canvas.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport { apply as applyTransform, compose as composeTransform, create as createTransform, } from '../../transform.js';\nimport { containsCoordinate, getBottomLeft, getBottomRight, getTopLeft, getTopRight, } from '../../extent.js';\nimport { createCanvasContext2D } from '../../dom.js';\nimport { rotateAtOffset } from '../../render/canvas.js';\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n */\nvar CanvasLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasLayerRenderer, _super);\n    /**\n     * @param {LayerType} layer Layer.\n     */\n    function CanvasLayerRenderer(layer) {\n        var _this = _super.call(this, layer) || this;\n        /**\n         * @protected\n         * @type {HTMLElement}\n         */\n        _this.container = null;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.renderedResolution;\n        /**\n         * A temporary transform.  The values in this transform should only be used in a\n         * function that sets the values.\n         * @protected\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.tempTransform = createTransform();\n        /**\n         * The transform for rendered pixels to viewport CSS pixels.  This transform must\n         * be set when rendering a frame and may be used by other functions after rendering.\n         * @protected\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.pixelTransform = createTransform();\n        /**\n         * The transform for viewport CSS pixels to rendered pixels.  This transform must\n         * be set when rendering a frame and may be used by other functions after rendering.\n         * @protected\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.inversePixelTransform = createTransform();\n        /**\n         * @type {CanvasRenderingContext2D}\n         */\n        _this.context = null;\n        /**\n         * @type {boolean}\n         */\n        _this.containerReused = false;\n        return _this;\n    }\n    /**\n     * Get a rendering container from an existing target, if compatible.\n     * @param {HTMLElement} target Potential render target.\n     * @param {string} transform CSS Transform.\n     * @param {number} opacity Opacity.\n     */\n    CanvasLayerRenderer.prototype.useContainer = function (target, transform, opacity) {\n        var layerClassName = this.getLayer().getClassName();\n        var container, context;\n        if (target &&\n            target.style.opacity === '' &&\n            target.className === layerClassName) {\n            var canvas = target.firstElementChild;\n            if (canvas instanceof HTMLCanvasElement) {\n                context = canvas.getContext('2d');\n            }\n        }\n        if (context &&\n            (context.canvas.width === 0 ||\n                context.canvas.style.transform === transform)) {\n            // Container of the previous layer renderer can be used.\n            this.container = target;\n            this.context = context;\n            this.containerReused = true;\n        }\n        else if (this.containerReused) {\n            // Previously reused container cannot be used any more.\n            this.container = null;\n            this.context = null;\n            this.containerReused = false;\n        }\n        if (!this.container) {\n            container = document.createElement('div');\n            container.className = layerClassName;\n            var style = container.style;\n            style.position = 'absolute';\n            style.width = '100%';\n            style.height = '100%';\n            context = createCanvasContext2D();\n            var canvas = context.canvas;\n            container.appendChild(canvas);\n            style = canvas.style;\n            style.position = 'absolute';\n            style.left = '0';\n            style.transformOrigin = 'top left';\n            this.container = container;\n            this.context = context;\n        }\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.clip = function (context, frameState, extent) {\n        var pixelRatio = frameState.pixelRatio;\n        var halfWidth = (frameState.size[0] * pixelRatio) / 2;\n        var halfHeight = (frameState.size[1] * pixelRatio) / 2;\n        var rotation = frameState.viewState.rotation;\n        var topLeft = getTopLeft(extent);\n        var topRight = getTopRight(extent);\n        var bottomRight = getBottomRight(extent);\n        var bottomLeft = getBottomLeft(extent);\n        applyTransform(frameState.coordinateToPixelTransform, topLeft);\n        applyTransform(frameState.coordinateToPixelTransform, topRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n        context.save();\n        rotateAtOffset(context, -rotation, halfWidth, halfHeight);\n        context.beginPath();\n        context.moveTo(topLeft[0] * pixelRatio, topLeft[1] * pixelRatio);\n        context.lineTo(topRight[0] * pixelRatio, topRight[1] * pixelRatio);\n        context.lineTo(bottomRight[0] * pixelRatio, bottomRight[1] * pixelRatio);\n        context.lineTo(bottomLeft[0] * pixelRatio, bottomLeft[1] * pixelRatio);\n        context.clip();\n        rotateAtOffset(context, rotation, halfWidth, halfHeight);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.clipUnrotated = function (context, frameState, extent) {\n        var topLeft = getTopLeft(extent);\n        var topRight = getTopRight(extent);\n        var bottomRight = getBottomRight(extent);\n        var bottomLeft = getBottomLeft(extent);\n        applyTransform(frameState.coordinateToPixelTransform, topLeft);\n        applyTransform(frameState.coordinateToPixelTransform, topRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n        var inverted = this.inversePixelTransform;\n        applyTransform(inverted, topLeft);\n        applyTransform(inverted, topRight);\n        applyTransform(inverted, bottomRight);\n        applyTransform(inverted, bottomLeft);\n        context.save();\n        context.beginPath();\n        context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n        context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n        context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n        context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n        context.clip();\n    };\n    /**\n     * @param {import(\"../../render/EventType.js\").default} type Event type.\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @private\n     */\n    CanvasLayerRenderer.prototype.dispatchRenderEvent_ = function (type, context, frameState) {\n        var layer = this.getLayer();\n        if (layer.hasListener(type)) {\n            var event_1 = new RenderEvent(type, this.inversePixelTransform, frameState, context);\n            layer.dispatchEvent(event_1);\n        }\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.preRender = function (context, frameState) {\n        this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.postRender = function (context, frameState) {\n        this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n    };\n    /**\n     * Creates a transform for rendering to an element that will be rotated after rendering.\n     * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n     * @param {number} resolution Resolution.\n     * @param {number} rotation Rotation.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {number} width Width of the rendered element (in pixels).\n     * @param {number} height Height of the rendered element (in pixels).\n     * @param {number} offsetX Offset on the x-axis in view coordinates.\n     * @protected\n     * @return {!import(\"../../transform.js\").Transform} Transform.\n     */\n    CanvasLayerRenderer.prototype.getRenderTransform = function (center, resolution, rotation, pixelRatio, width, height, offsetX) {\n        var dx1 = width / 2;\n        var dy1 = height / 2;\n        var sx = pixelRatio / resolution;\n        var sy = -sx;\n        var dx2 = -center[0] + offsetX;\n        var dy2 = -center[1];\n        return composeTransform(this.tempTransform, dx1, dy1, sx, sy, -rotation, dx2, dy2);\n    };\n    /**\n     * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n     *    location, null will be returned.  If there is data, but pixel values cannot be\n     *    returned, and empty array will be returned.\n     */\n    CanvasLayerRenderer.prototype.getDataAtPixel = function (pixel, frameState, hitTolerance) {\n        var renderPixel = applyTransform(this.inversePixelTransform, pixel.slice());\n        var context = this.context;\n        var layer = this.getLayer();\n        var layerExtent = layer.getExtent();\n        if (layerExtent) {\n            var renderCoordinate = applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n            /** get only data inside of the layer extent */\n            if (!containsCoordinate(layerExtent, renderCoordinate)) {\n                return null;\n            }\n        }\n        var data;\n        try {\n            var x = Math.round(renderPixel[0]);\n            var y = Math.round(renderPixel[1]);\n            var newCanvas = document.createElement('canvas');\n            var newContext = newCanvas.getContext('2d');\n            newCanvas.width = 1;\n            newCanvas.height = 1;\n            newContext.clearRect(0, 0, 1, 1);\n            newContext.drawImage(context.canvas, x, y, 1, 1, 0, 0, 1, 1);\n            data = newContext.getImageData(0, 0, 1, 1).data;\n        }\n        catch (err) {\n            if (err.name === 'SecurityError') {\n                // tainted canvas, we assume there is data at the given pixel (although there might not be)\n                return new Uint8Array();\n            }\n            return data;\n        }\n        if (data[3] === 0) {\n            return null;\n        }\n        return data;\n    };\n    return CanvasLayerRenderer;\n}(LayerRenderer));\nexport default CanvasLayerRenderer;\n//# sourceMappingURL=Layer.js.map","/**\n * @module ol/ViewHint\n */\n/**\n * @enum {number}\n */\nexport default {\n    ANIMATING: 0,\n    INTERACTING: 1,\n};\n//# sourceMappingURL=ViewHint.js.map","/**\n * @module ol/proj/Units\n */\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nvar Units = {\n    /**\n     * Degrees\n     * @api\n     */\n    DEGREES: 'degrees',\n    /**\n     * Feet\n     * @api\n     */\n    FEET: 'ft',\n    /**\n     * Meters\n     * @api\n     */\n    METERS: 'm',\n    /**\n     * Pixels\n     * @api\n     */\n    PIXELS: 'pixels',\n    /**\n     * Tile Pixels\n     * @api\n     */\n    TILE_PIXELS: 'tile-pixels',\n    /**\n     * US Feet\n     * @api\n     */\n    USFEET: 'us-ft',\n};\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object<Units, number>}\n * @api\n */\nexport var METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.DEGREES] = (2 * Math.PI * 6370997) / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\nexport default Units;\n//# sourceMappingURL=Units.js.map","/**\n * @module ol/proj/Projection\n */\nimport { METERS_PER_UNIT } from './Units.js';\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").default|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `{number}` view resolution and an `{import(\"../coordinate.js\").Coordinate}` as arguments, and returns\n * the `{number}` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj#getPointResolution} function will be used.\n */\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj~get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4~register} function.\n *\n * @api\n */\nvar Projection = /** @class */ (function () {\n    /**\n     * @param {Options} options Projection options.\n     */\n    function Projection(options) {\n        /**\n         * @private\n         * @type {string}\n         */\n        this.code_ = options.code;\n        /**\n         * Units of projected coordinates. When set to `TILE_PIXELS`, a\n         * `this.extent_` and `this.worldExtent_` must be configured properly for each\n         * tile.\n         * @private\n         * @type {import(\"./Units.js\").default}\n         */\n        this.units_ = /** @type {import(\"./Units.js\").default} */ (options.units);\n        /**\n         * Validity extent of the projection in projected coordinates. For projections\n         * with `TILE_PIXELS` units, this is the extent of the tile in\n         * tile pixel space.\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        this.extent_ = options.extent !== undefined ? options.extent : null;\n        /**\n         * Extent of the world in EPSG:4326. For projections with\n         * `TILE_PIXELS` units, this is the extent of the tile in\n         * projected coordinate space.\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        this.worldExtent_ =\n            options.worldExtent !== undefined ? options.worldExtent : null;\n        /**\n         * @private\n         * @type {string}\n         */\n        this.axisOrientation_ =\n            options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.global_ = options.global !== undefined ? options.global : false;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.canWrapX_ = !!(this.global_ && this.extent_);\n        /**\n         * @private\n         * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n         */\n        this.getPointResolutionFunc_ = options.getPointResolution;\n        /**\n         * @private\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\n         */\n        this.defaultTileGrid_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.metersPerUnit_ = options.metersPerUnit;\n    }\n    /**\n     * @return {boolean} The projection is suitable for wrapping the x-axis\n     */\n    Projection.prototype.canWrapX = function () {\n        return this.canWrapX_;\n    };\n    /**\n     * Get the code for this projection, e.g. 'EPSG:4326'.\n     * @return {string} Code.\n     * @api\n     */\n    Projection.prototype.getCode = function () {\n        return this.code_;\n    };\n    /**\n     * Get the validity extent for this projection.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    Projection.prototype.getExtent = function () {\n        return this.extent_;\n    };\n    /**\n     * Get the units of this projection.\n     * @return {import(\"./Units.js\").default} Units.\n     * @api\n     */\n    Projection.prototype.getUnits = function () {\n        return this.units_;\n    };\n    /**\n     * Get the amount of meters per unit of this projection.  If the projection is\n     * not configured with `metersPerUnit` or a units identifier, the return is\n     * `undefined`.\n     * @return {number|undefined} Meters.\n     * @api\n     */\n    Projection.prototype.getMetersPerUnit = function () {\n        return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n    };\n    /**\n     * Get the world extent for this projection.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    Projection.prototype.getWorldExtent = function () {\n        return this.worldExtent_;\n    };\n    /**\n     * Get the axis orientation of this projection.\n     * Example values are:\n     * enu - the default easting, northing, elevation.\n     * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n     *     or south orientated transverse mercator.\n     * wnu - westing, northing, up - some planetary coordinate systems have\n     *     \"west positive\" coordinate systems\n     * @return {string} Axis orientation.\n     * @api\n     */\n    Projection.prototype.getAxisOrientation = function () {\n        return this.axisOrientation_;\n    };\n    /**\n     * Is this projection a global projection which spans the whole world?\n     * @return {boolean} Whether the projection is global.\n     * @api\n     */\n    Projection.prototype.isGlobal = function () {\n        return this.global_;\n    };\n    /**\n     * Set if the projection is a global projection which spans the whole world\n     * @param {boolean} global Whether the projection is global.\n     * @api\n     */\n    Projection.prototype.setGlobal = function (global) {\n        this.global_ = global;\n        this.canWrapX_ = !!(global && this.extent_);\n    };\n    /**\n     * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n     */\n    Projection.prototype.getDefaultTileGrid = function () {\n        return this.defaultTileGrid_;\n    };\n    /**\n     * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n     */\n    Projection.prototype.setDefaultTileGrid = function (tileGrid) {\n        this.defaultTileGrid_ = tileGrid;\n    };\n    /**\n     * Set the validity extent for this projection.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @api\n     */\n    Projection.prototype.setExtent = function (extent) {\n        this.extent_ = extent;\n        this.canWrapX_ = !!(this.global_ && extent);\n    };\n    /**\n     * Set the world extent for this projection.\n     * @param {import(\"../extent.js\").Extent} worldExtent World extent\n     *     [minlon, minlat, maxlon, maxlat].\n     * @api\n     */\n    Projection.prototype.setWorldExtent = function (worldExtent) {\n        this.worldExtent_ = worldExtent;\n    };\n    /**\n     * Set the getPointResolution function (see {@link module:ol/proj~getPointResolution}\n     * for this projection.\n     * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n     * @api\n     */\n    Projection.prototype.setGetPointResolution = function (func) {\n        this.getPointResolutionFunc_ = func;\n    };\n    /**\n     * Get the custom point resolution function for this projection (if set).\n     * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n     * resolution function (if set).\n     */\n    Projection.prototype.getPointResolutionFunc = function () {\n        return this.getPointResolutionFunc_;\n    };\n    return Projection;\n}());\nexport default Projection;\n//# sourceMappingURL=Projection.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\nimport { cosh } from '../math.js';\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport var RADIUS = 6378137;\n/**\n * @const\n * @type {number}\n */\nexport var HALF_SIZE = Math.PI * RADIUS;\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var WORLD_EXTENT = [-180, -85, 180, 85];\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport var MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nvar EPSG3857Projection = /** @class */ (function (_super) {\n    __extends(EPSG3857Projection, _super);\n    /**\n     * @param {string} code Code.\n     */\n    function EPSG3857Projection(code) {\n        return _super.call(this, {\n            code: code,\n            units: Units.METERS,\n            extent: EXTENT,\n            global: true,\n            worldExtent: WORLD_EXTENT,\n            getPointResolution: function (resolution, point) {\n                return resolution / cosh(point[1] / RADIUS);\n            },\n        }) || this;\n    }\n    return EPSG3857Projection;\n}(Projection));\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport var PROJECTIONS = [\n    new EPSG3857Projection('EPSG:3857'),\n    new EPSG3857Projection('EPSG:102100'),\n    new EPSG3857Projection('EPSG:102113'),\n    new EPSG3857Projection('EPSG:900913'),\n    new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n    var length = input.length;\n    var dimension = opt_dimension > 1 ? opt_dimension : 2;\n    var output = opt_output;\n    if (output === undefined) {\n        if (dimension > 2) {\n            // preserve values beyond second dimension\n            output = input.slice();\n        }\n        else {\n            output = new Array(length);\n        }\n    }\n    for (var i = 0; i < length; i += dimension) {\n        output[i] = (HALF_SIZE * input[i]) / 180;\n        var y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n        if (y > MAX_SAFE_Y) {\n            y = MAX_SAFE_Y;\n        }\n        else if (y < -MAX_SAFE_Y) {\n            y = -MAX_SAFE_Y;\n        }\n        output[i + 1] = y;\n    }\n    return output;\n}\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n    var length = input.length;\n    var dimension = opt_dimension > 1 ? opt_dimension : 2;\n    var output = opt_output;\n    if (output === undefined) {\n        if (dimension > 2) {\n            // preserve values beyond second dimension\n            output = input.slice();\n        }\n        else {\n            output = new Array(length);\n        }\n    }\n    for (var i = 0; i < length; i += dimension) {\n        output[i] = (180 * input[i]) / HALF_SIZE;\n        output[i + 1] =\n            (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n    }\n    return output;\n}\n//# sourceMappingURL=epsg3857.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport var RADIUS = 6378137;\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var EXTENT = [-180, -90, 180, 90];\n/**\n * @const\n * @type {number}\n */\nexport var METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nvar EPSG4326Projection = /** @class */ (function (_super) {\n    __extends(EPSG4326Projection, _super);\n    /**\n     * @param {string} code Code.\n     * @param {string=} opt_axisOrientation Axis orientation.\n     */\n    function EPSG4326Projection(code, opt_axisOrientation) {\n        return _super.call(this, {\n            code: code,\n            units: Units.DEGREES,\n            extent: EXTENT,\n            axisOrientation: opt_axisOrientation,\n            global: true,\n            metersPerUnit: METERS_PER_UNIT,\n            worldExtent: EXTENT,\n        }) || this;\n    }\n    return EPSG4326Projection;\n}(Projection));\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport var PROJECTIONS = [\n    new EPSG4326Projection('CRS:84'),\n    new EPSG4326Projection('EPSG:4326', 'neu'),\n    new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n    new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n    new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n];\n//# sourceMappingURL=epsg4326.js.map","/**\n * @module ol/proj/projections\n */\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nvar cache = {};\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n    cache = {};\n}\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n    return (cache[code] ||\n        cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n        null);\n}\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n    cache[code] = projection;\n}\n//# sourceMappingURL=projections.js.map","/**\n * @module ol/proj/transforms\n */\nimport { isEmpty } from '../obj.js';\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nvar transforms = {};\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n    transforms = {};\n}\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n    var sourceCode = source.getCode();\n    var destinationCode = destination.getCode();\n    if (!(sourceCode in transforms)) {\n        transforms[sourceCode] = {};\n    }\n    transforms[sourceCode][destinationCode] = transformFn;\n}\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n    var sourceCode = source.getCode();\n    var destinationCode = destination.getCode();\n    var transform = transforms[sourceCode][destinationCode];\n    delete transforms[sourceCode][destinationCode];\n    if (isEmpty(transforms[sourceCode])) {\n        delete transforms[sourceCode];\n    }\n    return transform;\n}\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n    var transform;\n    if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n        transform = transforms[sourceCode][destinationCode];\n    }\n    return transform;\n}\n//# sourceMappingURL=transforms.js.map","/**\n * @module ol/geom/GeometryType\n */\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n    POINT: 'Point',\n    LINE_STRING: 'LineString',\n    LINEAR_RING: 'LinearRing',\n    POLYGON: 'Polygon',\n    MULTI_POINT: 'MultiPoint',\n    MULTI_LINE_STRING: 'MultiLineString',\n    MULTI_POLYGON: 'MultiPolygon',\n    GEOMETRY_COLLECTION: 'GeometryCollection',\n    CIRCLE: 'Circle',\n};\n//# sourceMappingURL=GeometryType.js.map","/**\n * @module ol/sphere\n */\nimport GeometryType from './geom/GeometryType.js';\nimport { toDegrees, toRadians } from './math.js';\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport var DEFAULT_RADIUS = 6371008.8;\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, opt_radius) {\n    var radius = opt_radius || DEFAULT_RADIUS;\n    var lat1 = toRadians(c1[1]);\n    var lat2 = toRadians(c2[1]);\n    var deltaLatBy2 = (lat2 - lat1) / 2;\n    var deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n    var a = Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n        Math.sin(deltaLonBy2) *\n            Math.sin(deltaLonBy2) *\n            Math.cos(lat1) *\n            Math.cos(lat2);\n    return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n    var length = 0;\n    for (var i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n        length += getDistance(coordinates[i], coordinates[i + 1], radius);\n    }\n    return length;\n}\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions=} opt_options Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, opt_options) {\n    var options = opt_options || {};\n    var radius = options.radius || DEFAULT_RADIUS;\n    var projection = options.projection || 'EPSG:3857';\n    var type = geometry.getType();\n    if (type !== GeometryType.GEOMETRY_COLLECTION) {\n        geometry = geometry.clone().transform(projection, 'EPSG:4326');\n    }\n    var length = 0;\n    var coordinates, coords, i, ii, j, jj;\n    switch (type) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT: {\n            break;\n        }\n        case GeometryType.LINE_STRING:\n        case GeometryType.LINEAR_RING: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            length = getLengthInternal(coordinates, radius);\n            break;\n        }\n        case GeometryType.MULTI_LINE_STRING:\n        case GeometryType.POLYGON: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            for (i = 0, ii = coordinates.length; i < ii; ++i) {\n                length += getLengthInternal(coordinates[i], radius);\n            }\n            break;\n        }\n        case GeometryType.MULTI_POLYGON: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            for (i = 0, ii = coordinates.length; i < ii; ++i) {\n                coords = coordinates[i];\n                for (j = 0, jj = coords.length; j < jj; ++j) {\n                    length += getLengthInternal(coords[j], radius);\n                }\n            }\n            break;\n        }\n        case GeometryType.GEOMETRY_COLLECTION: {\n            var geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n            for (i = 0, ii = geometries.length; i < ii; ++i) {\n                length += getLength(geometries[i], opt_options);\n            }\n            break;\n        }\n        default: {\n            throw new Error('Unsupported geometry type: ' + type);\n        }\n    }\n    return length;\n}\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs-new.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n    var area = 0;\n    var len = coordinates.length;\n    var x1 = coordinates[len - 1][0];\n    var y1 = coordinates[len - 1][1];\n    for (var i = 0; i < len; i++) {\n        var x2 = coordinates[i][0];\n        var y2 = coordinates[i][1];\n        area +=\n            toRadians(x2 - x1) *\n                (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n        x1 = x2;\n        y1 = y2;\n    }\n    return (area * radius * radius) / 2.0;\n}\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions=} opt_options Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, opt_options) {\n    var options = opt_options || {};\n    var radius = options.radius || DEFAULT_RADIUS;\n    var projection = options.projection || 'EPSG:3857';\n    var type = geometry.getType();\n    if (type !== GeometryType.GEOMETRY_COLLECTION) {\n        geometry = geometry.clone().transform(projection, 'EPSG:4326');\n    }\n    var area = 0;\n    var coordinates, coords, i, ii, j, jj;\n    switch (type) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT:\n        case GeometryType.LINE_STRING:\n        case GeometryType.MULTI_LINE_STRING:\n        case GeometryType.LINEAR_RING: {\n            break;\n        }\n        case GeometryType.POLYGON: {\n            coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (geometry).getCoordinates();\n            area = Math.abs(getAreaInternal(coordinates[0], radius));\n            for (i = 1, ii = coordinates.length; i < ii; ++i) {\n                area -= Math.abs(getAreaInternal(coordinates[i], radius));\n            }\n            break;\n        }\n        case GeometryType.MULTI_POLYGON: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            for (i = 0, ii = coordinates.length; i < ii; ++i) {\n                coords = coordinates[i];\n                area += Math.abs(getAreaInternal(coords[0], radius));\n                for (j = 1, jj = coords.length; j < jj; ++j) {\n                    area -= Math.abs(getAreaInternal(coords[j], radius));\n                }\n            }\n            break;\n        }\n        case GeometryType.GEOMETRY_COLLECTION: {\n            var geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n            for (i = 0, ii = geometries.length; i < ii; ++i) {\n                area += getArea(geometries[i], opt_options);\n            }\n            break;\n        }\n        default: {\n            throw new Error('Unsupported geometry type: ' + type);\n        }\n    }\n    return area;\n}\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, opt_radius) {\n    var radius = opt_radius || DEFAULT_RADIUS;\n    var lat1 = toRadians(c1[1]);\n    var lon1 = toRadians(c1[0]);\n    var dByR = distance / radius;\n    var lat = Math.asin(Math.sin(lat1) * Math.cos(dByR) +\n        Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing));\n    var lon = lon1 +\n        Math.atan2(Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1), Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat));\n    return [toDegrees(lon), toDegrees(lat)];\n}\n//# sourceMappingURL=sphere.js.map","/**\n * @module ol/coordinate\n */\nimport { getWidth } from './extent.js';\nimport { modulo } from './math.js';\nimport { padNumber } from './string.js';\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n    coordinate[0] += +delta[0];\n    coordinate[1] += +delta[1];\n    return coordinate;\n}\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n    var r = circle.getRadius();\n    var center = circle.getCenter();\n    var x0 = center[0];\n    var y0 = center[1];\n    var x1 = coordinate[0];\n    var y1 = coordinate[1];\n    var dx = x1 - x0;\n    var dy = y1 - y0;\n    if (dx === 0 && dy === 0) {\n        dx = 1;\n    }\n    var d = Math.sqrt(dx * dx + dy * dy);\n    var x = x0 + (r * dx) / d;\n    var y = y0 + (r * dy) / d;\n    return [x, y];\n}\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n    var x0 = coordinate[0];\n    var y0 = coordinate[1];\n    var start = segment[0];\n    var end = segment[1];\n    var x1 = start[0];\n    var y1 = start[1];\n    var x2 = end[0];\n    var y2 = end[1];\n    var dx = x2 - x1;\n    var dy = y2 - y1;\n    var along = dx === 0 && dy === 0\n        ? 0\n        : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n    var x, y;\n    if (along <= 0) {\n        x = x1;\n        y = y1;\n    }\n    else if (along >= 1) {\n        x = x2;\n        y = y2;\n    }\n    else {\n        x = x1 + along * dx;\n        y = y1 + along * dy;\n    }\n    return [x, y];\n}\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(opt_fractionDigits) {\n    return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n        return toStringXY(coordinate, opt_fractionDigits);\n    });\n}\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n    var normalizedDegrees = modulo(degrees + 180, 360) - 180;\n    var x = Math.abs(3600 * normalizedDegrees);\n    var dflPrecision = opt_fractionDigits || 0;\n    var precision = Math.pow(10, dflPrecision);\n    var deg = Math.floor(x / 3600);\n    var min = Math.floor((x - deg * 3600) / 60);\n    var sec = x - deg * 3600 - min * 60;\n    sec = Math.ceil(sec * precision) / precision;\n    if (sec >= 60) {\n        sec = 0;\n        min += 1;\n    }\n    if (min >= 60) {\n        min = 0;\n        deg += 1;\n    }\n    return (deg +\n        '\\u00b0 ' +\n        padNumber(min, 2) +\n        '\\u2032 ' +\n        padNumber(sec, 2, dflPrecision) +\n        '\\u2033' +\n        (normalizedDegrees == 0\n            ? ''\n            : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0)));\n}\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, opt_fractionDigits) {\n    if (coordinate) {\n        return template\n            .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n            .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n    }\n    else {\n        return '';\n    }\n}\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n    var equals = true;\n    for (var i = coordinate1.length - 1; i >= 0; --i) {\n        if (coordinate1[i] != coordinate2[i]) {\n            equals = false;\n            break;\n        }\n    }\n    return equals;\n}\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n    var cosAngle = Math.cos(angle);\n    var sinAngle = Math.sin(angle);\n    var x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n    var y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n    coordinate[0] = x;\n    coordinate[1] = y;\n    return coordinate;\n}\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n    coordinate[0] *= scale;\n    coordinate[1] *= scale;\n    return coordinate;\n}\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n    var dx = coord1[0] - coord2[0];\n    var dy = coord1[1] - coord2[1];\n    return dx * dx + dy * dy;\n}\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n    return Math.sqrt(squaredDistance(coord1, coord2));\n}\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n    return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n    if (coordinate) {\n        return (degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) +\n            ' ' +\n            degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits));\n    }\n    else {\n        return '';\n    }\n}\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, opt_fractionDigits) {\n    return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n    if (projection.canWrapX()) {\n        var worldWidth = getWidth(projection.getExtent());\n        var worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n        if (worldsAway) {\n            coordinate[0] -= worldsAway * worldWidth;\n        }\n    }\n    return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number=} opt_sourceExtentWidth Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, opt_sourceExtentWidth) {\n    var projectionExtent = projection.getExtent();\n    var worldsAway = 0;\n    if (projection.canWrapX() &&\n        (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])) {\n        var sourceExtentWidth = opt_sourceExtentWidth || getWidth(projectionExtent);\n        worldsAway = Math.floor((coordinate[0] - projectionExtent[0]) / sourceExtentWidth);\n    }\n    return worldsAway;\n}\n//# sourceMappingURL=coordinate.js.map","/**\n * @module ol/proj\n */\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj~addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection} object for the new projection and add it with\n * {@link module:ol/proj~addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj~addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection} with\n * {@link module:ol/proj~addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport Units, { METERS_PER_UNIT } from './proj/Units.js';\nimport { PROJECTIONS as EPSG3857_PROJECTIONS, fromEPSG4326, toEPSG4326, } from './proj/epsg3857.js';\nimport { PROJECTIONS as EPSG4326_PROJECTIONS } from './proj/epsg4326.js';\nimport { add as addProj, clear as clearProj, get as getProj, } from './proj/projections.js';\nimport { add as addTransformFunc, clear as clearTransformFuncs, get as getTransformFunc, } from './proj/transforms.js';\nimport { applyTransform, getWidth } from './extent.js';\nimport { clamp, modulo } from './math.js';\nimport { getDistance } from './sphere.js';\nimport { getWorldsAway } from './coordinate.js';\n/**\n * A projection as {@link module:ol/proj/Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\nexport { METERS_PER_UNIT };\nexport { Projection };\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, opt_output, opt_dimension) {\n    var output;\n    if (opt_output !== undefined) {\n        for (var i = 0, ii = input.length; i < ii; ++i) {\n            opt_output[i] = input[i];\n        }\n        output = opt_output;\n    }\n    else {\n        output = input.slice();\n    }\n    return output;\n}\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, opt_output, opt_dimension) {\n    if (opt_output !== undefined && input !== opt_output) {\n        for (var i = 0, ii = input.length; i < ii; ++i) {\n            opt_output[i] = input[i];\n        }\n        input = opt_output;\n    }\n    return input;\n}\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n    addProj(projection.getCode(), projection);\n    addTransformFunc(projection, projection, cloneTransform);\n}\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n    projections.forEach(addProjection);\n}\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n    return typeof projectionLike === 'string'\n        ? getProj(/** @type {string} */ (projectionLike))\n        : /** @type {Projection} */ (projectionLike) || null;\n}\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the 'point' pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").default=} opt_units Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, opt_units) {\n    projection = get(projection);\n    var pointResolution;\n    var getter = projection.getPointResolutionFunc();\n    if (getter) {\n        pointResolution = getter(resolution, point);\n        if (opt_units && opt_units !== projection.getUnits()) {\n            var metersPerUnit = projection.getMetersPerUnit();\n            if (metersPerUnit) {\n                pointResolution =\n                    (pointResolution * metersPerUnit) / METERS_PER_UNIT[opt_units];\n            }\n        }\n    }\n    else {\n        var units = projection.getUnits();\n        if ((units == Units.DEGREES && !opt_units) || opt_units == Units.DEGREES) {\n            pointResolution = resolution;\n        }\n        else {\n            // Estimate point resolution by transforming the center pixel to EPSG:4326,\n            // measuring its width and height on the normal sphere, and taking the\n            // average of the width and height.\n            var toEPSG4326_1 = getTransformFromProjections(projection, get('EPSG:4326'));\n            if (toEPSG4326_1 === identityTransform && units !== Units.DEGREES) {\n                // no transform is available\n                pointResolution = resolution * projection.getMetersPerUnit();\n            }\n            else {\n                var vertices = [\n                    point[0] - resolution / 2,\n                    point[1],\n                    point[0] + resolution / 2,\n                    point[1],\n                    point[0],\n                    point[1] - resolution / 2,\n                    point[0],\n                    point[1] + resolution / 2,\n                ];\n                vertices = toEPSG4326_1(vertices, vertices, 2);\n                var width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n                var height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n                pointResolution = (width + height) / 2;\n            }\n            var metersPerUnit = opt_units\n                ? METERS_PER_UNIT[opt_units]\n                : projection.getMetersPerUnit();\n            if (metersPerUnit !== undefined) {\n                pointResolution /= metersPerUnit;\n            }\n        }\n    }\n    return pointResolution;\n}\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n    addProjections(projections);\n    projections.forEach(function (source) {\n        projections.forEach(function (destination) {\n            if (source !== destination) {\n                addTransformFunc(source, destination, cloneTransform);\n            }\n        });\n    });\n}\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(projections1, projections2, forwardTransform, inverseTransform) {\n    projections1.forEach(function (projection1) {\n        projections2.forEach(function (projection2) {\n            addTransformFunc(projection1, projection2, forwardTransform);\n            addTransformFunc(projection2, projection1, inverseTransform);\n        });\n    });\n}\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n    clearProj();\n    clearTransformFuncs();\n}\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n    if (!projection) {\n        return get(defaultCode);\n    }\n    else if (typeof projection === 'string') {\n        return get(projection);\n    }\n    else {\n        return /** @type {Projection} */ (projection);\n    }\n}\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n    return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>=} opt_output Output.\n     * @param {number=} opt_dimension Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, opt_output, opt_dimension) {\n        var length = input.length;\n        var dimension = opt_dimension !== undefined ? opt_dimension : 2;\n        var output = opt_output !== undefined ? opt_output : new Array(length);\n        for (var i = 0; i < length; i += dimension) {\n            var point = coordTransform([input[i], input[i + 1]]);\n            output[i] = point[0];\n            output[i + 1] = point[1];\n            for (var j = dimension - 1; j >= 2; --j) {\n                output[i + j] = input[i + j];\n            }\n        }\n        return output;\n    });\n}\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n    var sourceProj = get(source);\n    var destProj = get(destination);\n    addTransformFunc(sourceProj, destProj, createTransformFromCoordinateTransform(forward));\n    addTransformFunc(destProj, sourceProj, createTransformFromCoordinateTransform(inverse));\n}\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike=} opt_projection Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, opt_projection) {\n    return transform(coordinate, 'EPSG:4326', opt_projection !== undefined ? opt_projection : 'EPSG:3857');\n}\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike=} opt_projection Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, opt_projection) {\n    var lonLat = transform(coordinate, opt_projection !== undefined ? opt_projection : 'EPSG:3857', 'EPSG:4326');\n    var lon = lonLat[0];\n    if (lon < -180 || lon > 180) {\n        lonLat[0] = modulo(lon + 180, 360) - 180;\n    }\n    return lonLat;\n}\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n    if (projection1 === projection2) {\n        return true;\n    }\n    var equalUnits = projection1.getUnits() === projection2.getUnits();\n    if (projection1.getCode() === projection2.getCode()) {\n        return equalUnits;\n    }\n    else {\n        var transformFunc = getTransformFromProjections(projection1, projection2);\n        return transformFunc === cloneTransform && equalUnits;\n    }\n}\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(sourceProjection, destinationProjection) {\n    var sourceCode = sourceProjection.getCode();\n    var destinationCode = destinationProjection.getCode();\n    var transformFunc = getTransformFunc(sourceCode, destinationCode);\n    if (!transformFunc) {\n        transformFunc = identityTransform;\n    }\n    return transformFunc;\n}\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n    var sourceProjection = get(source);\n    var destinationProjection = get(destination);\n    return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj~transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n    var transformFunc = getTransform(source, destination);\n    return transformFunc(coordinate, undefined, coordinate.length);\n}\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number=} opt_stops Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, opt_stops) {\n    var transformFunc = getTransform(source, destination);\n    return applyTransform(extent, transformFunc, undefined, opt_stops);\n}\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(point, sourceProjection, destinationProjection) {\n    var transformFunc = getTransformFromProjections(sourceProjection, destinationProjection);\n    return transformFunc(point);\n}\n/**\n * @type {?Projection}\n */\nvar userProjection = null;\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @param {ProjectionLike} projection The user projection.\n */\nexport function setUserProjection(projection) {\n    userProjection = get(projection);\n}\n/**\n * Clear the user projection if set.  Note that this method is not yet a part of\n * the stable API.  Support for user projections is not yet complete and should\n * be considered experimental.\n */\nexport function clearUserProjection() {\n    userProjection = null;\n}\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @returns {?Projection} The user projection (or null if not set).\n */\nexport function getUserProjection() {\n    return userProjection;\n}\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.  Note that this\n * method is not yet a part of the stable API.  Support for user projections is\n * not yet complete and should be considered experimental.\n */\nexport function useGeographic() {\n    setUserProjection('EPSG:4326');\n}\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @returns {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n    if (!userProjection) {\n        return coordinate;\n    }\n    return transform(coordinate, sourceProjection, userProjection);\n}\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @returns {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n    if (!userProjection) {\n        return coordinate;\n    }\n    return transform(coordinate, userProjection, destProjection);\n}\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @returns {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n    if (!userProjection) {\n        return extent;\n    }\n    return transformExtent(extent, sourceProjection, userProjection);\n}\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @returns {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n    if (!userProjection) {\n        return extent;\n    }\n    return transformExtent(extent, userProjection, destProjection);\n}\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destiation).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destiation).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n    return function (coord) {\n        var sourceX = coord[0];\n        var sourceY = coord[1];\n        var transformed, worldsAway;\n        if (sourceProj.canWrapX()) {\n            var sourceExtent = sourceProj.getExtent();\n            var sourceExtentWidth = getWidth(sourceExtent);\n            worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n            if (worldsAway) {\n                // Move x to the real world\n                sourceX = sourceX - worldsAway * sourceExtentWidth;\n            }\n            sourceX = clamp(sourceX, sourceExtent[0], sourceExtent[2]);\n            sourceY = clamp(sourceY, sourceExtent[1], sourceExtent[3]);\n            transformed = transform([sourceX, sourceY]);\n        }\n        else {\n            transformed = transform(coord);\n        }\n        if (worldsAway && destProj.canWrapX()) {\n            // Move transformed coordinate back to the offset world\n            transformed[0] += worldsAway * getWidth(destProj.getExtent());\n        }\n        return transformed;\n    };\n}\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n    // Add transformations that don't alter coordinates to convert within set of\n    // projections with equal meaning.\n    addEquivalentProjections(EPSG3857_PROJECTIONS);\n    addEquivalentProjections(EPSG4326_PROJECTIONS);\n    // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n    // coordinates and back.\n    addEquivalentTransforms(EPSG4326_PROJECTIONS, EPSG3857_PROJECTIONS, fromEPSG4326, toEPSG4326);\n}\naddCommon();\n//# sourceMappingURL=proj.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/ImageLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport ViewHint from '../../ViewHint.js';\nimport { ENABLE_RASTER_REPROJECTION } from '../../reproj/common.js';\nimport { assign } from '../../obj.js';\nimport { compose as composeTransform, makeInverse } from '../../transform.js';\nimport { containsExtent, intersects } from '../../extent.js';\nimport { createTransformString } from '../../render/canvas.js';\nimport { fromUserExtent } from '../../proj.js';\nimport { getIntersection, isEmpty } from '../../extent.js';\n/**\n * @classdesc\n * Canvas renderer for image layers.\n * @api\n */\nvar CanvasImageLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasImageLayerRenderer, _super);\n    /**\n     * @param {import(\"../../layer/Image.js\").default} imageLayer Image layer.\n     */\n    function CanvasImageLayerRenderer(imageLayer) {\n        var _this = _super.call(this, imageLayer) || this;\n        /**\n         * @protected\n         * @type {?import(\"../../ImageBase.js\").default}\n         */\n        _this.image_ = null;\n        return _this;\n    }\n    /**\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n     */\n    CanvasImageLayerRenderer.prototype.getImage = function () {\n        return !this.image_ ? null : this.image_.getImage();\n    };\n    /**\n     * Determine whether render should be called.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {boolean} Layer is ready to be rendered.\n     */\n    CanvasImageLayerRenderer.prototype.prepareFrame = function (frameState) {\n        var layerState = frameState.layerStatesArray[frameState.layerIndex];\n        var pixelRatio = frameState.pixelRatio;\n        var viewState = frameState.viewState;\n        var viewResolution = viewState.resolution;\n        var imageSource = this.getLayer().getSource();\n        var hints = frameState.viewHints;\n        var renderedExtent = frameState.extent;\n        if (layerState.extent !== undefined) {\n            renderedExtent = getIntersection(renderedExtent, fromUserExtent(layerState.extent, viewState.projection));\n        }\n        if (!hints[ViewHint.ANIMATING] &&\n            !hints[ViewHint.INTERACTING] &&\n            !isEmpty(renderedExtent)) {\n            if (imageSource) {\n                var projection = viewState.projection;\n                if (!ENABLE_RASTER_REPROJECTION) {\n                    var sourceProjection = imageSource.getProjection();\n                    if (sourceProjection) {\n                        projection = sourceProjection;\n                    }\n                }\n                var image = imageSource.getImage(renderedExtent, viewResolution, pixelRatio, projection);\n                if (image && this.loadImage(image)) {\n                    this.image_ = image;\n                }\n            }\n            else {\n                this.image_ = null;\n            }\n        }\n        return !!this.image_;\n    };\n    /**\n     * Render the layer.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {HTMLElement} target Target that may be used to render content to.\n     * @return {HTMLElement} The rendered element.\n     */\n    CanvasImageLayerRenderer.prototype.renderFrame = function (frameState, target) {\n        var image = this.image_;\n        var imageExtent = image.getExtent();\n        var imageResolution = image.getResolution();\n        var imagePixelRatio = image.getPixelRatio();\n        var layerState = frameState.layerStatesArray[frameState.layerIndex];\n        var pixelRatio = frameState.pixelRatio;\n        var viewState = frameState.viewState;\n        var viewCenter = viewState.center;\n        var viewResolution = viewState.resolution;\n        var size = frameState.size;\n        var scale = (pixelRatio * imageResolution) / (viewResolution * imagePixelRatio);\n        var width = Math.round(size[0] * pixelRatio);\n        var height = Math.round(size[1] * pixelRatio);\n        var rotation = viewState.rotation;\n        if (rotation) {\n            var size_1 = Math.round(Math.sqrt(width * width + height * height));\n            width = size_1;\n            height = size_1;\n        }\n        // set forward and inverse pixel transforms\n        composeTransform(this.pixelTransform, frameState.size[0] / 2, frameState.size[1] / 2, 1 / pixelRatio, 1 / pixelRatio, rotation, -width / 2, -height / 2);\n        makeInverse(this.inversePixelTransform, this.pixelTransform);\n        var canvasTransform = createTransformString(this.pixelTransform);\n        this.useContainer(target, canvasTransform, layerState.opacity);\n        var context = this.context;\n        var canvas = context.canvas;\n        if (canvas.width != width || canvas.height != height) {\n            canvas.width = width;\n            canvas.height = height;\n        }\n        else if (!this.containerReused) {\n            context.clearRect(0, 0, width, height);\n        }\n        // clipped rendering if layer extent is set\n        var clipped = false;\n        if (layerState.extent) {\n            var layerExtent = fromUserExtent(layerState.extent, viewState.projection);\n            clipped =\n                !containsExtent(layerExtent, frameState.extent) &&\n                    intersects(layerExtent, frameState.extent);\n            if (clipped) {\n                this.clipUnrotated(context, frameState, layerExtent);\n            }\n        }\n        var img = image.getImage();\n        var transform = composeTransform(this.tempTransform, width / 2, height / 2, scale, scale, 0, (imagePixelRatio * (imageExtent[0] - viewCenter[0])) / imageResolution, (imagePixelRatio * (viewCenter[1] - imageExtent[3])) / imageResolution);\n        this.renderedResolution = (imageResolution * pixelRatio) / imagePixelRatio;\n        var dx = transform[4];\n        var dy = transform[5];\n        var dw = img.width * transform[0];\n        var dh = img.height * transform[3];\n        assign(context, this.getLayer().getSource().getContextOptions());\n        this.preRender(context, frameState);\n        if (dw >= 0.5 && dh >= 0.5) {\n            var opacity = layerState.opacity;\n            var previousAlpha = void 0;\n            if (opacity !== 1) {\n                previousAlpha = this.context.globalAlpha;\n                this.context.globalAlpha = opacity;\n            }\n            this.context.drawImage(img, 0, 0, +img.width, +img.height, Math.round(dx), Math.round(dy), Math.round(dw), Math.round(dh));\n            if (opacity !== 1) {\n                this.context.globalAlpha = previousAlpha;\n            }\n        }\n        this.postRender(context, frameState);\n        if (clipped) {\n            context.restore();\n        }\n        if (canvasTransform !== canvas.style.transform) {\n            canvas.style.transform = canvasTransform;\n        }\n        return this.container;\n    };\n    return CanvasImageLayerRenderer;\n}(CanvasLayerRenderer));\nexport default CanvasImageLayerRenderer;\n//# sourceMappingURL=ImageLayer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Image\n */\nimport BaseImageLayer from './BaseImage.js';\nimport CanvasImageLayerRenderer from '../renderer/canvas/ImageLayer.js';\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @api\n */\nvar ImageLayer = /** @class */ (function (_super) {\n    __extends(ImageLayer, _super);\n    /**\n     * @param {import(\"./BaseImage.js\").Options=} opt_options Layer options.\n     */\n    function ImageLayer(opt_options) {\n        return _super.call(this, opt_options) || this;\n    }\n    /**\n     * Create a renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n     */\n    ImageLayer.prototype.createRenderer = function () {\n        return new CanvasImageLayerRenderer(this);\n    };\n    return ImageLayer;\n}(BaseImageLayer));\nexport default ImageLayer;\n//# sourceMappingURL=Image.js.map","/**\n * @module ol/source/common\n */\n/**\n * Default WMS version.\n * @type {string}\n */\nexport var DEFAULT_WMS_VERSION = '1.3.0';\n/**\n * Context options to disable image smoothing.\n * @type {Object}\n */\nexport var IMAGE_SMOOTHING_DISABLED = {\n    imageSmoothingEnabled: false,\n    msImageSmoothingEnabled: false,\n};\n//# sourceMappingURL=common.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/ImageBase\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport { abstract } from './util.js';\n/**\n * @abstract\n */\nvar ImageBase = /** @class */ (function (_super) {\n    __extends(ImageBase, _super);\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./ImageState.js\").default} state State.\n     */\n    function ImageBase(extent, resolution, pixelRatio, state) {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {import(\"./extent.js\").Extent}\n         */\n        _this.extent = extent;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ = pixelRatio;\n        /**\n         * @protected\n         * @type {number|undefined}\n         */\n        _this.resolution = resolution;\n        /**\n         * @protected\n         * @type {import(\"./ImageState.js\").default}\n         */\n        _this.state = state;\n        return _this;\n    }\n    /**\n     * @protected\n     */\n    ImageBase.prototype.changed = function () {\n        this.dispatchEvent(EventType.CHANGE);\n    };\n    /**\n     * @return {import(\"./extent.js\").Extent} Extent.\n     */\n    ImageBase.prototype.getExtent = function () {\n        return this.extent;\n    };\n    /**\n     * @abstract\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n     */\n    ImageBase.prototype.getImage = function () {\n        return abstract();\n    };\n    /**\n     * @return {number} PixelRatio.\n     */\n    ImageBase.prototype.getPixelRatio = function () {\n        return this.pixelRatio_;\n    };\n    /**\n     * @return {number} Resolution.\n     */\n    ImageBase.prototype.getResolution = function () {\n        return /** @type {number} */ (this.resolution);\n    };\n    /**\n     * @return {import(\"./ImageState.js\").default} State.\n     */\n    ImageBase.prototype.getState = function () {\n        return this.state;\n    };\n    /**\n     * Load not yet loaded URI.\n     * @abstract\n     */\n    ImageBase.prototype.load = function () {\n        abstract();\n    };\n    return ImageBase;\n}(EventTarget));\nexport default ImageBase;\n//# sourceMappingURL=ImageBase.js.map","/**\n * @module ol/reproj\n */\nimport { IMAGE_SMOOTHING_DISABLED } from './source/common.js';\nimport { assign } from './obj.js';\nimport { containsCoordinate, createEmpty, extend, forEachCorner, getCenter, getHeight, getTopLeft, getWidth, } from './extent.js';\nimport { createCanvasContext2D } from './dom.js';\nimport { getPointResolution, transform } from './proj.js';\nimport { solveLinearSystem } from './math.js';\nvar brokenDiagonalRendering_;\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n    ctx.beginPath();\n    ctx.moveTo(0, 0);\n    ctx.lineTo(u1, v1);\n    ctx.lineTo(u2, v2);\n    ctx.closePath();\n    ctx.save();\n    ctx.clip();\n    ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n    ctx.restore();\n}\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n    // the values ought to be close to the rgba(210, 0, 0, 0.75)\n    return (Math.abs(data[offset * 4] - 210) > 2 ||\n        Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2);\n}\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * IE also doesn't. Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n    if (brokenDiagonalRendering_ === undefined) {\n        var ctx = document.createElement('canvas').getContext('2d');\n        ctx.globalCompositeOperation = 'lighter';\n        ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n        drawTestTriangle(ctx, 4, 5, 4, 0);\n        drawTestTriangle(ctx, 4, 5, 0, 5);\n        var data = ctx.getImageData(0, 0, 3, 3).data;\n        brokenDiagonalRendering_ =\n            verifyBrokenDiagonalRendering(data, 0) ||\n                verifyBrokenDiagonalRendering(data, 4) ||\n                verifyBrokenDiagonalRendering(data, 8);\n    }\n    return brokenDiagonalRendering_;\n}\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(sourceProj, targetProj, targetCenter, targetResolution) {\n    var sourceCenter = transform(targetCenter, targetProj, sourceProj);\n    // calculate the ideal resolution of the source data\n    var sourceResolution = getPointResolution(targetProj, targetResolution, targetCenter);\n    var targetMetersPerUnit = targetProj.getMetersPerUnit();\n    if (targetMetersPerUnit !== undefined) {\n        sourceResolution *= targetMetersPerUnit;\n    }\n    var sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n    if (sourceMetersPerUnit !== undefined) {\n        sourceResolution /= sourceMetersPerUnit;\n    }\n    // Based on the projection properties, the point resolution at the specified\n    // coordinates may be slightly different. We need to reverse-compensate this\n    // in order to achieve optimal results.\n    var sourceExtent = sourceProj.getExtent();\n    if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n        var compensationFactor = getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n            sourceResolution;\n        if (isFinite(compensationFactor) && compensationFactor > 0) {\n            sourceResolution /= compensationFactor;\n        }\n    }\n    return sourceResolution;\n}\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(sourceProj, targetProj, targetExtent, targetResolution) {\n    var targetCenter = getCenter(targetExtent);\n    var sourceResolution = calculateSourceResolution(sourceProj, targetProj, targetCenter, targetResolution);\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n        forEachCorner(targetExtent, function (corner) {\n            sourceResolution = calculateSourceResolution(sourceProj, targetProj, corner, targetResolution);\n            return isFinite(sourceResolution) && sourceResolution > 0;\n        });\n    }\n    return sourceResolution;\n}\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation\n * Calculated triangulation.\n * @param {Array<{extent: import(\"./extent.js\").Extent,\n *                 image: (HTMLCanvasElement|HTMLImageElement|HTMLVideoElement)}>} sources\n * Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean=} opt_renderEdges Render reprojection edges.\n * @param {object=} opt_contextOptions Properties to set on the canvas context.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(width, height, pixelRatio, sourceResolution, sourceExtent, targetResolution, targetExtent, triangulation, sources, gutter, opt_renderEdges, opt_contextOptions) {\n    var context = createCanvasContext2D(Math.round(pixelRatio * width), Math.round(pixelRatio * height));\n    assign(context, opt_contextOptions);\n    if (sources.length === 0) {\n        return context.canvas;\n    }\n    context.scale(pixelRatio, pixelRatio);\n    function pixelRound(value) {\n        return Math.round(value * pixelRatio) / pixelRatio;\n    }\n    context.globalCompositeOperation = 'lighter';\n    var sourceDataExtent = createEmpty();\n    sources.forEach(function (src, i, arr) {\n        extend(sourceDataExtent, src.extent);\n    });\n    var canvasWidthInUnits = getWidth(sourceDataExtent);\n    var canvasHeightInUnits = getHeight(sourceDataExtent);\n    var stitchContext = createCanvasContext2D(Math.round((pixelRatio * canvasWidthInUnits) / sourceResolution), Math.round((pixelRatio * canvasHeightInUnits) / sourceResolution));\n    assign(stitchContext, opt_contextOptions);\n    var stitchScale = pixelRatio / sourceResolution;\n    sources.forEach(function (src, i, arr) {\n        var xPos = src.extent[0] - sourceDataExtent[0];\n        var yPos = -(src.extent[3] - sourceDataExtent[3]);\n        var srcWidth = getWidth(src.extent);\n        var srcHeight = getHeight(src.extent);\n        // This test should never fail -- but it does. Need to find a fix the upstream condition\n        if (src.image.width > 0 && src.image.height > 0) {\n            stitchContext.drawImage(src.image, gutter, gutter, src.image.width - 2 * gutter, src.image.height - 2 * gutter, xPos * stitchScale, yPos * stitchScale, srcWidth * stitchScale, srcHeight * stitchScale);\n        }\n    });\n    var targetTopLeft = getTopLeft(targetExtent);\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n        /* Calculate affine transform (src -> dst)\n         * Resulting matrix can be used to transform coordinate\n         * from `sourceProjection` to destination pixels.\n         *\n         * To optimize number of context calls and increase numerical stability,\n         * we also do the following operations:\n         * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n         * here before solving the linear system so [ui, vi] are pixel coordinates.\n         *\n         * Src points: xi, yi\n         * Dst points: ui, vi\n         * Affine coefficients: aij\n         *\n         * | x0 y0 1  0  0 0 |   |a00|   |u0|\n         * | x1 y1 1  0  0 0 |   |a01|   |u1|\n         * | x2 y2 1  0  0 0 | x |a02| = |u2|\n         * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n         * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n         * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n         */\n        var source = triangle.source;\n        var target = triangle.target;\n        var x0 = source[0][0], y0 = source[0][1];\n        var x1 = source[1][0], y1 = source[1][1];\n        var x2 = source[2][0], y2 = source[2][1];\n        // Make sure that everything is on pixel boundaries\n        var u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n        var v0 = pixelRound(-(target[0][1] - targetTopLeft[1]) / targetResolution);\n        var u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n        var v1 = pixelRound(-(target[1][1] - targetTopLeft[1]) / targetResolution);\n        var u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n        var v2 = pixelRound(-(target[2][1] - targetTopLeft[1]) / targetResolution);\n        // Shift all the source points to improve numerical stability\n        // of all the subsequent calculations. The [x0, y0] is used here.\n        // This is also used to simplify the linear system.\n        var sourceNumericalShiftX = x0;\n        var sourceNumericalShiftY = y0;\n        x0 = 0;\n        y0 = 0;\n        x1 -= sourceNumericalShiftX;\n        y1 -= sourceNumericalShiftY;\n        x2 -= sourceNumericalShiftX;\n        y2 -= sourceNumericalShiftY;\n        var augmentedMatrix = [\n            [x1, y1, 0, 0, u1 - u0],\n            [x2, y2, 0, 0, u2 - u0],\n            [0, 0, x1, y1, v1 - v0],\n            [0, 0, x2, y2, v2 - v0],\n        ];\n        var affineCoefs = solveLinearSystem(augmentedMatrix);\n        if (!affineCoefs) {\n            return;\n        }\n        context.save();\n        context.beginPath();\n        if (isBrokenDiagonalRendering() ||\n            opt_contextOptions === IMAGE_SMOOTHING_DISABLED) {\n            // Make sure that all lines are horizontal or vertical\n            context.moveTo(u1, v1);\n            // This is the diagonal line. Do it in 4 steps\n            var steps = 4;\n            var ud = u0 - u1;\n            var vd = v0 - v1;\n            for (var step = 0; step < steps; step++) {\n                // Go horizontally\n                context.lineTo(u1 + pixelRound(((step + 1) * ud) / steps), v1 + pixelRound((step * vd) / (steps - 1)));\n                // Go vertically\n                if (step != steps - 1) {\n                    context.lineTo(u1 + pixelRound(((step + 1) * ud) / steps), v1 + pixelRound(((step + 1) * vd) / (steps - 1)));\n                }\n            }\n            // We are almost at u0r, v0r\n            context.lineTo(u2, v2);\n        }\n        else {\n            context.moveTo(u1, v1);\n            context.lineTo(u0, v0);\n            context.lineTo(u2, v2);\n        }\n        context.clip();\n        context.transform(affineCoefs[0], affineCoefs[2], affineCoefs[1], affineCoefs[3], u0, v0);\n        context.translate(sourceDataExtent[0] - sourceNumericalShiftX, sourceDataExtent[3] - sourceNumericalShiftY);\n        context.scale(sourceResolution / pixelRatio, -sourceResolution / pixelRatio);\n        context.drawImage(stitchContext.canvas, 0, 0);\n        context.restore();\n    });\n    if (opt_renderEdges) {\n        context.save();\n        context.globalCompositeOperation = 'source-over';\n        context.strokeStyle = 'black';\n        context.lineWidth = 1;\n        triangulation.getTriangles().forEach(function (triangle, i, arr) {\n            var target = triangle.target;\n            var u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n            var v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n            var u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n            var v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n            var u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n            var v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n            context.beginPath();\n            context.moveTo(u1, v1);\n            context.lineTo(u0, v0);\n            context.lineTo(u2, v2);\n            context.closePath();\n            context.stroke();\n        });\n        context.restore();\n    }\n    return context.canvas;\n}\n//# sourceMappingURL=reproj.js.map","/**\n * @module ol/reproj/Triangulation\n */\nimport { boundingExtent, createEmpty, extendCoordinate, getArea, getBottomLeft, getBottomRight, getTopLeft, getTopRight, getWidth, intersects, } from '../extent.js';\nimport { getTransform } from '../proj.js';\nimport { log2, modulo } from '../math.js';\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target\n */\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nvar MAX_SUBDIVISION = 10;\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nvar MAX_TRIANGLE_WIDTH = 0.25;\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nvar Triangulation = /** @class */ (function () {\n    /**\n     * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n     * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n     * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n     * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n     * @param {number} errorThreshold Acceptable error (in source units).\n     * @param {?number} opt_destinationResolution The (optional) resolution of the destination.\n     */\n    function Triangulation(sourceProj, targetProj, targetExtent, maxSourceExtent, errorThreshold, opt_destinationResolution) {\n        /**\n         * @type {import(\"../proj/Projection.js\").default}\n         * @private\n         */\n        this.sourceProj_ = sourceProj;\n        /**\n         * @type {import(\"../proj/Projection.js\").default}\n         * @private\n         */\n        this.targetProj_ = targetProj;\n        /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n        var transformInvCache = {};\n        var transformInv = getTransform(this.targetProj_, this.sourceProj_);\n        /**\n         * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n         * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n         * @private\n         */\n        this.transformInv_ = function (c) {\n            var key = c[0] + '/' + c[1];\n            if (!transformInvCache[key]) {\n                transformInvCache[key] = transformInv(c);\n            }\n            return transformInvCache[key];\n        };\n        /**\n         * @type {import(\"../extent.js\").Extent}\n         * @private\n         */\n        this.maxSourceExtent_ = maxSourceExtent;\n        /**\n         * @type {number}\n         * @private\n         */\n        this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n        /**\n         * @type {Array<Triangle>}\n         * @private\n         */\n        this.triangles_ = [];\n        /**\n         * Indicates that the triangulation crosses edge of the source projection.\n         * @type {boolean}\n         * @private\n         */\n        this.wrapsXInSource_ = false;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this.canWrapXInSource_ =\n            this.sourceProj_.canWrapX() &&\n                !!maxSourceExtent &&\n                !!this.sourceProj_.getExtent() &&\n                getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent());\n        /**\n         * @type {?number}\n         * @private\n         */\n        this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n            ? getWidth(this.sourceProj_.getExtent())\n            : null;\n        /**\n         * @type {?number}\n         * @private\n         */\n        this.targetWorldWidth_ = this.targetProj_.getExtent()\n            ? getWidth(this.targetProj_.getExtent())\n            : null;\n        var destinationTopLeft = getTopLeft(targetExtent);\n        var destinationTopRight = getTopRight(targetExtent);\n        var destinationBottomRight = getBottomRight(targetExtent);\n        var destinationBottomLeft = getBottomLeft(targetExtent);\n        var sourceTopLeft = this.transformInv_(destinationTopLeft);\n        var sourceTopRight = this.transformInv_(destinationTopRight);\n        var sourceBottomRight = this.transformInv_(destinationBottomRight);\n        var sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n        /*\n         * The maxSubdivision controls how many splittings of the target area can\n         * be done. The idea here is to do a linear mapping of the target areas\n         * but the actual overal reprojection (can be) extremely non-linear. The\n         * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n         * tile size. However this function is also called to remap canvas rendered\n         * layers which can be much larger. This calculation increases the maxSubdivision\n         * value by the right factor so that each 256x256 pixel area has\n         * MAX_SUBDIVISION divisions.\n         */\n        var maxSubdivision = MAX_SUBDIVISION +\n            (opt_destinationResolution\n                ? Math.max(0, Math.ceil(log2(getArea(targetExtent) /\n                    (opt_destinationResolution *\n                        opt_destinationResolution *\n                        256 *\n                        256))))\n                : 0);\n        this.addQuad_(destinationTopLeft, destinationTopRight, destinationBottomRight, destinationBottomLeft, sourceTopLeft, sourceTopRight, sourceBottomRight, sourceBottomLeft, maxSubdivision);\n        if (this.wrapsXInSource_) {\n            var leftBound_1 = Infinity;\n            this.triangles_.forEach(function (triangle, i, arr) {\n                leftBound_1 = Math.min(leftBound_1, triangle.source[0][0], triangle.source[1][0], triangle.source[2][0]);\n            });\n            // Shift triangles to be as close to `leftBound` as possible\n            // (if the distance is more than `worldWidth / 2` it can be closer.\n            this.triangles_.forEach(function (triangle) {\n                if (Math.max(triangle.source[0][0], triangle.source[1][0], triangle.source[2][0]) -\n                    leftBound_1 >\n                    this.sourceWorldWidth_ / 2) {\n                    var newTriangle = [\n                        [triangle.source[0][0], triangle.source[0][1]],\n                        [triangle.source[1][0], triangle.source[1][1]],\n                        [triangle.source[2][0], triangle.source[2][1]],\n                    ];\n                    if (newTriangle[0][0] - leftBound_1 > this.sourceWorldWidth_ / 2) {\n                        newTriangle[0][0] -= this.sourceWorldWidth_;\n                    }\n                    if (newTriangle[1][0] - leftBound_1 > this.sourceWorldWidth_ / 2) {\n                        newTriangle[1][0] -= this.sourceWorldWidth_;\n                    }\n                    if (newTriangle[2][0] - leftBound_1 > this.sourceWorldWidth_ / 2) {\n                        newTriangle[2][0] -= this.sourceWorldWidth_;\n                    }\n                    // Rarely (if the extent contains both the dateline and prime meridian)\n                    // the shift can in turn break some triangles.\n                    // Detect this here and don't shift in such cases.\n                    var minX = Math.min(newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n                    var maxX = Math.max(newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n                    if (maxX - minX < this.sourceWorldWidth_ / 2) {\n                        triangle.source = newTriangle;\n                    }\n                }\n            }.bind(this));\n        }\n        transformInvCache = {};\n    }\n    /**\n     * Adds triangle to the triangulation.\n     * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n     * @private\n     */\n    Triangulation.prototype.addTriangle_ = function (a, b, c, aSrc, bSrc, cSrc) {\n        this.triangles_.push({\n            source: [aSrc, bSrc, cSrc],\n            target: [a, b, c],\n        });\n    };\n    /**\n     * Adds quad (points in clock-wise order) to the triangulation\n     * (and reprojects the vertices) if valid.\n     * Performs quad subdivision if needed to increase precision.\n     *\n     * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n     * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n     * @private\n     */\n    Triangulation.prototype.addQuad_ = function (a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n        var sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n        var sourceCoverageX = this.sourceWorldWidth_\n            ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n            : null;\n        var sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n        // when the quad is wrapped in the source projection\n        // it covers most of the projection extent, but not fully\n        var wrapsX = this.sourceProj_.canWrapX() &&\n            sourceCoverageX > 0.5 &&\n            sourceCoverageX < 1;\n        var needsSubdivision = false;\n        if (maxSubdivision > 0) {\n            if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n                var targetQuadExtent = boundingExtent([a, b, c, d]);\n                var targetCoverageX = getWidth(targetQuadExtent) / this.targetWorldWidth_;\n                needsSubdivision =\n                    targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n            }\n            if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n                needsSubdivision =\n                    sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n            }\n        }\n        if (!needsSubdivision && this.maxSourceExtent_) {\n            if (isFinite(sourceQuadExtent[0]) &&\n                isFinite(sourceQuadExtent[1]) &&\n                isFinite(sourceQuadExtent[2]) &&\n                isFinite(sourceQuadExtent[3])) {\n                if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n                    // whole quad outside source projection extent -> ignore\n                    return;\n                }\n            }\n        }\n        var isNotFinite = 0;\n        if (!needsSubdivision) {\n            if (!isFinite(aSrc[0]) ||\n                !isFinite(aSrc[1]) ||\n                !isFinite(bSrc[0]) ||\n                !isFinite(bSrc[1]) ||\n                !isFinite(cSrc[0]) ||\n                !isFinite(cSrc[1]) ||\n                !isFinite(dSrc[0]) ||\n                !isFinite(dSrc[1])) {\n                if (maxSubdivision > 0) {\n                    needsSubdivision = true;\n                }\n                else {\n                    // It might be the case that only 1 of the points is infinite. In this case\n                    // we can draw a single triangle with the other three points\n                    isNotFinite =\n                        (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n                            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n                            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n                            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n                    if (isNotFinite != 1 &&\n                        isNotFinite != 2 &&\n                        isNotFinite != 4 &&\n                        isNotFinite != 8) {\n                        return;\n                    }\n                }\n            }\n        }\n        if (maxSubdivision > 0) {\n            if (!needsSubdivision) {\n                var center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n                var centerSrc = this.transformInv_(center);\n                var dx = void 0;\n                if (wrapsX) {\n                    var centerSrcEstimX = (modulo(aSrc[0], sourceWorldWidth) +\n                        modulo(cSrc[0], sourceWorldWidth)) /\n                        2;\n                    dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n                }\n                else {\n                    dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n                }\n                var dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n                var centerSrcErrorSquared = dx * dx + dy * dy;\n                needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n            }\n            if (needsSubdivision) {\n                if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n                    // split horizontally (top & bottom)\n                    var bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n                    var bcSrc = this.transformInv_(bc);\n                    var da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n                    var daSrc = this.transformInv_(da);\n                    this.addQuad_(a, b, bc, da, aSrc, bSrc, bcSrc, daSrc, maxSubdivision - 1);\n                    this.addQuad_(da, bc, c, d, daSrc, bcSrc, cSrc, dSrc, maxSubdivision - 1);\n                }\n                else {\n                    // split vertically (left & right)\n                    var ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n                    var abSrc = this.transformInv_(ab);\n                    var cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n                    var cdSrc = this.transformInv_(cd);\n                    this.addQuad_(a, ab, cd, d, aSrc, abSrc, cdSrc, dSrc, maxSubdivision - 1);\n                    this.addQuad_(ab, b, c, cd, abSrc, bSrc, cSrc, cdSrc, maxSubdivision - 1);\n                }\n                return;\n            }\n        }\n        if (wrapsX) {\n            if (!this.canWrapXInSource_) {\n                return;\n            }\n            this.wrapsXInSource_ = true;\n        }\n        // Exactly zero or one of *Src is not finite\n        // The triangles must have the diagonal line as the first side\n        // This is to allow easy code in reproj.s to make it straight for broken\n        // browsers that can't handle diagonal clipping\n        if ((isNotFinite & 0xb) == 0) {\n            this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n        }\n        if ((isNotFinite & 0xe) == 0) {\n            this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n        }\n        if (isNotFinite) {\n            // Try the other two triangles\n            if ((isNotFinite & 0xd) == 0) {\n                this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n            }\n            if ((isNotFinite & 0x7) == 0) {\n                this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n            }\n        }\n    };\n    /**\n     * Calculates extent of the 'source' coordinates from all the triangles.\n     *\n     * @return {import(\"../extent.js\").Extent} Calculated extent.\n     */\n    Triangulation.prototype.calculateSourceExtent = function () {\n        var extent = createEmpty();\n        this.triangles_.forEach(function (triangle, i, arr) {\n            var src = triangle.source;\n            extendCoordinate(extent, src[0]);\n            extendCoordinate(extent, src[1]);\n            extendCoordinate(extent, src[2]);\n        });\n        return extent;\n    };\n    /**\n     * @return {Array<Triangle>} Array of the calculated triangles.\n     */\n    Triangulation.prototype.getTriangles = function () {\n        return this.triangles_;\n    };\n    return Triangulation;\n}());\nexport default Triangulation;\n//# sourceMappingURL=Triangulation.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/reproj/Image\n */\nimport { ERROR_THRESHOLD } from './common.js';\nimport EventType from '../events/EventType.js';\nimport ImageBase from '../ImageBase.js';\nimport ImageState from '../ImageState.js';\nimport Triangulation from './Triangulation.js';\nimport { calculateSourceResolution, render as renderReprojected, } from '../reproj.js';\nimport { getCenter, getHeight, getIntersection, getWidth } from '../extent.js';\nimport { listen, unlistenByKey } from '../events.js';\n/**\n * @typedef {function(import(\"../extent.js\").Extent, number, number) : import(\"../ImageBase.js\").default} FunctionType\n */\n/**\n * @classdesc\n * Class encapsulating single reprojected image.\n * See {@link module:ol/source/Image~ImageSource}.\n */\nvar ReprojImage = /** @class */ (function (_super) {\n    __extends(ReprojImage, _super);\n    /**\n     * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection (of the data).\n     * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n     * @param {import(\"../extent.js\").Extent} targetExtent Target extent.\n     * @param {number} targetResolution Target resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {FunctionType} getImageFunction\n     *     Function returning source images (extent, resolution, pixelRatio).\n     * @param {object=} opt_contextOptions Properties to set on the canvas context.\n     */\n    function ReprojImage(sourceProj, targetProj, targetExtent, targetResolution, pixelRatio, getImageFunction, opt_contextOptions) {\n        var _this = this;\n        var maxSourceExtent = sourceProj.getExtent();\n        var maxTargetExtent = targetProj.getExtent();\n        var limitedTargetExtent = maxTargetExtent\n            ? getIntersection(targetExtent, maxTargetExtent)\n            : targetExtent;\n        var targetCenter = getCenter(limitedTargetExtent);\n        var sourceResolution = calculateSourceResolution(sourceProj, targetProj, targetCenter, targetResolution);\n        var errorThresholdInPixels = ERROR_THRESHOLD;\n        var triangulation = new Triangulation(sourceProj, targetProj, limitedTargetExtent, maxSourceExtent, sourceResolution * errorThresholdInPixels, targetResolution);\n        var sourceExtent = triangulation.calculateSourceExtent();\n        var sourceImage = getImageFunction(sourceExtent, sourceResolution, pixelRatio);\n        var state = sourceImage ? ImageState.IDLE : ImageState.EMPTY;\n        var sourcePixelRatio = sourceImage ? sourceImage.getPixelRatio() : 1;\n        _this = _super.call(this, targetExtent, targetResolution, sourcePixelRatio, state) || this;\n        /**\n         * @private\n         * @type {import(\"../proj/Projection.js\").default}\n         */\n        _this.targetProj_ = targetProj;\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        _this.maxSourceExtent_ = maxSourceExtent;\n        /**\n         * @private\n         * @type {!import(\"./Triangulation.js\").default}\n         */\n        _this.triangulation_ = triangulation;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.targetResolution_ = targetResolution;\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        _this.targetExtent_ = targetExtent;\n        /**\n         * @private\n         * @type {import(\"../ImageBase.js\").default}\n         */\n        _this.sourceImage_ = sourceImage;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.sourcePixelRatio_ = sourcePixelRatio;\n        /**\n         * @private\n         * @type {object}\n         */\n        _this.contextOptions_ = opt_contextOptions;\n        /**\n         * @private\n         * @type {HTMLCanvasElement}\n         */\n        _this.canvas_ = null;\n        /**\n         * @private\n         * @type {?import(\"../events.js\").EventsKey}\n         */\n        _this.sourceListenerKey_ = null;\n        return _this;\n    }\n    /**\n     * Clean up.\n     */\n    ReprojImage.prototype.disposeInternal = function () {\n        if (this.state == ImageState.LOADING) {\n            this.unlistenSource_();\n        }\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * @return {HTMLCanvasElement} Image.\n     */\n    ReprojImage.prototype.getImage = function () {\n        return this.canvas_;\n    };\n    /**\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     */\n    ReprojImage.prototype.getProjection = function () {\n        return this.targetProj_;\n    };\n    /**\n     * @private\n     */\n    ReprojImage.prototype.reproject_ = function () {\n        var sourceState = this.sourceImage_.getState();\n        if (sourceState == ImageState.LOADED) {\n            var width = getWidth(this.targetExtent_) / this.targetResolution_;\n            var height = getHeight(this.targetExtent_) / this.targetResolution_;\n            this.canvas_ = renderReprojected(width, height, this.sourcePixelRatio_, this.sourceImage_.getResolution(), this.maxSourceExtent_, this.targetResolution_, this.targetExtent_, this.triangulation_, [\n                {\n                    extent: this.sourceImage_.getExtent(),\n                    image: this.sourceImage_.getImage(),\n                },\n            ], 0, undefined, this.contextOptions_);\n        }\n        this.state = sourceState;\n        this.changed();\n    };\n    /**\n     * Load not yet loaded URI.\n     */\n    ReprojImage.prototype.load = function () {\n        if (this.state == ImageState.IDLE) {\n            this.state = ImageState.LOADING;\n            this.changed();\n            var sourceState = this.sourceImage_.getState();\n            if (sourceState == ImageState.LOADED || sourceState == ImageState.ERROR) {\n                this.reproject_();\n            }\n            else {\n                this.sourceListenerKey_ = listen(this.sourceImage_, EventType.CHANGE, function (e) {\n                    var sourceState = this.sourceImage_.getState();\n                    if (sourceState == ImageState.LOADED ||\n                        sourceState == ImageState.ERROR) {\n                        this.unlistenSource_();\n                        this.reproject_();\n                    }\n                }, this);\n                this.sourceImage_.load();\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    ReprojImage.prototype.unlistenSource_ = function () {\n        unlistenByKey(\n        /** @type {!import(\"../events.js\").EventsKey} */ (this.sourceListenerKey_));\n        this.sourceListenerKey_ = null;\n    };\n    return ReprojImage;\n}(ImageBase));\nexport default ReprojImage;\n//# sourceMappingURL=Image.js.map","/**\n * @module ol/reproj/common\n */\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport var ERROR_THRESHOLD = 0.5;\n/**\n * Enable automatic reprojection of raster sources. Default is `true`.\n * TODO: decide if we want to expose this as a build flag or remove it\n * @type {boolean}\n */\nexport var ENABLE_RASTER_REPROJECTION = true;\n//# sourceMappingURL=common.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport SourceState from './State.js';\nimport { abstract } from '../util.js';\nimport { get as getProjection } from '../proj.js';\n/**\n * A function that returns a string or an array of strings representing source\n * attributions.\n *\n * @typedef {function(import(\"../PluggableMap.js\").FrameState): (string|Array<string>)} Attribution\n */\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./State.js\").default} [state='ready']\n * @property {boolean} [wrapX=false]\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nvar Source = /** @class */ (function (_super) {\n    __extends(Source, _super);\n    /**\n     * @param {Options} options Source options.\n     */\n    function Source(options) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../proj/Projection.js\").default}\n         */\n        _this.projection_ = getProjection(options.projection);\n        /**\n         * @private\n         * @type {?Attribution}\n         */\n        _this.attributions_ = adaptAttributions(options.attributions);\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.attributionsCollapsible_ =\n            options.attributionsCollapsible !== undefined\n                ? options.attributionsCollapsible\n                : true;\n        /**\n         * This source is currently loading data. Sources that defer loading to the\n         * map's tile queue never set this to `true`.\n         * @type {boolean}\n         */\n        _this.loading = false;\n        /**\n         * @private\n         * @type {import(\"./State.js\").default}\n         */\n        _this.state_ =\n            options.state !== undefined ? options.state : SourceState.READY;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n        return _this;\n    }\n    /**\n     * Get the attribution function for the source.\n     * @return {?Attribution} Attribution function.\n     */\n    Source.prototype.getAttributions = function () {\n        return this.attributions_;\n    };\n    /**\n     * @return {boolean} Attributions are collapsible.\n     */\n    Source.prototype.getAttributionsCollapsible = function () {\n        return this.attributionsCollapsible_;\n    };\n    /**\n     * Get the projection of the source.\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     * @api\n     */\n    Source.prototype.getProjection = function () {\n        return this.projection_;\n    };\n    /**\n     * @abstract\n     * @return {Array<number>|undefined} Resolutions.\n     */\n    Source.prototype.getResolutions = function () {\n        return abstract();\n    };\n    /**\n     * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n     * @return {import(\"./State.js\").default} State.\n     * @api\n     */\n    Source.prototype.getState = function () {\n        return this.state_;\n    };\n    /**\n     * @return {boolean|undefined} Wrap X.\n     */\n    Source.prototype.getWrapX = function () {\n        return this.wrapX_;\n    };\n    /**\n     * @return {Object|undefined} Context options.\n     */\n    Source.prototype.getContextOptions = function () {\n        return undefined;\n    };\n    /**\n     * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n     * @api\n     */\n    Source.prototype.refresh = function () {\n        this.changed();\n    };\n    /**\n     * Set the attributions of the source.\n     * @param {AttributionLike|undefined} attributions Attributions.\n     *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n     *     or `undefined`.\n     * @api\n     */\n    Source.prototype.setAttributions = function (attributions) {\n        this.attributions_ = adaptAttributions(attributions);\n        this.changed();\n    };\n    /**\n     * Set the state of the source.\n     * @param {import(\"./State.js\").default} state State.\n     */\n    Source.prototype.setState = function (state) {\n        this.state_ = state;\n        this.changed();\n    };\n    return Source;\n}(BaseObject));\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {?Attribution} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n    if (!attributionLike) {\n        return null;\n    }\n    if (Array.isArray(attributionLike)) {\n        return function (frameState) {\n            return attributionLike;\n        };\n    }\n    if (typeof attributionLike === 'function') {\n        return attributionLike;\n    }\n    return function (frameState) {\n        return [attributionLike];\n    };\n}\nexport default Source;\n//# sourceMappingURL=Source.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/Image\n */\nimport Event from '../events/Event.js';\nimport ImageState from '../ImageState.js';\nimport ReprojImage from '../reproj/Image.js';\nimport Source from './Source.js';\nimport { ENABLE_RASTER_REPROJECTION } from '../reproj/common.js';\nimport { IMAGE_SMOOTHING_DISABLED } from './common.js';\nimport { abstract } from '../util.js';\nimport { equals } from '../extent.js';\nimport { equivalent } from '../proj.js';\nimport { linearFindNearest } from '../array.js';\n/**\n * @enum {string}\n */\nexport var ImageSourceEventType = {\n    /**\n     * Triggered when an image starts loading.\n     * @event module:ol/source/Image.ImageSourceEvent#imageloadstart\n     * @api\n     */\n    IMAGELOADSTART: 'imageloadstart',\n    /**\n     * Triggered when an image finishes loading.\n     * @event module:ol/source/Image.ImageSourceEvent#imageloadend\n     * @api\n     */\n    IMAGELOADEND: 'imageloadend',\n    /**\n     * Triggered if image loading results in an error.\n     * @event module:ol/source/Image.ImageSourceEvent#imageloaderror\n     * @api\n     */\n    IMAGELOADERROR: 'imageloaderror',\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Image~ImageSource} instances are instances of this\n * type.\n */\nvar ImageSourceEvent = /** @class */ (function (_super) {\n    __extends(ImageSourceEvent, _super);\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../Image.js\").default} image The image.\n     */\n    function ImageSourceEvent(type, image) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The image related to the event.\n         * @type {import(\"../Image.js\").default}\n         * @api\n         */\n        _this.image = image;\n        return _this;\n    }\n    return ImageSourceEvent;\n}(Event));\nexport { ImageSourceEvent };\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {Array<number>} [resolutions]\n * @property {import(\"./State.js\").default} [state]\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing a single image.\n * @abstract\n * @fires module:ol/source/Image.ImageSourceEvent\n * @api\n */\nvar ImageSource = /** @class */ (function (_super) {\n    __extends(ImageSource, _super);\n    /**\n     * @param {Options} options Single image source options.\n     */\n    function ImageSource(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            projection: options.projection,\n            state: options.state,\n        }) || this;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.resolutions_ =\n            options.resolutions !== undefined ? options.resolutions : null;\n        /**\n         * @private\n         * @type {import(\"../reproj/Image.js\").default}\n         */\n        _this.reprojectedImage_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.reprojectedRevision_ = 0;\n        /**\n         * @private\n         * @type {object|undefined}\n         */\n        _this.contextOptions_ =\n            options.imageSmoothing === false ? IMAGE_SMOOTHING_DISABLED : undefined;\n        return _this;\n    }\n    /**\n     * @return {Array<number>} Resolutions.\n     */\n    ImageSource.prototype.getResolutions = function () {\n        return this.resolutions_;\n    };\n    /**\n     * @return {Object|undefined} Context options.\n     */\n    ImageSource.prototype.getContextOptions = function () {\n        return this.contextOptions_;\n    };\n    /**\n     * @protected\n     * @param {number} resolution Resolution.\n     * @return {number} Resolution.\n     */\n    ImageSource.prototype.findNearestResolution = function (resolution) {\n        if (this.resolutions_) {\n            var idx = linearFindNearest(this.resolutions_, resolution, 0);\n            resolution = this.resolutions_[idx];\n        }\n        return resolution;\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {import(\"../ImageBase.js\").default} Single image.\n     */\n    ImageSource.prototype.getImage = function (extent, resolution, pixelRatio, projection) {\n        var sourceProjection = this.getProjection();\n        if (!ENABLE_RASTER_REPROJECTION ||\n            !sourceProjection ||\n            !projection ||\n            equivalent(sourceProjection, projection)) {\n            if (sourceProjection) {\n                projection = sourceProjection;\n            }\n            return this.getImageInternal(extent, resolution, pixelRatio, projection);\n        }\n        else {\n            if (this.reprojectedImage_) {\n                if (this.reprojectedRevision_ == this.getRevision() &&\n                    equivalent(this.reprojectedImage_.getProjection(), projection) &&\n                    this.reprojectedImage_.getResolution() == resolution &&\n                    equals(this.reprojectedImage_.getExtent(), extent)) {\n                    return this.reprojectedImage_;\n                }\n                this.reprojectedImage_.dispose();\n                this.reprojectedImage_ = null;\n            }\n            this.reprojectedImage_ = new ReprojImage(sourceProjection, projection, extent, resolution, pixelRatio, function (extent, resolution, pixelRatio) {\n                return this.getImageInternal(extent, resolution, pixelRatio, sourceProjection);\n            }.bind(this), this.contextOptions_);\n            this.reprojectedRevision_ = this.getRevision();\n            return this.reprojectedImage_;\n        }\n    };\n    /**\n     * @abstract\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {import(\"../ImageBase.js\").default} Single image.\n     * @protected\n     */\n    ImageSource.prototype.getImageInternal = function (extent, resolution, pixelRatio, projection) {\n        return abstract();\n    };\n    /**\n     * Handle image change events.\n     * @param {import(\"../events/Event.js\").default} event Event.\n     * @protected\n     */\n    ImageSource.prototype.handleImageChange = function (event) {\n        var image = /** @type {import(\"../Image.js\").default} */ (event.target);\n        switch (image.getState()) {\n            case ImageState.LOADING:\n                this.loading = true;\n                this.dispatchEvent(new ImageSourceEvent(ImageSourceEventType.IMAGELOADSTART, image));\n                break;\n            case ImageState.LOADED:\n                this.loading = false;\n                this.dispatchEvent(new ImageSourceEvent(ImageSourceEventType.IMAGELOADEND, image));\n                break;\n            case ImageState.ERROR:\n                this.loading = false;\n                this.dispatchEvent(new ImageSourceEvent(ImageSourceEventType.IMAGELOADERROR, image));\n                break;\n            default:\n            // pass\n        }\n    };\n    return ImageSource;\n}(Source));\n/**\n * Default image load function for image sources that use import(\"../Image.js\").Image image\n * instances.\n * @param {import(\"../Image.js\").default} image Image.\n * @param {string} src Source.\n */\nexport function defaultImageLoadFunction(image, src) {\n    /** @type {HTMLImageElement|HTMLVideoElement} */ (image.getImage()).src = src;\n}\nexport default ImageSource;\n//# sourceMappingURL=Image.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Image\n */\nimport EventType from './events/EventType.js';\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport { IMAGE_DECODE } from './has.js';\nimport { getHeight } from './extent.js';\nimport { listenOnce, unlistenByKey } from './events.js';\n/**\n * A function that takes an {@link module:ol/Image~Image} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~Image#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string): void} LoadFunction\n * @api\n */\nvar ImageWrapper = /** @class */ (function (_super) {\n    __extends(ImageWrapper, _super);\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {string} src Image source URI.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {LoadFunction} imageLoadFunction Image load function.\n     */\n    function ImageWrapper(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {\n        var _this = _super.call(this, extent, resolution, pixelRatio, ImageState.IDLE) || this;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.src_ = src;\n        /**\n         * @private\n         * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n         */\n        _this.image_ = new Image();\n        if (crossOrigin !== null) {\n            _this.image_.crossOrigin = crossOrigin;\n        }\n        /**\n         * @private\n         * @type {?function():void}\n         */\n        _this.unlisten_ = null;\n        /**\n         * @protected\n         * @type {import(\"./ImageState.js\").default}\n         */\n        _this.state = ImageState.IDLE;\n        /**\n         * @private\n         * @type {LoadFunction}\n         */\n        _this.imageLoadFunction_ = imageLoadFunction;\n        return _this;\n    }\n    /**\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n     * @api\n     */\n    ImageWrapper.prototype.getImage = function () {\n        return this.image_;\n    };\n    /**\n     * Tracks loading or read errors.\n     *\n     * @private\n     */\n    ImageWrapper.prototype.handleImageError_ = function () {\n        this.state = ImageState.ERROR;\n        this.unlistenImage_();\n        this.changed();\n    };\n    /**\n     * Tracks successful image load.\n     *\n     * @private\n     */\n    ImageWrapper.prototype.handleImageLoad_ = function () {\n        if (this.resolution === undefined) {\n            this.resolution = getHeight(this.extent) / this.image_.height;\n        }\n        this.state = ImageState.LOADED;\n        this.unlistenImage_();\n        this.changed();\n    };\n    /**\n     * Load the image or retry if loading previously failed.\n     * Loading is taken care of by the tile queue, and calling this method is\n     * only needed for preloading or for reloading in case of an error.\n     * @api\n     */\n    ImageWrapper.prototype.load = function () {\n        if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n            this.state = ImageState.LOADING;\n            this.changed();\n            this.imageLoadFunction_(this, this.src_);\n            this.unlisten_ = listenImage(this.image_, this.handleImageLoad_.bind(this), this.handleImageError_.bind(this));\n        }\n    };\n    /**\n     * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n     */\n    ImageWrapper.prototype.setImage = function (image) {\n        this.image_ = image;\n    };\n    /**\n     * Discards event handlers which listen for load completion or errors.\n     *\n     * @private\n     */\n    ImageWrapper.prototype.unlistenImage_ = function () {\n        if (this.unlisten_) {\n            this.unlisten_();\n            this.unlisten_ = null;\n        }\n    };\n    return ImageWrapper;\n}(ImageBase));\n/**\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n    var img = /** @type {HTMLImageElement} */ (image);\n    if (img.src && IMAGE_DECODE) {\n        var promise = img.decode();\n        var listening_1 = true;\n        var unlisten = function () {\n            listening_1 = false;\n        };\n        promise\n            .then(function () {\n            if (listening_1) {\n                loadHandler();\n            }\n        })\n            .catch(function (error) {\n            if (listening_1) {\n                // FIXME: Unconditionally call errorHandler() when this bug is fixed upstream:\n                //        https://bugs.webkit.org/show_bug.cgi?id=198527\n                if (error.name === 'EncodingError' &&\n                    error.message === 'Invalid image type.') {\n                    loadHandler();\n                }\n                else {\n                    errorHandler();\n                }\n            }\n        });\n        return unlisten;\n    }\n    var listenerKeys = [\n        listenOnce(img, EventType.LOAD, loadHandler),\n        listenOnce(img, EventType.ERROR, errorHandler),\n    ];\n    return function unlisten() {\n        listenerKeys.forEach(unlistenByKey);\n    };\n}\nexport default ImageWrapper;\n//# sourceMappingURL=Image.js.map","/**\n * @module ol/source/WMSServerType\n */\n/**\n * Available server types: `'carmentaserver'`, `'geoserver'`, `'mapserver'`,\n *     `'qgis'`. These are servers that have vendor parameters beyond the WMS\n *     specification that OpenLayers can make use of.\n * @enum {string}\n */\nexport default {\n    /**\n     * HiDPI support for [Carmenta Server](https://www.carmenta.com/en/products/carmenta-server)\n     * @api\n     */\n    CARMENTA_SERVER: 'carmentaserver',\n    /**\n     * HiDPI support for [GeoServer](https://geoserver.org/)\n     * @api\n     */\n    GEOSERVER: 'geoserver',\n    /**\n     * HiDPI support for [MapServer](https://mapserver.org/)\n     * @api\n     */\n    MAPSERVER: 'mapserver',\n    /**\n     * HiDPI support for [QGIS](https://qgis.org/)\n     * @api\n     */\n    QGIS: 'qgis',\n};\n//# sourceMappingURL=WMSServerType.js.map","/**\n * @module ol/uri\n */\n/**\n * Appends query parameters to a URI.\n *\n * @param {string} uri The original URI, which may already have query data.\n * @param {!Object} params An object where keys are URI-encoded parameter keys,\n *     and the values are arbitrary types or arrays.\n * @return {string} The new URI.\n */\nexport function appendParams(uri, params) {\n    var keyParams = [];\n    // Skip any null or undefined parameter values\n    Object.keys(params).forEach(function (k) {\n        if (params[k] !== null && params[k] !== undefined) {\n            keyParams.push(k + '=' + encodeURIComponent(params[k]));\n        }\n    });\n    var qs = keyParams.join('&');\n    // remove any trailing ? or &\n    uri = uri.replace(/[?&]$/, '');\n    // append ? or & depending on whether uri has existing parameters\n    uri = uri.indexOf('?') === -1 ? uri + '?' : uri + '&';\n    return uri + qs;\n}\n//# sourceMappingURL=uri.js.map","/**\n * @module ol/source/ImageWMS\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DEFAULT_WMS_VERSION } from './common.js';\nimport EventType from '../events/EventType.js';\nimport ImageSource, { defaultImageLoadFunction } from './Image.js';\nimport ImageWrapper from '../Image.js';\nimport WMSServerType from './WMSServerType.js';\nimport { appendParams } from '../uri.js';\nimport { assert } from '../asserts.js';\nimport { assign } from '../obj.js';\nimport { calculateSourceResolution } from '../reproj.js';\nimport { compareVersions } from '../string.js';\nimport { containsExtent, getCenter, getForViewAndSize, getHeight, getWidth, } from '../extent.js';\nimport { get as getProjection, transform } from '../proj.js';\n/**\n * @const\n * @type {import(\"../size.js\").Size}\n */\nvar GETFEATUREINFO_IMAGE_SIZE = [101, 101];\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {import(\"./WMSServerType.js\").default|string} [serverType] The type of\n * the remote WMS server: `mapserver`, `geoserver` or `qgis`. Only needed if `hidpi` is `true`.\n * @property {import(\"../Image.js\").LoadFunction} [imageLoadFunction] Optional function to load an image given a URL.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {Object<string,*>} params WMS request parameters.\n * At least a `LAYERS` param is required. `STYLES` is\n * `''` by default. `VERSION` is `1.3.0` by default. `WIDTH`, `HEIGHT`, `BBOX`\n * and `CRS` (`SRS` for WMS version < 1.3.0) will be set dynamically.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [ratio=1.5] Ratio. `1` means image requests are the size of the map viewport, `2` means\n * twice the width and height of the map viewport, and so on. Must be `1` or\n * higher.\n * @property {Array<number>} [resolutions] Resolutions.\n * If specified, requests will be made for these resolutions only.\n * @property {string} url WMS service URL.\n */\n/**\n * @classdesc\n * Source for WMS servers providing single, untiled images.\n *\n * @fires module:ol/source/Image.ImageSourceEvent\n * @api\n */\nvar ImageWMS = /** @class */ (function (_super) {\n    __extends(ImageWMS, _super);\n    /**\n     * @param {Options=} [opt_options] ImageWMS options.\n     */\n    function ImageWMS(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            imageSmoothing: options.imageSmoothing,\n            projection: options.projection,\n            resolutions: options.resolutions,\n        }) || this;\n        /**\n         * @private\n         * @type {?string}\n         */\n        _this.crossOrigin_ =\n            options.crossOrigin !== undefined ? options.crossOrigin : null;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        _this.url_ = options.url;\n        /**\n         * @private\n         * @type {import(\"../Image.js\").LoadFunction}\n         */\n        _this.imageLoadFunction_ =\n            options.imageLoadFunction !== undefined\n                ? options.imageLoadFunction\n                : defaultImageLoadFunction;\n        /**\n         * @private\n         * @type {!Object}\n         */\n        _this.params_ = options.params || {};\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.v13_ = true;\n        _this.updateV13_();\n        /**\n         * @private\n         * @type {import(\"./WMSServerType.js\").default|undefined}\n         */\n        _this.serverType_ = /** @type {import(\"./WMSServerType.js\").default|undefined} */ (options.serverType);\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n        /**\n         * @private\n         * @type {import(\"../Image.js\").default}\n         */\n        _this.image_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.imageSize_ = [0, 0];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.renderedRevision_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n        return _this;\n    }\n    /**\n     * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n     * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n     * constructed.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {number} resolution Resolution.\n     * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n     * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n     *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n     *     in the `LAYERS` parameter will be used. `VERSION` should not be\n     *     specified here.\n     * @return {string|undefined} GetFeatureInfo URL.\n     * @api\n     */\n    ImageWMS.prototype.getFeatureInfoUrl = function (coordinate, resolution, projection, params) {\n        if (this.url_ === undefined) {\n            return undefined;\n        }\n        var projectionObj = getProjection(projection);\n        var sourceProjectionObj = this.getProjection();\n        if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n            resolution = calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, resolution);\n            coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n        }\n        var extent = getForViewAndSize(coordinate, resolution, 0, GETFEATUREINFO_IMAGE_SIZE);\n        var baseParams = {\n            'SERVICE': 'WMS',\n            'VERSION': DEFAULT_WMS_VERSION,\n            'REQUEST': 'GetFeatureInfo',\n            'FORMAT': 'image/png',\n            'TRANSPARENT': true,\n            'QUERY_LAYERS': this.params_['LAYERS'],\n        };\n        assign(baseParams, this.params_, params);\n        var x = Math.floor((coordinate[0] - extent[0]) / resolution);\n        var y = Math.floor((extent[3] - coordinate[1]) / resolution);\n        baseParams[this.v13_ ? 'I' : 'X'] = x;\n        baseParams[this.v13_ ? 'J' : 'Y'] = y;\n        return this.getRequestUrl_(extent, GETFEATUREINFO_IMAGE_SIZE, 1, sourceProjectionObj || projectionObj, baseParams);\n    };\n    /**\n     * Return the GetLegendGraphic URL, optionally optimized for the passed\n     * resolution and possibly including any passed specific parameters. Returns\n     * `undefined` if the GetLegendGraphic URL cannot be constructed.\n     *\n     * @param {number} [resolution] Resolution. If set to undefined, `SCALE`\n     *     will not be calculated and included in URL.\n     * @param {Object} [params] GetLegendGraphic params. If `LAYER` is set, the\n     *     request is generated for this wms layer, else it will try to use the\n     *     configured wms layer. Default `FORMAT` is `image/png`.\n     *     `VERSION` should not be specified here.\n     * @return {string|undefined} GetLegendGraphic URL.\n     * @api\n     */\n    ImageWMS.prototype.getLegendUrl = function (resolution, params) {\n        if (this.url_ === undefined) {\n            return undefined;\n        }\n        var baseParams = {\n            'SERVICE': 'WMS',\n            'VERSION': DEFAULT_WMS_VERSION,\n            'REQUEST': 'GetLegendGraphic',\n            'FORMAT': 'image/png',\n        };\n        if (params === undefined || params['LAYER'] === undefined) {\n            var layers = this.params_.LAYERS;\n            var isSingleLayer = !Array.isArray(layers) || layers.length === 1;\n            if (!isSingleLayer) {\n                return undefined;\n            }\n            baseParams['LAYER'] = layers;\n        }\n        if (resolution !== undefined) {\n            var mpu = this.getProjection()\n                ? this.getProjection().getMetersPerUnit()\n                : 1;\n            var pixelSize = 0.00028;\n            baseParams['SCALE'] = (resolution * mpu) / pixelSize;\n        }\n        assign(baseParams, params);\n        return appendParams(/** @type {string} */ (this.url_), baseParams);\n    };\n    /**\n     * Get the user-provided params, i.e. those passed to the constructor through\n     * the \"params\" option, and possibly updated using the updateParams method.\n     * @return {Object} Params.\n     * @api\n     */\n    ImageWMS.prototype.getParams = function () {\n        return this.params_;\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {import(\"../Image.js\").default} Single image.\n     */\n    ImageWMS.prototype.getImageInternal = function (extent, resolution, pixelRatio, projection) {\n        if (this.url_ === undefined) {\n            return null;\n        }\n        resolution = this.findNearestResolution(resolution);\n        if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n            pixelRatio = 1;\n        }\n        var imageResolution = resolution / pixelRatio;\n        var center = getCenter(extent);\n        var viewWidth = Math.ceil(getWidth(extent) / imageResolution);\n        var viewHeight = Math.ceil(getHeight(extent) / imageResolution);\n        var viewExtent = getForViewAndSize(center, imageResolution, 0, [\n            viewWidth,\n            viewHeight,\n        ]);\n        var requestWidth = Math.ceil((this.ratio_ * getWidth(extent)) / imageResolution);\n        var requestHeight = Math.ceil((this.ratio_ * getHeight(extent)) / imageResolution);\n        var requestExtent = getForViewAndSize(center, imageResolution, 0, [\n            requestWidth,\n            requestHeight,\n        ]);\n        var image = this.image_;\n        if (image &&\n            this.renderedRevision_ == this.getRevision() &&\n            image.getResolution() == resolution &&\n            image.getPixelRatio() == pixelRatio &&\n            containsExtent(image.getExtent(), viewExtent)) {\n            return image;\n        }\n        var params = {\n            'SERVICE': 'WMS',\n            'VERSION': DEFAULT_WMS_VERSION,\n            'REQUEST': 'GetMap',\n            'FORMAT': 'image/png',\n            'TRANSPARENT': true,\n        };\n        assign(params, this.params_);\n        this.imageSize_[0] = Math.round(getWidth(requestExtent) / imageResolution);\n        this.imageSize_[1] = Math.round(getHeight(requestExtent) / imageResolution);\n        var url = this.getRequestUrl_(requestExtent, this.imageSize_, pixelRatio, projection, params);\n        this.image_ = new ImageWrapper(requestExtent, resolution, pixelRatio, url, this.crossOrigin_, this.imageLoadFunction_);\n        this.renderedRevision_ = this.getRevision();\n        this.image_.addEventListener(EventType.CHANGE, this.handleImageChange.bind(this));\n        return this.image_;\n    };\n    /**\n     * Return the image load function of the source.\n     * @return {import(\"../Image.js\").LoadFunction} The image load function.\n     * @api\n     */\n    ImageWMS.prototype.getImageLoadFunction = function () {\n        return this.imageLoadFunction_;\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {import(\"../size.js\").Size} size Size.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {Object} params Params.\n     * @return {string} Request URL.\n     * @private\n     */\n    ImageWMS.prototype.getRequestUrl_ = function (extent, size, pixelRatio, projection, params) {\n        assert(this.url_ !== undefined, 9); // `url` must be configured or set using `#setUrl()`\n        params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n        if (!('STYLES' in this.params_)) {\n            params['STYLES'] = '';\n        }\n        if (pixelRatio != 1) {\n            switch (this.serverType_) {\n                case WMSServerType.GEOSERVER:\n                    var dpi = (90 * pixelRatio + 0.5) | 0;\n                    if ('FORMAT_OPTIONS' in params) {\n                        params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n                    }\n                    else {\n                        params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n                    }\n                    break;\n                case WMSServerType.MAPSERVER:\n                    params['MAP_RESOLUTION'] = 90 * pixelRatio;\n                    break;\n                case WMSServerType.CARMENTA_SERVER:\n                case WMSServerType.QGIS:\n                    params['DPI'] = 90 * pixelRatio;\n                    break;\n                default:\n                    assert(false, 8); // Unknown `serverType` configured\n                    break;\n            }\n        }\n        params['WIDTH'] = size[0];\n        params['HEIGHT'] = size[1];\n        var axisOrientation = projection.getAxisOrientation();\n        var bbox;\n        if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n            bbox = [extent[1], extent[0], extent[3], extent[2]];\n        }\n        else {\n            bbox = extent;\n        }\n        params['BBOX'] = bbox.join(',');\n        return appendParams(/** @type {string} */ (this.url_), params);\n    };\n    /**\n     * Return the URL used for this WMS source.\n     * @return {string|undefined} URL.\n     * @api\n     */\n    ImageWMS.prototype.getUrl = function () {\n        return this.url_;\n    };\n    /**\n     * Set the image load function of the source.\n     * @param {import(\"../Image.js\").LoadFunction} imageLoadFunction Image load function.\n     * @api\n     */\n    ImageWMS.prototype.setImageLoadFunction = function (imageLoadFunction) {\n        this.image_ = null;\n        this.imageLoadFunction_ = imageLoadFunction;\n        this.changed();\n    };\n    /**\n     * Set the URL to use for requests.\n     * @param {string|undefined} url URL.\n     * @api\n     */\n    ImageWMS.prototype.setUrl = function (url) {\n        if (url != this.url_) {\n            this.url_ = url;\n            this.image_ = null;\n            this.changed();\n        }\n    };\n    /**\n     * Update the user-provided params.\n     * @param {Object} params Params.\n     * @api\n     */\n    ImageWMS.prototype.updateParams = function (params) {\n        assign(this.params_, params);\n        this.updateV13_();\n        this.image_ = null;\n        this.changed();\n    };\n    /**\n     * @private\n     */\n    ImageWMS.prototype.updateV13_ = function () {\n        var version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n        this.v13_ = compareVersions(version, '1.3') >= 0;\n    };\n    return ImageWMS;\n}(ImageSource));\nexport default ImageWMS;\n//# sourceMappingURL=ImageWMS.js.map","/**\n * @module ol/string\n */\n/**\n * @param {number} number Number to be formatted\n * @param {number} width The desired width\n * @param {number=} opt_precision Precision of the output string (i.e. number of decimal places)\n * @returns {string} Formatted string\n */\nexport function padNumber(number, width, opt_precision) {\n    var numberString = opt_precision !== undefined ? number.toFixed(opt_precision) : '' + number;\n    var decimal = numberString.indexOf('.');\n    decimal = decimal === -1 ? numberString.length : decimal;\n    return decimal > width\n        ? numberString\n        : new Array(1 + width - decimal).join('0') + numberString;\n}\n/**\n * Adapted from https://github.com/omichelsen/compare-versions/blob/master/index.js\n * @param {string|number} v1 First version\n * @param {string|number} v2 Second version\n * @returns {number} Value\n */\nexport function compareVersions(v1, v2) {\n    var s1 = ('' + v1).split('.');\n    var s2 = ('' + v2).split('.');\n    for (var i = 0; i < Math.max(s1.length, s2.length); i++) {\n        var n1 = parseInt(s1[i] || '0', 10);\n        var n2 = parseInt(s2[i] || '0', 10);\n        if (n1 > n2) {\n            return 1;\n        }\n        if (n2 > n1) {\n            return -1;\n        }\n    }\n    return 0;\n}\n//# sourceMappingURL=string.js.map","/**\n * @module ol/color\n */\nimport { assert } from './asserts.js';\nimport { clamp } from './math.js';\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nvar HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nvar NAMED_COLOR_RE_ = /^([a-z]*)$|^hsla?\\(.*\\)$/i;\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n    if (typeof color === 'string') {\n        return color;\n    }\n    else {\n        return toString(color);\n    }\n}\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n    var el = document.createElement('div');\n    el.style.color = color;\n    if (el.style.color !== '') {\n        document.body.appendChild(el);\n        var rgb = getComputedStyle(el).color;\n        document.body.removeChild(el);\n        return rgb;\n    }\n    else {\n        return '';\n    }\n}\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport var fromString = (function () {\n    // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n    // semantics, whenever the cache grows too large we simply delete an\n    // arbitrary 25% of the entries.\n    /**\n     * @const\n     * @type {number}\n     */\n    var MAX_CACHE_SIZE = 1024;\n    /**\n     * @type {Object<string, Color>}\n     */\n    var cache = {};\n    /**\n     * @type {number}\n     */\n    var cacheSize = 0;\n    return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n        var color;\n        if (cache.hasOwnProperty(s)) {\n            color = cache[s];\n        }\n        else {\n            if (cacheSize >= MAX_CACHE_SIZE) {\n                var i = 0;\n                for (var key in cache) {\n                    if ((i++ & 3) === 0) {\n                        delete cache[key];\n                        --cacheSize;\n                    }\n                }\n            }\n            color = fromStringInternal_(s);\n            cache[s] = color;\n            ++cacheSize;\n        }\n        return color;\n    });\n})();\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n    if (Array.isArray(color)) {\n        return color;\n    }\n    else {\n        return fromString(color);\n    }\n}\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n    var r, g, b, a, color;\n    if (NAMED_COLOR_RE_.exec(s)) {\n        s = fromNamed(s);\n    }\n    if (HEX_COLOR_RE_.exec(s)) {\n        // hex\n        var n = s.length - 1; // number of hex digits\n        var d = // number of digits per channel\n         void 0; // number of digits per channel\n        if (n <= 4) {\n            d = 1;\n        }\n        else {\n            d = 2;\n        }\n        var hasAlpha = n === 4 || n === 8;\n        r = parseInt(s.substr(1 + 0 * d, d), 16);\n        g = parseInt(s.substr(1 + 1 * d, d), 16);\n        b = parseInt(s.substr(1 + 2 * d, d), 16);\n        if (hasAlpha) {\n            a = parseInt(s.substr(1 + 3 * d, d), 16);\n        }\n        else {\n            a = 255;\n        }\n        if (d == 1) {\n            r = (r << 4) + r;\n            g = (g << 4) + g;\n            b = (b << 4) + b;\n            if (hasAlpha) {\n                a = (a << 4) + a;\n            }\n        }\n        color = [r, g, b, a / 255];\n    }\n    else if (s.indexOf('rgba(') == 0) {\n        // rgba()\n        color = s.slice(5, -1).split(',').map(Number);\n        normalize(color);\n    }\n    else if (s.indexOf('rgb(') == 0) {\n        // rgb()\n        color = s.slice(4, -1).split(',').map(Number);\n        color.push(1);\n        normalize(color);\n    }\n    else {\n        assert(false, 14); // Invalid color\n    }\n    return color;\n}\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n    color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n    color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n    color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n    color[3] = clamp(color[3], 0, 1);\n    return color;\n}\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n    var r = color[0];\n    if (r != (r | 0)) {\n        r = (r + 0.5) | 0;\n    }\n    var g = color[1];\n    if (g != (g | 0)) {\n        g = (g + 0.5) | 0;\n    }\n    var b = color[2];\n    if (b != (b | 0)) {\n        b = (b + 0.5) | 0;\n    }\n    var a = color[3] === undefined ? 1 : color[3];\n    return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n    if (NAMED_COLOR_RE_.test(s)) {\n        s = fromNamed(s);\n    }\n    return (HEX_COLOR_RE_.test(s) || s.indexOf('rgba(') === 0 || s.indexOf('rgb(') === 0);\n}\n//# sourceMappingURL=color.js.map","/**\n * @module ol/style/IconImageCache\n */\nimport { asString } from '../color.js';\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache~shared}.\n */\nvar IconImageCache = /** @class */ (function () {\n    function IconImageCache() {\n        /**\n         * @type {!Object<string, import(\"./IconImage.js\").default>}\n         * @private\n         */\n        this.cache_ = {};\n        /**\n         * @type {number}\n         * @private\n         */\n        this.cacheSize_ = 0;\n        /**\n         * @type {number}\n         * @private\n         */\n        this.maxCacheSize_ = 32;\n    }\n    /**\n     * FIXME empty description for jsdoc\n     */\n    IconImageCache.prototype.clear = function () {\n        this.cache_ = {};\n        this.cacheSize_ = 0;\n    };\n    /**\n     * @return {boolean} Can expire cache.\n     */\n    IconImageCache.prototype.canExpireCache = function () {\n        return this.cacheSize_ > this.maxCacheSize_;\n    };\n    /**\n     * FIXME empty description for jsdoc\n     */\n    IconImageCache.prototype.expire = function () {\n        if (this.canExpireCache()) {\n            var i = 0;\n            for (var key in this.cache_) {\n                var iconImage = this.cache_[key];\n                if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n                    delete this.cache_[key];\n                    --this.cacheSize_;\n                }\n            }\n        }\n    };\n    /**\n     * @param {string} src Src.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {import(\"../color.js\").Color} color Color.\n     * @return {import(\"./IconImage.js\").default} Icon image.\n     */\n    IconImageCache.prototype.get = function (src, crossOrigin, color) {\n        var key = getKey(src, crossOrigin, color);\n        return key in this.cache_ ? this.cache_[key] : null;\n    };\n    /**\n     * @param {string} src Src.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {import(\"../color.js\").Color} color Color.\n     * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n     */\n    IconImageCache.prototype.set = function (src, crossOrigin, color, iconImage) {\n        var key = getKey(src, crossOrigin, color);\n        this.cache_[key] = iconImage;\n        ++this.cacheSize_;\n    };\n    /**\n     * Set the cache size of the icon cache. Default is `32`. Change this value when\n     * your map uses more than 32 different icon images and you are not caching icon\n     * styles on the application level.\n     * @param {number} maxCacheSize Cache max size.\n     * @api\n     */\n    IconImageCache.prototype.setSize = function (maxCacheSize) {\n        this.maxCacheSize_ = maxCacheSize;\n        this.expire();\n    };\n    return IconImageCache;\n}());\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n    var colorString = color ? asString(color) : 'null';\n    return crossOrigin + ':' + src + ':' + colorString;\n}\nexport default IconImageCache;\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport var shared = new IconImageCache();\n//# sourceMappingURL=IconImageCache.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport { TRUE } from '../functions.js';\nimport { abstract } from '../util.js';\nimport { compose as composeTransform, makeInverse } from '../transform.js';\nimport { getWidth } from '../extent.js';\nimport { shared as iconImageCache } from '../style/IconImageCache.js';\nimport { inView } from '../layer/Layer.js';\nimport { wrapX } from '../coordinate.js';\n/**\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature\n * @property {import(\"../layer/Layer.js\").default} layer\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry\n * @property {number} distanceSq\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback\n * @template T\n */\n/**\n * @abstract\n */\nvar MapRenderer = /** @class */ (function (_super) {\n    __extends(MapRenderer, _super);\n    /**\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    function MapRenderer(map) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = map;\n        return _this;\n    }\n    /**\n     * @abstract\n     * @param {import(\"../render/EventType.js\").default} type Event type.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    MapRenderer.prototype.dispatchRenderEvent = function (type, frameState) {\n        abstract();\n    };\n    /**\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @protected\n     */\n    MapRenderer.prototype.calculateMatrices2D = function (frameState) {\n        var viewState = frameState.viewState;\n        var coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n        var pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n        composeTransform(coordinateToPixelTransform, frameState.size[0] / 2, frameState.size[1] / 2, 1 / viewState.resolution, -1 / viewState.resolution, -viewState.rotation, -viewState.center[0], -viewState.center[1]);\n        makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n    };\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {boolean} checkWrapped Check for wrapped geometries.\n     * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n     * @param {S} thisArg Value to use as `this` when executing `callback`.\n     * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n     *     function, only layers which are visible and for which this function\n     *     returns `true` will be tested for features.  By default, all visible\n     *     layers will be tested.\n     * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n     * @return {T|undefined} Callback result.\n     * @template S,T,U\n     */\n    MapRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, checkWrapped, callback, thisArg, layerFilter, thisArg2) {\n        var result;\n        var viewState = frameState.viewState;\n        /**\n         * @param {boolean} managed Managed layer.\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n         * @return {T|undefined} Callback result.\n         */\n        function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n            return callback.call(thisArg, feature, managed ? layer : null, geometry);\n        }\n        var projection = viewState.projection;\n        var translatedCoordinate = wrapX(coordinate.slice(), projection);\n        var offsets = [[0, 0]];\n        if (projection.canWrapX() && checkWrapped) {\n            var projectionExtent = projection.getExtent();\n            var worldWidth = getWidth(projectionExtent);\n            offsets.push([-worldWidth, 0], [worldWidth, 0]);\n        }\n        var layerStates = frameState.layerStatesArray;\n        var numLayers = layerStates.length;\n        var matches = /** @type {Array<HitMatch<T>>} */ ([]);\n        var tmpCoord = [];\n        for (var i = 0; i < offsets.length; i++) {\n            for (var j = numLayers - 1; j >= 0; --j) {\n                var layerState = layerStates[j];\n                var layer = layerState.layer;\n                if (layer.hasRenderer() &&\n                    inView(layerState, viewState) &&\n                    layerFilter.call(thisArg2, layer)) {\n                    var layerRenderer = layer.getRenderer();\n                    var source = layer.getSource();\n                    if (layerRenderer && source) {\n                        var coordinates = source.getWrapX()\n                            ? translatedCoordinate\n                            : coordinate;\n                        var callback_1 = forEachFeatureAtCoordinate.bind(null, layerState.managed);\n                        tmpCoord[0] = coordinates[0] + offsets[i][0];\n                        tmpCoord[1] = coordinates[1] + offsets[i][1];\n                        result = layerRenderer.forEachFeatureAtCoordinate(tmpCoord, frameState, hitTolerance, callback_1, matches);\n                    }\n                    if (result) {\n                        return result;\n                    }\n                }\n            }\n        }\n        if (matches.length === 0) {\n            return undefined;\n        }\n        var order = 1 / matches.length;\n        matches.forEach(function (m, i) { return (m.distanceSq += i * order); });\n        matches.sort(function (a, b) { return a.distanceSq - b.distanceSq; });\n        matches.some(function (m) {\n            return (result = m.callback(m.feature, m.layer, m.geometry));\n        });\n        return result;\n    };\n    /**\n     * @abstract\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {function(import(\"../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n     *     callback.\n     * @param {function(import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n     *     function, only layers which are visible and for which this function\n     *     returns `true` will be tested for features.  By default, all visible\n     *     layers will be tested.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    MapRenderer.prototype.forEachLayerAtPixel = function (pixel, frameState, hitTolerance, callback, layerFilter) {\n        return abstract();\n    };\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {boolean} checkWrapped Check for wrapped geometries.\n     * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n     *     function, only layers which are visible and for which this function\n     *     returns `true` will be tested for features.  By default, all visible\n     *     layers will be tested.\n     * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n     * @return {boolean} Is there a feature at the given coordinate?\n     * @template U\n     */\n    MapRenderer.prototype.hasFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, checkWrapped, layerFilter, thisArg) {\n        var hasFeature = this.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, checkWrapped, TRUE, this, layerFilter, thisArg);\n        return hasFeature !== undefined;\n    };\n    /**\n     * @return {import(\"../PluggableMap.js\").default} Map.\n     */\n    MapRenderer.prototype.getMap = function () {\n        return this.map_;\n    };\n    /**\n     * Render.\n     * @abstract\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    MapRenderer.prototype.renderFrame = function (frameState) {\n        abstract();\n    };\n    /**\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @protected\n     */\n    MapRenderer.prototype.scheduleExpireIconCache = function (frameState) {\n        if (iconImageCache.canExpireCache()) {\n            frameState.postRenderFunctions.push(expireIconCache);\n        }\n    };\n    return MapRenderer;\n}(Disposable));\n/**\n * @param {import(\"../PluggableMap.js\").default} map Map.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n    iconImageCache.expire();\n}\nexport default MapRenderer;\n//# sourceMappingURL=Map.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/Composite\n */\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport { CLASS_UNSELECTABLE } from '../css.js';\nimport { checkedFonts } from '../render/canvas.js';\nimport { inView } from '../layer/Layer.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport { replaceChildren } from '../dom.js';\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nvar CompositeMapRenderer = /** @class */ (function (_super) {\n    __extends(CompositeMapRenderer, _super);\n    /**\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    function CompositeMapRenderer(map) {\n        var _this = _super.call(this, map) || this;\n        /**\n         * @type {import(\"../events.js\").EventsKey}\n         */\n        _this.fontChangeListenerKey_ = listen(checkedFonts, ObjectEventType.PROPERTYCHANGE, map.redrawText.bind(map));\n        /**\n         * @private\n         * @type {HTMLDivElement}\n         */\n        _this.element_ = document.createElement('div');\n        var style = _this.element_.style;\n        style.position = 'absolute';\n        style.width = '100%';\n        style.height = '100%';\n        style.zIndex = '0';\n        _this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n        var container = map.getViewport();\n        container.insertBefore(_this.element_, container.firstChild || null);\n        /**\n         * @private\n         * @type {Array<HTMLElement>}\n         */\n        _this.children_ = [];\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderedVisible_ = true;\n        return _this;\n    }\n    /**\n     * @param {import(\"../render/EventType.js\").default} type Event type.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    CompositeMapRenderer.prototype.dispatchRenderEvent = function (type, frameState) {\n        var map = this.getMap();\n        if (map.hasListener(type)) {\n            var event_1 = new RenderEvent(type, undefined, frameState);\n            map.dispatchEvent(event_1);\n        }\n    };\n    CompositeMapRenderer.prototype.disposeInternal = function () {\n        unlistenByKey(this.fontChangeListenerKey_);\n        this.element_.parentNode.removeChild(this.element_);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * Render.\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    CompositeMapRenderer.prototype.renderFrame = function (frameState) {\n        if (!frameState) {\n            if (this.renderedVisible_) {\n                this.element_.style.display = 'none';\n                this.renderedVisible_ = false;\n            }\n            return;\n        }\n        this.calculateMatrices2D(frameState);\n        this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n        var layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n            return a.zIndex - b.zIndex;\n        });\n        var viewState = frameState.viewState;\n        this.children_.length = 0;\n        /**\n         * @type {Array<import(\"../layer/BaseVector.js\").default>}\n         */\n        var declutterLayers = [];\n        var previousElement = null;\n        for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n            var layerState = layerStatesArray[i];\n            frameState.layerIndex = i;\n            if (!inView(layerState, viewState) ||\n                (layerState.sourceState != SourceState.READY &&\n                    layerState.sourceState != SourceState.UNDEFINED)) {\n                continue;\n            }\n            var layer = layerState.layer;\n            var element = layer.render(frameState, previousElement);\n            if (!element) {\n                continue;\n            }\n            if (element !== previousElement) {\n                this.children_.push(element);\n                previousElement = element;\n            }\n            if ('getDeclutter' in layer) {\n                declutterLayers.push(layer);\n            }\n        }\n        for (var i = declutterLayers.length - 1; i >= 0; --i) {\n            declutterLayers[i].renderDeclutter(frameState);\n        }\n        replaceChildren(this.element_, this.children_);\n        this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n        if (!this.renderedVisible_) {\n            this.element_.style.display = '';\n            this.renderedVisible_ = true;\n        }\n        this.scheduleExpireIconCache(frameState);\n    };\n    /**\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {function(import(\"../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n     *     callback.\n     * @param {function(import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n     *     function, only layers which are visible and for which this function\n     *     returns `true` will be tested for features.  By default, all visible\n     *     layers will be tested.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    CompositeMapRenderer.prototype.forEachLayerAtPixel = function (pixel, frameState, hitTolerance, callback, layerFilter) {\n        var viewState = frameState.viewState;\n        var layerStates = frameState.layerStatesArray;\n        var numLayers = layerStates.length;\n        for (var i = numLayers - 1; i >= 0; --i) {\n            var layerState = layerStates[i];\n            var layer = layerState.layer;\n            if (layer.hasRenderer() &&\n                inView(layerState, viewState) &&\n                layerFilter(layer)) {\n                var layerRenderer = layer.getRenderer();\n                var data = layerRenderer.getDataAtPixel(pixel, frameState, hitTolerance);\n                if (data) {\n                    var result = callback(layer, data);\n                    if (result) {\n                        return result;\n                    }\n                }\n            }\n        }\n        return undefined;\n    };\n    return CompositeMapRenderer;\n}(MapRenderer));\nexport default CompositeMapRenderer;\n//# sourceMappingURL=Composite.js.map","/**\n * @module ol/CollectionEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when an item is added to the collection.\n     * @event module:ol/Collection.CollectionEvent#add\n     * @api\n     */\n    ADD: 'add',\n    /**\n     * Triggered when an item is removed from the collection.\n     * @event module:ol/Collection.CollectionEvent#remove\n     * @api\n     */\n    REMOVE: 'remove',\n};\n//# sourceMappingURL=CollectionEventType.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n    LENGTH: 'length',\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n */\nvar CollectionEvent = /** @class */ (function (_super) {\n    __extends(CollectionEvent, _super);\n    /**\n     * @param {import(\"./CollectionEventType.js\").default} type Type.\n     * @param {*=} opt_element Element.\n     * @param {number=} opt_index The index of the added or removed element.\n     */\n    function CollectionEvent(type, opt_element, opt_index) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The element that is added to or removed from the collection.\n         * @type {*}\n         * @api\n         */\n        _this.element = opt_element;\n        /**\n         * The index of the added or removed element.\n         * @type {number}\n         * @api\n         */\n        _this.index = opt_index;\n        return _this;\n    }\n    return CollectionEvent;\n}(Event));\nexport { CollectionEvent };\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nvar Collection = /** @class */ (function (_super) {\n    __extends(Collection, _super);\n    /**\n     * @param {Array<T>=} opt_array Array.\n     * @param {Options=} opt_options Collection options.\n     */\n    function Collection(opt_array, opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.unique_ = !!options.unique;\n        /**\n         * @private\n         * @type {!Array<T>}\n         */\n        _this.array_ = opt_array ? opt_array : [];\n        if (_this.unique_) {\n            for (var i = 0, ii = _this.array_.length; i < ii; ++i) {\n                _this.assertUnique_(_this.array_[i], i);\n            }\n        }\n        _this.updateLength_();\n        return _this;\n    }\n    /**\n     * Remove all elements from the collection.\n     * @api\n     */\n    Collection.prototype.clear = function () {\n        while (this.getLength() > 0) {\n            this.pop();\n        }\n    };\n    /**\n     * Add elements to the collection.  This pushes each item in the provided array\n     * to the end of the collection.\n     * @param {!Array<T>} arr Array.\n     * @return {Collection<T>} This collection.\n     * @api\n     */\n    Collection.prototype.extend = function (arr) {\n        for (var i = 0, ii = arr.length; i < ii; ++i) {\n            this.push(arr[i]);\n        }\n        return this;\n    };\n    /**\n     * Iterate over each element, calling the provided callback.\n     * @param {function(T, number, Array<T>): *} f The function to call\n     *     for every element. This function takes 3 arguments (the element, the\n     *     index and the array). The return value is ignored.\n     * @api\n     */\n    Collection.prototype.forEach = function (f) {\n        var array = this.array_;\n        for (var i = 0, ii = array.length; i < ii; ++i) {\n            f(array[i], i, array);\n        }\n    };\n    /**\n     * Get a reference to the underlying Array object. Warning: if the array\n     * is mutated, no events will be dispatched by the collection, and the\n     * collection's \"length\" property won't be in sync with the actual length\n     * of the array.\n     * @return {!Array<T>} Array.\n     * @api\n     */\n    Collection.prototype.getArray = function () {\n        return this.array_;\n    };\n    /**\n     * Get the element at the provided index.\n     * @param {number} index Index.\n     * @return {T} Element.\n     * @api\n     */\n    Collection.prototype.item = function (index) {\n        return this.array_[index];\n    };\n    /**\n     * Get the length of this collection.\n     * @return {number} The length of the array.\n     * @observable\n     * @api\n     */\n    Collection.prototype.getLength = function () {\n        return this.get(Property.LENGTH);\n    };\n    /**\n     * Insert an element at the provided index.\n     * @param {number} index Index.\n     * @param {T} elem Element.\n     * @api\n     */\n    Collection.prototype.insertAt = function (index, elem) {\n        if (this.unique_) {\n            this.assertUnique_(elem);\n        }\n        this.array_.splice(index, 0, elem);\n        this.updateLength_();\n        this.dispatchEvent(new CollectionEvent(CollectionEventType.ADD, elem, index));\n    };\n    /**\n     * Remove the last element of the collection and return it.\n     * Return `undefined` if the collection is empty.\n     * @return {T|undefined} Element.\n     * @api\n     */\n    Collection.prototype.pop = function () {\n        return this.removeAt(this.getLength() - 1);\n    };\n    /**\n     * Insert the provided element at the end of the collection.\n     * @param {T} elem Element.\n     * @return {number} New length of the collection.\n     * @api\n     */\n    Collection.prototype.push = function (elem) {\n        if (this.unique_) {\n            this.assertUnique_(elem);\n        }\n        var n = this.getLength();\n        this.insertAt(n, elem);\n        return this.getLength();\n    };\n    /**\n     * Remove the first occurrence of an element from the collection.\n     * @param {T} elem Element.\n     * @return {T|undefined} The removed element or undefined if none found.\n     * @api\n     */\n    Collection.prototype.remove = function (elem) {\n        var arr = this.array_;\n        for (var i = 0, ii = arr.length; i < ii; ++i) {\n            if (arr[i] === elem) {\n                return this.removeAt(i);\n            }\n        }\n        return undefined;\n    };\n    /**\n     * Remove the element at the provided index and return it.\n     * Return `undefined` if the collection does not contain this index.\n     * @param {number} index Index.\n     * @return {T|undefined} Value.\n     * @api\n     */\n    Collection.prototype.removeAt = function (index) {\n        var prev = this.array_[index];\n        this.array_.splice(index, 1);\n        this.updateLength_();\n        this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev, index));\n        return prev;\n    };\n    /**\n     * Set the element at the provided index.\n     * @param {number} index Index.\n     * @param {T} elem Element.\n     * @api\n     */\n    Collection.prototype.setAt = function (index, elem) {\n        var n = this.getLength();\n        if (index < n) {\n            if (this.unique_) {\n                this.assertUnique_(elem, index);\n            }\n            var prev = this.array_[index];\n            this.array_[index] = elem;\n            this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev, index));\n            this.dispatchEvent(new CollectionEvent(CollectionEventType.ADD, elem, index));\n        }\n        else {\n            for (var j = n; j < index; ++j) {\n                this.insertAt(j, undefined);\n            }\n            this.insertAt(index, elem);\n        }\n    };\n    /**\n     * @private\n     */\n    Collection.prototype.updateLength_ = function () {\n        this.set(Property.LENGTH, this.array_.length);\n    };\n    /**\n     * @private\n     * @param {T} elem Element.\n     * @param {number=} opt_except Optional index to ignore.\n     */\n    Collection.prototype.assertUnique_ = function (elem, opt_except) {\n        for (var i = 0, ii = this.array_.length; i < ii; ++i) {\n            if (this.array_[i] === elem && i !== opt_except) {\n                throw new AssertionError(58);\n            }\n        }\n    };\n    return Collection;\n}(BaseObject));\nexport default Collection;\n//# sourceMappingURL=Collection.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport SourceState from '../source/State.js';\nimport { assert } from '../asserts.js';\nimport { assign, clear } from '../obj.js';\nimport { getChangeEventType } from '../Object.js';\nimport { getIntersection } from '../extent.js';\nimport { getUid } from '../util.js';\nimport { listen, unlistenByKey } from '../events.js';\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|import(\"../Collection.js\").default<import(\"./Base.js\").default>} [layers] Child layers.\n */\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n    LAYERS: 'layers',\n};\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nvar LayerGroup = /** @class */ (function (_super) {\n    __extends(LayerGroup, _super);\n    /**\n     * @param {Options=} opt_options Layer options.\n     */\n    function LayerGroup(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        var baseOptions = /** @type {Options} */ (assign({}, options));\n        delete baseOptions.layers;\n        var layers = options.layers;\n        _this = _super.call(this, baseOptions) || this;\n        /**\n         * @private\n         * @type {Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.layersListenerKeys_ = [];\n        /**\n         * @private\n         * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n         */\n        _this.listenerKeys_ = {};\n        _this.addEventListener(getChangeEventType(Property.LAYERS), _this.handleLayersChanged_);\n        if (layers) {\n            if (Array.isArray(layers)) {\n                layers = new Collection(layers.slice(), { unique: true });\n            }\n            else {\n                assert(typeof ( /** @type {?} */(layers).getArray) === 'function', 43); // Expected `layers` to be an array or a `Collection`\n            }\n        }\n        else {\n            layers = new Collection(undefined, { unique: true });\n        }\n        _this.setLayers(layers);\n        return _this;\n    }\n    /**\n     * @private\n     */\n    LayerGroup.prototype.handleLayerChange_ = function () {\n        this.changed();\n    };\n    /**\n     * @private\n     */\n    LayerGroup.prototype.handleLayersChanged_ = function () {\n        this.layersListenerKeys_.forEach(unlistenByKey);\n        this.layersListenerKeys_.length = 0;\n        var layers = this.getLayers();\n        this.layersListenerKeys_.push(listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this), listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this));\n        for (var id in this.listenerKeys_) {\n            this.listenerKeys_[id].forEach(unlistenByKey);\n        }\n        clear(this.listenerKeys_);\n        var layersArray = layers.getArray();\n        for (var i = 0, ii = layersArray.length; i < ii; i++) {\n            var layer = layersArray[i];\n            this.listenerKeys_[getUid(layer)] = [\n                listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n                listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n            ];\n        }\n        this.changed();\n    };\n    /**\n     * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n     * @private\n     */\n    LayerGroup.prototype.handleLayersAdd_ = function (collectionEvent) {\n        var layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n        this.listenerKeys_[getUid(layer)] = [\n            listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n            listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n        ];\n        this.changed();\n    };\n    /**\n     * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n     * @private\n     */\n    LayerGroup.prototype.handleLayersRemove_ = function (collectionEvent) {\n        var layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n        var key = getUid(layer);\n        this.listenerKeys_[key].forEach(unlistenByKey);\n        delete this.listenerKeys_[key];\n        this.changed();\n    };\n    /**\n     * Returns the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n     * in this group.\n     * @return {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} Collection of\n     *   {@link module:ol/layer/Base layers} that are part of this group.\n     * @observable\n     * @api\n     */\n    LayerGroup.prototype.getLayers = function () {\n        return /** @type {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} */ (this.get(Property.LAYERS));\n    };\n    /**\n     * Set the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n     * in this group.\n     * @param {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} layers Collection of\n     *   {@link module:ol/layer/Base layers} that are part of this group.\n     * @observable\n     * @api\n     */\n    LayerGroup.prototype.setLayers = function (layers) {\n        this.set(Property.LAYERS, layers);\n    };\n    /**\n     * @param {Array<import(\"./Layer.js\").default>=} opt_array Array of layers (to be modified in place).\n     * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n     */\n    LayerGroup.prototype.getLayersArray = function (opt_array) {\n        var array = opt_array !== undefined ? opt_array : [];\n        this.getLayers().forEach(function (layer) {\n            layer.getLayersArray(array);\n        });\n        return array;\n    };\n    /**\n     * @param {Array<import(\"./Layer.js\").State>=} opt_states Optional list of layer states (to be modified in place).\n     * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n     */\n    LayerGroup.prototype.getLayerStatesArray = function (opt_states) {\n        var states = opt_states !== undefined ? opt_states : [];\n        var pos = states.length;\n        this.getLayers().forEach(function (layer) {\n            layer.getLayerStatesArray(states);\n        });\n        var ownLayerState = this.getLayerState();\n        for (var i = pos, ii = states.length; i < ii; i++) {\n            var layerState = states[i];\n            layerState.opacity *= ownLayerState.opacity;\n            layerState.visible = layerState.visible && ownLayerState.visible;\n            layerState.maxResolution = Math.min(layerState.maxResolution, ownLayerState.maxResolution);\n            layerState.minResolution = Math.max(layerState.minResolution, ownLayerState.minResolution);\n            layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n            layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n            if (ownLayerState.extent !== undefined) {\n                if (layerState.extent !== undefined) {\n                    layerState.extent = getIntersection(layerState.extent, ownLayerState.extent);\n                }\n                else {\n                    layerState.extent = ownLayerState.extent;\n                }\n            }\n        }\n        return states;\n    };\n    /**\n     * @return {import(\"../source/State.js\").default} Source state.\n     */\n    LayerGroup.prototype.getSourceState = function () {\n        return SourceState.READY;\n    };\n    return LayerGroup;\n}(BaseLayer));\nexport default LayerGroup;\n//# sourceMappingURL=Group.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map event.\n */\nvar MapEvent = /** @class */ (function (_super) {\n    __extends(MapEvent, _super);\n    /**\n     * @param {string} type Event type.\n     * @param {import(\"./PluggableMap.js\").default} map Map.\n     * @param {?import(\"./PluggableMap.js\").FrameState=} opt_frameState Frame state.\n     */\n    function MapEvent(type, map, opt_frameState) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The map where the event occurred.\n         * @type {import(\"./PluggableMap.js\").default}\n         * @api\n         */\n        _this.map = map;\n        /**\n         * The frame state at the time of the event.\n         * @type {?import(\"./PluggableMap.js\").FrameState}\n         * @api\n         */\n        _this.frameState = opt_frameState !== undefined ? opt_frameState : null;\n        return _this;\n    }\n    return MapEvent;\n}(Event));\nexport default MapEvent;\n//# sourceMappingURL=MapEvent.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nvar MapBrowserEvent = /** @class */ (function (_super) {\n    __extends(MapBrowserEvent, _super);\n    /**\n     * @param {string} type Event type.\n     * @param {import(\"./PluggableMap.js\").default} map Map.\n     * @param {EVENT} originalEvent Original event.\n     * @param {boolean=} opt_dragging Is the map currently being dragged?\n     * @param {?import(\"./PluggableMap.js\").FrameState=} opt_frameState Frame state.\n     */\n    function MapBrowserEvent(type, map, originalEvent, opt_dragging, opt_frameState) {\n        var _this = _super.call(this, type, map, opt_frameState) || this;\n        /**\n         * The original browser event.\n         * @const\n         * @type {EVENT}\n         * @api\n         */\n        _this.originalEvent = originalEvent;\n        /**\n         * The map pixel relative to the viewport corresponding to the original browser event.\n         * @type {?import(\"./pixel.js\").Pixel}\n         */\n        _this.pixel_ = null;\n        /**\n         * The coordinate in the user projection corresponding to the original browser event.\n         * @type {?import(\"./coordinate.js\").Coordinate}\n         */\n        _this.coordinate_ = null;\n        /**\n         * Indicates if the map is currently being dragged. Only set for\n         * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n         *\n         * @type {boolean}\n         * @api\n         */\n        _this.dragging = opt_dragging !== undefined ? opt_dragging : false;\n        return _this;\n    }\n    Object.defineProperty(MapBrowserEvent.prototype, \"pixel\", {\n        /**\n         * The map pixel relative to the viewport corresponding to the original event.\n         * @type {import(\"./pixel.js\").Pixel}\n         * @api\n         */\n        get: function () {\n            if (!this.pixel_) {\n                this.pixel_ = this.map.getEventPixel(this.originalEvent);\n            }\n            return this.pixel_;\n        },\n        set: function (pixel) {\n            this.pixel_ = pixel;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MapBrowserEvent.prototype, \"coordinate\", {\n        /**\n         * The coordinate corresponding to the original browser event.  This will be in the user\n         * projection if one is set.  Otherwise it will be in the view projection.\n         * @type {import(\"./coordinate.js\").Coordinate}\n         * @api\n         */\n        get: function () {\n            if (!this.coordinate_) {\n                this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n            }\n            return this.coordinate_;\n        },\n        set: function (coordinate) {\n            this.coordinate_ = coordinate;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Prevents the default browser action.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n     * @api\n     */\n    MapBrowserEvent.prototype.preventDefault = function () {\n        _super.prototype.preventDefault.call(this);\n        this.originalEvent.preventDefault();\n    };\n    /**\n     * Prevents further propagation of the current event.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n     * @api\n     */\n    MapBrowserEvent.prototype.stopPropagation = function () {\n        _super.prototype.stopPropagation.call(this);\n        this.originalEvent.stopPropagation();\n    };\n    return MapBrowserEvent;\n}(MapEvent));\nexport default MapBrowserEvent;\n//# sourceMappingURL=MapBrowserEvent.js.map","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n    /**\n     * A true single click with no dragging and no double click. Note that this\n     * event is delayed by 250 ms to ensure that it is not a double click.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n     * @api\n     */\n    SINGLECLICK: 'singleclick',\n    /**\n     * A click with no dragging. A double click will fire two of this.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n     * @api\n     */\n    CLICK: EventType.CLICK,\n    /**\n     * A true double click, with no dragging.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n     * @api\n     */\n    DBLCLICK: EventType.DBLCLICK,\n    /**\n     * Triggered when a pointer is dragged.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n     * @api\n     */\n    POINTERDRAG: 'pointerdrag',\n    /**\n     * Triggered when a pointer is moved. Note that on touch devices this is\n     * triggered when the map is panned, so is not the same as mousemove.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n     * @api\n     */\n    POINTERMOVE: 'pointermove',\n    POINTERDOWN: 'pointerdown',\n    POINTERUP: 'pointerup',\n    POINTEROVER: 'pointerover',\n    POINTEROUT: 'pointerout',\n    POINTERENTER: 'pointerenter',\n    POINTERLEAVE: 'pointerleave',\n    POINTERCANCEL: 'pointercancel',\n};\n//# sourceMappingURL=MapBrowserEventType.js.map","/**\n * @module ol/pointer/EventType\n */\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n    POINTERMOVE: 'pointermove',\n    POINTERDOWN: 'pointerdown',\n    POINTERUP: 'pointerup',\n    POINTEROVER: 'pointerover',\n    POINTEROUT: 'pointerout',\n    POINTERENTER: 'pointerenter',\n    POINTERLEAVE: 'pointerleave',\n    POINTERCANCEL: 'pointercancel',\n};\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/MapBrowserEventHandler\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport { DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS } from './has.js';\nimport { listen, unlistenByKey } from './events.js';\nvar MapBrowserEventHandler = /** @class */ (function (_super) {\n    __extends(MapBrowserEventHandler, _super);\n    /**\n     * @param {import(\"./PluggableMap.js\").default} map The map with the viewport to listen to events on.\n     * @param {number=} moveTolerance The minimal distance the pointer must travel to trigger a move.\n     */\n    function MapBrowserEventHandler(map, moveTolerance) {\n        var _this = _super.call(this, map) || this;\n        /**\n         * This is the element that we will listen to the real events on.\n         * @type {import(\"./PluggableMap.js\").default}\n         * @private\n         */\n        _this.map_ = map;\n        /**\n         * @type {any}\n         * @private\n         */\n        _this.clickTimeoutId_;\n        /**\n         * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n         * @type {boolean}\n         */\n        _this.emulateClicks_ = false;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.dragging_ = false;\n        /**\n         * @type {!Array<import(\"./events.js\").EventsKey>}\n         * @private\n         */\n        _this.dragListenerKeys_ = [];\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.moveTolerance_ = moveTolerance\n            ? moveTolerance * DEVICE_PIXEL_RATIO\n            : DEVICE_PIXEL_RATIO;\n        /**\n         * The most recent \"down\" type event (or null if none have occurred).\n         * Set on pointerdown.\n         * @type {PointerEvent}\n         * @private\n         */\n        _this.down_ = null;\n        var element = _this.map_.getViewport();\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.activePointers_ = 0;\n        /**\n         * @type {!Object<number, boolean>}\n         * @private\n         */\n        _this.trackedTouches_ = {};\n        _this.element_ = element;\n        /**\n         * @type {?import(\"./events.js\").EventsKey}\n         * @private\n         */\n        _this.pointerdownListenerKey_ = listen(element, PointerEventType.POINTERDOWN, _this.handlePointerDown_, _this);\n        /**\n         * @type {PointerEvent}\n         * @private\n         */\n        _this.originalPointerMoveEvent_;\n        /**\n         * @type {?import(\"./events.js\").EventsKey}\n         * @private\n         */\n        _this.relayedListenerKey_ = listen(element, PointerEventType.POINTERMOVE, _this.relayEvent_, _this);\n        /**\n         * @private\n         */\n        _this.boundHandleTouchMove_ = _this.handleTouchMove_.bind(_this);\n        _this.element_.addEventListener(EventType.TOUCHMOVE, _this.boundHandleTouchMove_, PASSIVE_EVENT_LISTENERS ? { passive: false } : false);\n        return _this;\n    }\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.emulateClick_ = function (pointerEvent) {\n        var newEvent = new MapBrowserEvent(MapBrowserEventType.CLICK, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n        if (this.clickTimeoutId_ !== undefined) {\n            // double-click\n            clearTimeout(this.clickTimeoutId_);\n            this.clickTimeoutId_ = undefined;\n            newEvent = new MapBrowserEvent(MapBrowserEventType.DBLCLICK, this.map_, pointerEvent);\n            this.dispatchEvent(newEvent);\n        }\n        else {\n            // click\n            this.clickTimeoutId_ = setTimeout(\n            /** @this {MapBrowserEventHandler} */\n            function () {\n                this.clickTimeoutId_ = undefined;\n                var newEvent = new MapBrowserEvent(MapBrowserEventType.SINGLECLICK, this.map_, pointerEvent);\n                this.dispatchEvent(newEvent);\n            }.bind(this), 250);\n        }\n    };\n    /**\n     * Keeps track on how many pointers are currently active.\n     *\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.updateActivePointers_ = function (pointerEvent) {\n        var event = pointerEvent;\n        if (event.type == MapBrowserEventType.POINTERUP ||\n            event.type == MapBrowserEventType.POINTERCANCEL) {\n            delete this.trackedTouches_[event.pointerId];\n        }\n        else if (event.type == MapBrowserEventType.POINTERDOWN) {\n            this.trackedTouches_[event.pointerId] = true;\n        }\n        this.activePointers_ = Object.keys(this.trackedTouches_).length;\n    };\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.handlePointerUp_ = function (pointerEvent) {\n        this.updateActivePointers_(pointerEvent);\n        var newEvent = new MapBrowserEvent(MapBrowserEventType.POINTERUP, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n        // We emulate click events on left mouse button click, touch contact, and pen\n        // contact. isMouseActionButton returns true in these cases (evt.button is set\n        // to 0).\n        // See http://www.w3.org/TR/pointerevents/#button-states\n        // We only fire click, singleclick, and doubleclick if nobody has called\n        // event.stopPropagation() or event.preventDefault().\n        if (this.emulateClicks_ &&\n            !newEvent.propagationStopped &&\n            !this.dragging_ &&\n            this.isMouseActionButton_(pointerEvent)) {\n            this.emulateClick_(this.down_);\n        }\n        if (this.activePointers_ === 0) {\n            this.dragListenerKeys_.forEach(unlistenByKey);\n            this.dragListenerKeys_.length = 0;\n            this.dragging_ = false;\n            this.down_ = null;\n        }\n    };\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @return {boolean} If the left mouse button was pressed.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.isMouseActionButton_ = function (pointerEvent) {\n        return pointerEvent.button === 0;\n    };\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.handlePointerDown_ = function (pointerEvent) {\n        this.emulateClicks_ = this.activePointers_ === 0;\n        this.updateActivePointers_(pointerEvent);\n        var newEvent = new MapBrowserEvent(MapBrowserEventType.POINTERDOWN, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n        this.down_ = pointerEvent;\n        if (this.dragListenerKeys_.length === 0) {\n            var doc = this.map_.getOwnerDocument();\n            this.dragListenerKeys_.push(listen(doc, MapBrowserEventType.POINTERMOVE, this.handlePointerMove_, this), listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this), \n            /* Note that the listener for `pointercancel is set up on\n             * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n             * the `pointerup` and `pointermove` listeners.\n             *\n             * The reason for this is the following: `TouchSource.vacuumTouches_()`\n             * issues `pointercancel` events, when there was no `touchend` for a\n             * `touchstart`. Now, let's say a first `touchstart` is registered on\n             * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n             * But `documentPointerEventHandler_` doesn't know about the first\n             * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n             * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n             * only registered there.\n             */\n            listen(this.element_, MapBrowserEventType.POINTERCANCEL, this.handlePointerUp_, this));\n            if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n                this.dragListenerKeys_.push(listen(this.element_.getRootNode(), MapBrowserEventType.POINTERUP, this.handlePointerUp_, this));\n            }\n        }\n    };\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.handlePointerMove_ = function (pointerEvent) {\n        // Between pointerdown and pointerup, pointermove events are triggered.\n        // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n        // moved a significant distance.\n        if (this.isMoving_(pointerEvent)) {\n            this.dragging_ = true;\n            var newEvent = new MapBrowserEvent(MapBrowserEventType.POINTERDRAG, this.map_, pointerEvent, this.dragging_);\n            this.dispatchEvent(newEvent);\n        }\n    };\n    /**\n     * Wrap and relay a pointer event.  Note that this requires that the type\n     * string for the MapBrowserEvent matches the PointerEvent type.\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.relayEvent_ = function (pointerEvent) {\n        this.originalPointerMoveEvent_ = pointerEvent;\n        var dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n        this.dispatchEvent(new MapBrowserEvent(pointerEvent.type, this.map_, pointerEvent, dragging));\n    };\n    /**\n     * Flexible handling of a `touch-action: none` css equivalent: because calling\n     * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n     * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n     * when an interaction (currently `DragPan` handles the event.\n     * @param {TouchEvent} event Event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.handleTouchMove_ = function (event) {\n        // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n        // may not be initialized yet when we get here on a platform without native pointer events.\n        if (!this.originalPointerMoveEvent_ ||\n            this.originalPointerMoveEvent_.defaultPrevented) {\n            event.preventDefault();\n        }\n    };\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @return {boolean} Is moving.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.isMoving_ = function (pointerEvent) {\n        return (this.dragging_ ||\n            Math.abs(pointerEvent.clientX - this.down_.clientX) >\n                this.moveTolerance_ ||\n            Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_);\n    };\n    /**\n     * Clean up.\n     */\n    MapBrowserEventHandler.prototype.disposeInternal = function () {\n        if (this.relayedListenerKey_) {\n            unlistenByKey(this.relayedListenerKey_);\n            this.relayedListenerKey_ = null;\n        }\n        this.element_.removeEventListener(EventType.TOUCHMOVE, this.boundHandleTouchMove_);\n        if (this.pointerdownListenerKey_) {\n            unlistenByKey(this.pointerdownListenerKey_);\n            this.pointerdownListenerKey_ = null;\n        }\n        this.dragListenerKeys_.forEach(unlistenByKey);\n        this.dragListenerKeys_.length = 0;\n        this.element_ = null;\n        _super.prototype.disposeInternal.call(this);\n    };\n    return MapBrowserEventHandler;\n}(EventTarget));\nexport default MapBrowserEventHandler;\n//# sourceMappingURL=MapBrowserEventHandler.js.map","/**\n * @module ol/MapEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered after a map frame is rendered.\n     * @event module:ol/MapEvent~MapEvent#postrender\n     * @api\n     */\n    POSTRENDER: 'postrender',\n    /**\n     * Triggered when the map starts moving.\n     * @event module:ol/MapEvent~MapEvent#movestart\n     * @api\n     */\n    MOVESTART: 'movestart',\n    /**\n     * Triggered after the map is moved.\n     * @event module:ol/MapEvent~MapEvent#moveend\n     * @api\n     */\n    MOVEEND: 'moveend',\n};\n//# sourceMappingURL=MapEventType.js.map","/**\n * @module ol/MapProperty\n */\n/**\n * @enum {string}\n */\nexport default {\n    LAYERGROUP: 'layergroup',\n    SIZE: 'size',\n    TARGET: 'target',\n    VIEW: 'view',\n};\n//# sourceMappingURL=MapProperty.js.map","/**\n * @module ol/structs/PriorityQueue\n */\nimport { assert } from '../asserts.js';\nimport { clear } from '../obj.js';\n/**\n * @type {number}\n */\nexport var DROP = Infinity;\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See http://closure-library.googlecode.com/svn/docs/closure_goog_structs_heap.js.source.html\n * and http://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nvar PriorityQueue = /** @class */ (function () {\n    /**\n     * @param {function(T): number} priorityFunction Priority function.\n     * @param {function(T): string} keyFunction Key function.\n     */\n    function PriorityQueue(priorityFunction, keyFunction) {\n        /**\n         * @type {function(T): number}\n         * @private\n         */\n        this.priorityFunction_ = priorityFunction;\n        /**\n         * @type {function(T): string}\n         * @private\n         */\n        this.keyFunction_ = keyFunction;\n        /**\n         * @type {Array<T>}\n         * @private\n         */\n        this.elements_ = [];\n        /**\n         * @type {Array<number>}\n         * @private\n         */\n        this.priorities_ = [];\n        /**\n         * @type {!Object<string, boolean>}\n         * @private\n         */\n        this.queuedElements_ = {};\n    }\n    /**\n     * FIXME empty description for jsdoc\n     */\n    PriorityQueue.prototype.clear = function () {\n        this.elements_.length = 0;\n        this.priorities_.length = 0;\n        clear(this.queuedElements_);\n    };\n    /**\n     * Remove and return the highest-priority element. O(log N).\n     * @return {T} Element.\n     */\n    PriorityQueue.prototype.dequeue = function () {\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var element = elements[0];\n        if (elements.length == 1) {\n            elements.length = 0;\n            priorities.length = 0;\n        }\n        else {\n            elements[0] = elements.pop();\n            priorities[0] = priorities.pop();\n            this.siftUp_(0);\n        }\n        var elementKey = this.keyFunction_(element);\n        delete this.queuedElements_[elementKey];\n        return element;\n    };\n    /**\n     * Enqueue an element. O(log N).\n     * @param {T} element Element.\n     * @return {boolean} The element was added to the queue.\n     */\n    PriorityQueue.prototype.enqueue = function (element) {\n        assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\n        var priority = this.priorityFunction_(element);\n        if (priority != DROP) {\n            this.elements_.push(element);\n            this.priorities_.push(priority);\n            this.queuedElements_[this.keyFunction_(element)] = true;\n            this.siftDown_(0, this.elements_.length - 1);\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @return {number} Count.\n     */\n    PriorityQueue.prototype.getCount = function () {\n        return this.elements_.length;\n    };\n    /**\n     * Gets the index of the left child of the node at the given index.\n     * @param {number} index The index of the node to get the left child for.\n     * @return {number} The index of the left child.\n     * @private\n     */\n    PriorityQueue.prototype.getLeftChildIndex_ = function (index) {\n        return index * 2 + 1;\n    };\n    /**\n     * Gets the index of the right child of the node at the given index.\n     * @param {number} index The index of the node to get the right child for.\n     * @return {number} The index of the right child.\n     * @private\n     */\n    PriorityQueue.prototype.getRightChildIndex_ = function (index) {\n        return index * 2 + 2;\n    };\n    /**\n     * Gets the index of the parent of the node at the given index.\n     * @param {number} index The index of the node to get the parent for.\n     * @return {number} The index of the parent.\n     * @private\n     */\n    PriorityQueue.prototype.getParentIndex_ = function (index) {\n        return (index - 1) >> 1;\n    };\n    /**\n     * Make this a heap. O(N).\n     * @private\n     */\n    PriorityQueue.prototype.heapify_ = function () {\n        var i;\n        for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n            this.siftUp_(i);\n        }\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    PriorityQueue.prototype.isEmpty = function () {\n        return this.elements_.length === 0;\n    };\n    /**\n     * @param {string} key Key.\n     * @return {boolean} Is key queued.\n     */\n    PriorityQueue.prototype.isKeyQueued = function (key) {\n        return key in this.queuedElements_;\n    };\n    /**\n     * @param {T} element Element.\n     * @return {boolean} Is queued.\n     */\n    PriorityQueue.prototype.isQueued = function (element) {\n        return this.isKeyQueued(this.keyFunction_(element));\n    };\n    /**\n     * @param {number} index The index of the node to move down.\n     * @private\n     */\n    PriorityQueue.prototype.siftUp_ = function (index) {\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var count = elements.length;\n        var element = elements[index];\n        var priority = priorities[index];\n        var startIndex = index;\n        while (index < count >> 1) {\n            var lIndex = this.getLeftChildIndex_(index);\n            var rIndex = this.getRightChildIndex_(index);\n            var smallerChildIndex = rIndex < count && priorities[rIndex] < priorities[lIndex]\n                ? rIndex\n                : lIndex;\n            elements[index] = elements[smallerChildIndex];\n            priorities[index] = priorities[smallerChildIndex];\n            index = smallerChildIndex;\n        }\n        elements[index] = element;\n        priorities[index] = priority;\n        this.siftDown_(startIndex, index);\n    };\n    /**\n     * @param {number} startIndex The index of the root.\n     * @param {number} index The index of the node to move up.\n     * @private\n     */\n    PriorityQueue.prototype.siftDown_ = function (startIndex, index) {\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var element = elements[index];\n        var priority = priorities[index];\n        while (index > startIndex) {\n            var parentIndex = this.getParentIndex_(index);\n            if (priorities[parentIndex] > priority) {\n                elements[index] = elements[parentIndex];\n                priorities[index] = priorities[parentIndex];\n                index = parentIndex;\n            }\n            else {\n                break;\n            }\n        }\n        elements[index] = element;\n        priorities[index] = priority;\n    };\n    /**\n     * FIXME empty description for jsdoc\n     */\n    PriorityQueue.prototype.reprioritize = function () {\n        var priorityFunction = this.priorityFunction_;\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var index = 0;\n        var n = elements.length;\n        var element, i, priority;\n        for (i = 0; i < n; ++i) {\n            element = elements[i];\n            priority = priorityFunction(element);\n            if (priority == DROP) {\n                delete this.queuedElements_[this.keyFunction_(element)];\n            }\n            else {\n                priorities[index] = priority;\n                elements[index++] = element;\n            }\n        }\n        elements.length = index;\n        priorities.length = index;\n        this.heapify_();\n    };\n    return PriorityQueue;\n}());\nexport default PriorityQueue;\n//# sourceMappingURL=PriorityQueue.js.map","/**\n * @module ol/TileState\n */\n/**\n * @enum {number}\n */\nexport default {\n    IDLE: 0,\n    LOADING: 1,\n    LOADED: 2,\n    /**\n     * Indicates that tile loading failed\n     * @type {number}\n     */\n    ERROR: 3,\n    EMPTY: 4,\n};\n//# sourceMappingURL=TileState.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, { DROP } from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\nvar TileQueue = /** @class */ (function (_super) {\n    __extends(TileQueue, _super);\n    /**\n     * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n     * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n     */\n    function TileQueue(tilePriorityFunction, tileChangeCallback) {\n        var _this = _super.call(this, \n        /**\n         * @param {Array} element Element.\n         * @return {number} Priority.\n         */\n        function (element) {\n            return tilePriorityFunction.apply(null, element);\n        }, \n        /**\n         * @param {Array} element Element.\n         * @return {string} Key.\n         */\n        function (element) {\n            return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n        }) || this;\n        /** @private */\n        _this.boundHandleTileChange_ = _this.handleTileChange.bind(_this);\n        /**\n         * @private\n         * @type {function(): ?}\n         */\n        _this.tileChangeCallback_ = tileChangeCallback;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.tilesLoading_ = 0;\n        /**\n         * @private\n         * @type {!Object<string,boolean>}\n         */\n        _this.tilesLoadingKeys_ = {};\n        return _this;\n    }\n    /**\n     * @param {Array} element Element.\n     * @return {boolean} The element was added to the queue.\n     */\n    TileQueue.prototype.enqueue = function (element) {\n        var added = _super.prototype.enqueue.call(this, element);\n        if (added) {\n            var tile = element[0];\n            tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n        }\n        return added;\n    };\n    /**\n     * @return {number} Number of tiles loading.\n     */\n    TileQueue.prototype.getTilesLoading = function () {\n        return this.tilesLoading_;\n    };\n    /**\n     * @param {import(\"./events/Event.js\").default} event Event.\n     * @protected\n     */\n    TileQueue.prototype.handleTileChange = function (event) {\n        var tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n        var state = tile.getState();\n        if ((tile.hifi && state === TileState.LOADED) ||\n            state === TileState.ERROR ||\n            state === TileState.EMPTY) {\n            tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n            var tileKey = tile.getKey();\n            if (tileKey in this.tilesLoadingKeys_) {\n                delete this.tilesLoadingKeys_[tileKey];\n                --this.tilesLoading_;\n            }\n            this.tileChangeCallback_();\n        }\n    };\n    /**\n     * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n     * @param {number} maxNewLoads Maximum number of new tiles to load.\n     */\n    TileQueue.prototype.loadMoreTiles = function (maxTotalLoading, maxNewLoads) {\n        var newLoads = 0;\n        var state, tile, tileKey;\n        while (this.tilesLoading_ < maxTotalLoading &&\n            newLoads < maxNewLoads &&\n            this.getCount() > 0) {\n            tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n            tileKey = tile.getKey();\n            state = tile.getState();\n            if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n                this.tilesLoadingKeys_[tileKey] = true;\n                ++this.tilesLoading_;\n                ++newLoads;\n                tile.load();\n            }\n        }\n    };\n    return TileQueue;\n}(PriorityQueue));\nexport default TileQueue;\n/**\n * @param {import('./PluggableMap.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(frameState, tile, tileSourceKey, tileCenter, tileResolution) {\n    // Filter out tiles at higher zoom levels than the current zoom level, or that\n    // are outside the visible extent.\n    if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n        return DROP;\n    }\n    if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n        return DROP;\n    }\n    // Prioritize the highest zoom level tiles closest to the focus.\n    // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n    // Within a zoom level, tiles are prioritized by the distance in pixels between\n    // the center of the tile and the center of the viewport.  The factor of 65536\n    // means that the prioritization should behave as desired for tiles up to\n    // 65536 * Math.log(2) = 45426 pixels from the focus.\n    var center = frameState.viewState.center;\n    var deltaX = tileCenter[0] - center[0];\n    var deltaY = tileCenter[1] - center[1];\n    return (65536 * Math.log(tileResolution) +\n        Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution);\n}\n//# sourceMappingURL=TileQueue.js.map","/**\n * @module ol/ViewProperty\n */\n/**\n * @enum {string}\n */\nexport default {\n    CENTER: 'center',\n    RESOLUTION: 'resolution',\n    ROTATION: 'rotation',\n};\n//# sourceMappingURL=ViewProperty.js.map","/**\n * @module ol/tilegrid/common\n */\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport var DEFAULT_MAX_ZOOM = 42;\n/**\n * Default tile size.\n * @type {number}\n */\nexport var DEFAULT_TILE_SIZE = 256;\n//# sourceMappingURL=common.js.map","/**\n * @module ol/centerconstraint\n */\nimport { clamp } from './math.js';\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n    return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @param {Array<number>=} opt_centerShift Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, opt_isMoving, opt_centerShift) {\n        if (center) {\n            var viewWidth = onlyCenter ? 0 : size[0] * resolution;\n            var viewHeight = onlyCenter ? 0 : size[1] * resolution;\n            var shiftX = opt_centerShift ? opt_centerShift[0] : 0;\n            var shiftY = opt_centerShift ? opt_centerShift[1] : 0;\n            var minX = extent[0] + viewWidth / 2 + shiftX;\n            var maxX = extent[2] - viewWidth / 2 + shiftX;\n            var minY = extent[1] + viewHeight / 2 + shiftY;\n            var maxY = extent[3] - viewHeight / 2 + shiftY;\n            // note: when zooming out of bounds, min and max values for x and y may\n            // end up inverted (min > max); this has to be accounted for\n            if (minX > maxX) {\n                minX = (maxX + minX) / 2;\n                maxX = minX;\n            }\n            if (minY > maxY) {\n                minY = (maxY + minY) / 2;\n                maxY = minY;\n            }\n            var x = clamp(center[0], minX, maxX);\n            var y = clamp(center[1], minY, maxY);\n            var ratio = 30 * resolution;\n            // during an interaction, allow some overscroll\n            if (opt_isMoving && smooth) {\n                x +=\n                    -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n                        ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n                y +=\n                    -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n                        ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n            }\n            return [x, y];\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {import(\"./coordinate.js\").Coordinate=} center Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n    return center;\n}\n//# sourceMappingURL=centerconstraint.js.map","/**\n * @module ol/resolutionconstraint\n */\nimport { clamp } from './math.js';\nimport { getHeight, getWidth } from './extent.js';\nimport { linearFindNearest } from './array.js';\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(resolution, maxExtent, viewportSize, showFullExtent) {\n    var xResolution = getWidth(maxExtent) / viewportSize[0];\n    var yResolution = getHeight(maxExtent) / viewportSize[1];\n    if (showFullExtent) {\n        return Math.min(resolution, Math.max(xResolution, yResolution));\n    }\n    return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n    var result = Math.min(resolution, maxResolution);\n    var ratio = 50;\n    result *=\n        Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n            1;\n    if (minResolution) {\n        result = Math.max(result, minResolution);\n        result /=\n            Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n                ratio +\n                1;\n    }\n    return clamp(result, minResolution / 2, maxResolution * 2);\n}\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent=} opt_maxExtent Maximum allowed extent.\n * @param {boolean=} opt_showFullExtent If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(resolutions, opt_smooth, opt_maxExtent, opt_showFullExtent) {\n    return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n        if (resolution !== undefined) {\n            var maxResolution = resolutions[0];\n            var minResolution = resolutions[resolutions.length - 1];\n            var cappedMaxRes = opt_maxExtent\n                ? getViewportClampedResolution(maxResolution, opt_maxExtent, size, opt_showFullExtent)\n                : maxResolution;\n            // during interacting or animating, allow intermediary values\n            if (opt_isMoving) {\n                var smooth = opt_smooth !== undefined ? opt_smooth : true;\n                if (!smooth) {\n                    return clamp(resolution, minResolution, cappedMaxRes);\n                }\n                return getSmoothClampedResolution(resolution, cappedMaxRes, minResolution);\n            }\n            var capped = Math.min(cappedMaxRes, resolution);\n            var z = Math.floor(linearFindNearest(resolutions, capped, direction));\n            if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n                return resolutions[z + 1];\n            }\n            return resolutions[z];\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number=} opt_minResolution Minimum resolution.\n * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent=} opt_maxExtent Maximum allowed extent.\n * @param {boolean=} opt_showFullExtent If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(power, maxResolution, opt_minResolution, opt_smooth, opt_maxExtent, opt_showFullExtent) {\n    return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n        if (resolution !== undefined) {\n            var cappedMaxRes = opt_maxExtent\n                ? getViewportClampedResolution(maxResolution, opt_maxExtent, size, opt_showFullExtent)\n                : maxResolution;\n            var minResolution = opt_minResolution !== undefined ? opt_minResolution : 0;\n            // during interacting or animating, allow intermediary values\n            if (opt_isMoving) {\n                var smooth = opt_smooth !== undefined ? opt_smooth : true;\n                if (!smooth) {\n                    return clamp(resolution, minResolution, cappedMaxRes);\n                }\n                return getSmoothClampedResolution(resolution, cappedMaxRes, minResolution);\n            }\n            var tolerance = 1e-9;\n            var minZoomLevel = Math.ceil(Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance);\n            var offset = -direction * (0.5 - tolerance) + 0.5;\n            var capped = Math.min(cappedMaxRes, resolution);\n            var cappedZoomLevel = Math.floor(Math.log(maxResolution / capped) / Math.log(power) + offset);\n            var zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n            var newResolution = maxResolution / Math.pow(power, zoomLevel);\n            return clamp(newResolution, minResolution, cappedMaxRes);\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent=} opt_maxExtent Maximum allowed extent.\n * @param {boolean=} opt_showFullExtent If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(maxResolution, minResolution, opt_smooth, opt_maxExtent, opt_showFullExtent) {\n    return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n        if (resolution !== undefined) {\n            var cappedMaxRes = opt_maxExtent\n                ? getViewportClampedResolution(maxResolution, opt_maxExtent, size, opt_showFullExtent)\n                : maxResolution;\n            var smooth = opt_smooth !== undefined ? opt_smooth : true;\n            if (!smooth || !opt_isMoving) {\n                return clamp(resolution, minResolution, cappedMaxRes);\n            }\n            return getSmoothClampedResolution(resolution, cappedMaxRes, minResolution);\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n//# sourceMappingURL=resolutionconstraint.js.map","/**\n * @module ol/rotationconstraint\n */\nimport { toRadians } from './math.js';\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n    if (rotation !== undefined) {\n        return 0;\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n    if (rotation !== undefined) {\n        return rotation;\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n    var theta = (2 * Math.PI) / n;\n    return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n        if (opt_isMoving) {\n            return rotation;\n        }\n        if (rotation !== undefined) {\n            rotation = Math.floor(rotation / theta + 0.5) * theta;\n            return rotation;\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {number=} opt_tolerance Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(opt_tolerance) {\n    var tolerance = opt_tolerance || toRadians(5);\n    return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n        if (opt_isMoving) {\n            return rotation;\n        }\n        if (rotation !== undefined) {\n            if (Math.abs(rotation) <= tolerance) {\n                return 0;\n            }\n            else {\n                return rotation;\n            }\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n//# sourceMappingURL=rotationconstraint.js.map","/**\n * @module ol/easing\n */\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n    return Math.pow(t, 3);\n}\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n    return 1 - easeIn(1 - t);\n}\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n    return 3 * t * t - 2 * t * t * t;\n}\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n    return t;\n}\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing~inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n    if (t < 0.5) {\n        return inAndOut(2 * t);\n    }\n    else {\n        return 1 - inAndOut(2 * (t - 0.5));\n    }\n}\n//# sourceMappingURL=easing.js.map","/**\n * @module ol/geom/GeometryLayout\n */\n/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nexport default {\n    XY: 'XY',\n    XYZ: 'XYZ',\n    XYM: 'XYM',\n    XYZM: 'XYZM',\n};\n//# sourceMappingURL=GeometryLayout.js.map","/**\n * @module ol/geom/flat/transform\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(flatCoordinates, offset, end, stride, transform, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        var x = flatCoordinates[j];\n        var y = flatCoordinates[j + 1];\n        dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n        dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(flatCoordinates, offset, end, stride, angle, anchor, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var cos = Math.cos(angle);\n    var sin = Math.sin(angle);\n    var anchorX = anchor[0];\n    var anchorY = anchor[1];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        var deltaX = flatCoordinates[j] - anchorX;\n        var deltaY = flatCoordinates[j + 1] - anchorY;\n        dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n        dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n        for (var k = j + 2; k < j + stride; ++k) {\n            dest[i++] = flatCoordinates[k];\n        }\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(flatCoordinates, offset, end, stride, sx, sy, anchor, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var anchorX = anchor[0];\n    var anchorY = anchor[1];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        var deltaX = flatCoordinates[j] - anchorX;\n        var deltaY = flatCoordinates[j + 1] - anchorY;\n        dest[i++] = anchorX + sx * deltaX;\n        dest[i++] = anchorY + sy * deltaY;\n        for (var k = j + 2; k < j + stride; ++k) {\n            dest[i++] = flatCoordinates[k];\n        }\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(flatCoordinates, offset, end, stride, deltaX, deltaY, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        dest[i++] = flatCoordinates[j] + deltaX;\n        dest[i++] = flatCoordinates[j + 1] + deltaY;\n        for (var k = j + 2; k < j + stride; ++k) {\n            dest[i++] = flatCoordinates[k];\n        }\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n//# sourceMappingURL=transform.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport Units from '../proj/Units.js';\nimport { abstract } from '../util.js';\nimport { compose as composeTransform, create as createTransform, } from '../transform.js';\nimport { createEmpty, createOrUpdateEmpty, getHeight, returnOrUpdate, } from '../extent.js';\nimport { get as getProjection, getTransform } from '../proj.js';\nimport { memoizeOne } from '../functions.js';\nimport { transform2D } from './flat/transform.js';\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nvar tmpTransform = createTransform();\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nvar Geometry = /** @class */ (function (_super) {\n    __extends(Geometry, _super);\n    function Geometry() {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        _this.extent_ = createEmpty();\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.extentRevision_ = -1;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.simplifiedGeometryRevision = 0;\n        /**\n         * Get a transformed and simplified version of the geometry.\n         * @abstract\n         * @param {number} revision The geometry revision.\n         * @param {number} squaredTolerance Squared tolerance.\n         * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n         * @return {Geometry} Simplified geometry.\n         */\n        _this.simplifyTransformedInternal = memoizeOne(function (revision, squaredTolerance, opt_transform) {\n            if (!opt_transform) {\n                return this.getSimplifiedGeometry(squaredTolerance);\n            }\n            var clone = this.clone();\n            clone.applyTransform(opt_transform);\n            return clone.getSimplifiedGeometry(squaredTolerance);\n        });\n        return _this;\n    }\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    Geometry.prototype.simplifyTransformed = function (squaredTolerance, opt_transform) {\n        return this.simplifyTransformedInternal(this.getRevision(), squaredTolerance, opt_transform);\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @abstract\n     * @return {!Geometry} Clone.\n     */\n    Geometry.prototype.clone = function () {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    Geometry.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        return abstract();\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @return {boolean} Contains (x, y).\n     */\n    Geometry.prototype.containsXY = function (x, y) {\n        var coord = this.getClosestPoint([x, y]);\n        return coord[0] === x && coord[1] === y;\n    };\n    /**\n     * Return the closest point of the geometry to the passed point as\n     * {@link module:ol/coordinate~Coordinate coordinate}.\n     * @param {import(\"../coordinate.js\").Coordinate} point Point.\n     * @param {import(\"../coordinate.js\").Coordinate=} opt_closestPoint Closest point.\n     * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n     * @api\n     */\n    Geometry.prototype.getClosestPoint = function (point, opt_closestPoint) {\n        var closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\n        this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n        return closestPoint;\n    };\n    /**\n     * Returns true if this geometry includes the specified coordinate. If the\n     * coordinate is on the boundary of the geometry, returns false.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains coordinate.\n     * @api\n     */\n    Geometry.prototype.intersectsCoordinate = function (coordinate) {\n        return this.containsXY(coordinate[0], coordinate[1]);\n    };\n    /**\n     * @abstract\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @protected\n     * @return {import(\"../extent.js\").Extent} extent Extent.\n     */\n    Geometry.prototype.computeExtent = function (extent) {\n        return abstract();\n    };\n    /**\n     * Get the extent of the geometry.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Extent.\n     * @return {import(\"../extent.js\").Extent} extent Extent.\n     * @api\n     */\n    Geometry.prototype.getExtent = function (opt_extent) {\n        if (this.extentRevision_ != this.getRevision()) {\n            var extent = this.computeExtent(this.extent_);\n            if (isNaN(extent[0]) || isNaN(extent[1])) {\n                createOrUpdateEmpty(extent);\n            }\n            this.extentRevision_ = this.getRevision();\n        }\n        return returnOrUpdate(this.extent_, opt_extent);\n    };\n    /**\n     * Rotate the geometry around a given coordinate. This modifies the geometry\n     * coordinates in place.\n     * @abstract\n     * @param {number} angle Rotation angle in radians.\n     * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n     * @api\n     */\n    Geometry.prototype.rotate = function (angle, anchor) {\n        abstract();\n    };\n    /**\n     * Scale the geometry (with an optional origin).  This modifies the geometry\n     * coordinates in place.\n     * @abstract\n     * @param {number} sx The scaling factor in the x-direction.\n     * @param {number=} opt_sy The scaling factor in the y-direction (defaults to sx).\n     * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor The scale origin (defaults to the center\n     *     of the geometry extent).\n     * @api\n     */\n    Geometry.prototype.scale = function (sx, opt_sy, opt_anchor) {\n        abstract();\n    };\n    /**\n     * Create a simplified version of this geometry.  For linestrings, this uses\n     * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n     * algorithm.  For polygons, a quantization-based\n     * simplification is used to preserve topology.\n     * @param {number} tolerance The tolerance distance for simplification.\n     * @return {Geometry} A new, simplified version of the original geometry.\n     * @api\n     */\n    Geometry.prototype.simplify = function (tolerance) {\n        return this.getSimplifiedGeometry(tolerance * tolerance);\n    };\n    /**\n     * Create a simplified version of this geometry using the Douglas Peucker\n     * algorithm.\n     * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n     * @abstract\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {Geometry} Simplified geometry.\n     */\n    Geometry.prototype.getSimplifiedGeometry = function (squaredTolerance) {\n        return abstract();\n    };\n    /**\n     * Get the type of this geometry.\n     * @abstract\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     */\n    Geometry.prototype.getType = function () {\n        return abstract();\n    };\n    /**\n     * Apply a transform function to the coordinates of the geometry.\n     * The geometry is modified in place.\n     * If you do not want the geometry modified in place, first `clone()` it and\n     * then use this function on the clone.\n     * @abstract\n     * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n     * Called with a flat array of geometry coordinates.\n     */\n    Geometry.prototype.applyTransform = function (transformFn) {\n        abstract();\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @abstract\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     */\n    Geometry.prototype.intersectsExtent = function (extent) {\n        return abstract();\n    };\n    /**\n     * Translate the geometry.  This modifies the geometry coordinates in place.  If\n     * instead you want a new geometry, first `clone()` this geometry.\n     * @abstract\n     * @param {number} deltaX Delta X.\n     * @param {number} deltaY Delta Y.\n     * @api\n     */\n    Geometry.prototype.translate = function (deltaX, deltaY) {\n        abstract();\n    };\n    /**\n     * Transform each coordinate of the geometry from one coordinate reference\n     * system to another. The geometry is modified in place.\n     * For example, a line will be transformed to a line and a circle to a circle.\n     * If you do not want the geometry modified in place, first `clone()` it and\n     * then use this function on the clone.\n     *\n     * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n     *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n     * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n     *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n     * @return {Geometry} This geometry.  Note that original geometry is\n     *     modified in place.\n     * @api\n     */\n    Geometry.prototype.transform = function (source, destination) {\n        /** @type {import(\"../proj/Projection.js\").default} */\n        var sourceProj = getProjection(source);\n        var transformFn = sourceProj.getUnits() == Units.TILE_PIXELS\n            ? function (inCoordinates, outCoordinates, stride) {\n                var pixelExtent = sourceProj.getExtent();\n                var projectedExtent = sourceProj.getWorldExtent();\n                var scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n                composeTransform(tmpTransform, projectedExtent[0], projectedExtent[3], scale, -scale, 0, 0, 0);\n                transform2D(inCoordinates, 0, inCoordinates.length, stride, tmpTransform, outCoordinates);\n                return getTransform(sourceProj, destination)(inCoordinates, outCoordinates, stride);\n            }\n            : getTransform(sourceProj, destination);\n        this.applyTransform(transformFn);\n        return this;\n    };\n    return Geometry;\n}(BaseObject));\nexport default Geometry;\n//# sourceMappingURL=Geometry.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport { abstract } from '../util.js';\nimport { createOrUpdateFromFlatCoordinates, getCenter } from '../extent.js';\nimport { rotate, scale, transform2D, translate } from './flat/transform.js';\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nvar SimpleGeometry = /** @class */ (function (_super) {\n    __extends(SimpleGeometry, _super);\n    function SimpleGeometry() {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {import(\"./GeometryLayout.js\").default}\n         */\n        _this.layout = GeometryLayout.XY;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.stride = 2;\n        /**\n         * @protected\n         * @type {Array<number>}\n         */\n        _this.flatCoordinates = null;\n        return _this;\n    }\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @protected\n     * @return {import(\"../extent.js\").Extent} extent Extent.\n     */\n    SimpleGeometry.prototype.computeExtent = function (extent) {\n        return createOrUpdateFromFlatCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, extent);\n    };\n    /**\n     * @abstract\n     * @return {Array<*>} Coordinates.\n     */\n    SimpleGeometry.prototype.getCoordinates = function () {\n        return abstract();\n    };\n    /**\n     * Return the first coordinate of the geometry.\n     * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n     * @api\n     */\n    SimpleGeometry.prototype.getFirstCoordinate = function () {\n        return this.flatCoordinates.slice(0, this.stride);\n    };\n    /**\n     * @return {Array<number>} Flat coordinates.\n     */\n    SimpleGeometry.prototype.getFlatCoordinates = function () {\n        return this.flatCoordinates;\n    };\n    /**\n     * Return the last coordinate of the geometry.\n     * @return {import(\"../coordinate.js\").Coordinate} Last point.\n     * @api\n     */\n    SimpleGeometry.prototype.getLastCoordinate = function () {\n        return this.flatCoordinates.slice(this.flatCoordinates.length - this.stride);\n    };\n    /**\n     * Return the {@link module:ol/geom/GeometryLayout layout} of the geometry.\n     * @return {import(\"./GeometryLayout.js\").default} Layout.\n     * @api\n     */\n    SimpleGeometry.prototype.getLayout = function () {\n        return this.layout;\n    };\n    /**\n     * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {SimpleGeometry} Simplified geometry.\n     */\n    SimpleGeometry.prototype.getSimplifiedGeometry = function (squaredTolerance) {\n        if (this.simplifiedGeometryRevision !== this.getRevision()) {\n            this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n            this.simplifiedGeometryRevision = this.getRevision();\n        }\n        // If squaredTolerance is negative or if we know that simplification will not\n        // have any effect then just return this.\n        if (squaredTolerance < 0 ||\n            (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n                squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)) {\n            return this;\n        }\n        var simplifiedGeometry = this.getSimplifiedGeometryInternal(squaredTolerance);\n        var simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n        if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n            return simplifiedGeometry;\n        }\n        else {\n            // Simplification did not actually remove any coordinates.  We now know\n            // that any calls to getSimplifiedGeometry with a squaredTolerance less\n            // than or equal to the current squaredTolerance will also not have any\n            // effect.  This allows us to short circuit simplification (saving CPU\n            // cycles) and prevents the cache of simplified geometries from filling\n            // up with useless identical copies of this geometry (saving memory).\n            this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n            return this;\n        }\n    };\n    /**\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {SimpleGeometry} Simplified geometry.\n     * @protected\n     */\n    SimpleGeometry.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        return this;\n    };\n    /**\n     * @return {number} Stride.\n     */\n    SimpleGeometry.prototype.getStride = function () {\n        return this.stride;\n    };\n    /**\n     * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     */\n    SimpleGeometry.prototype.setFlatCoordinates = function (layout, flatCoordinates) {\n        this.stride = getStrideForLayout(layout);\n        this.layout = layout;\n        this.flatCoordinates = flatCoordinates;\n    };\n    /**\n     * @abstract\n     * @param {!Array<*>} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     */\n    SimpleGeometry.prototype.setCoordinates = function (coordinates, opt_layout) {\n        abstract();\n    };\n    /**\n     * @param {import(\"./GeometryLayout.js\").default|undefined} layout Layout.\n     * @param {Array<*>} coordinates Coordinates.\n     * @param {number} nesting Nesting.\n     * @protected\n     */\n    SimpleGeometry.prototype.setLayout = function (layout, coordinates, nesting) {\n        /** @type {number} */\n        var stride;\n        if (layout) {\n            stride = getStrideForLayout(layout);\n        }\n        else {\n            for (var i = 0; i < nesting; ++i) {\n                if (coordinates.length === 0) {\n                    this.layout = GeometryLayout.XY;\n                    this.stride = 2;\n                    return;\n                }\n                else {\n                    coordinates = /** @type {Array} */ (coordinates[0]);\n                }\n            }\n            stride = coordinates.length;\n            layout = getLayoutForStride(stride);\n        }\n        this.layout = layout;\n        this.stride = stride;\n    };\n    /**\n     * Apply a transform function to the coordinates of the geometry.\n     * The geometry is modified in place.\n     * If you do not want the geometry modified in place, first `clone()` it and\n     * then use this function on the clone.\n     * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n     * Called with a flat array of geometry coordinates.\n     * @api\n     */\n    SimpleGeometry.prototype.applyTransform = function (transformFn) {\n        if (this.flatCoordinates) {\n            transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n            this.changed();\n        }\n    };\n    /**\n     * Rotate the geometry around a given coordinate. This modifies the geometry\n     * coordinates in place.\n     * @param {number} angle Rotation angle in counter-clockwise radians.\n     * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n     * @api\n     */\n    SimpleGeometry.prototype.rotate = function (angle, anchor) {\n        var flatCoordinates = this.getFlatCoordinates();\n        if (flatCoordinates) {\n            var stride = this.getStride();\n            rotate(flatCoordinates, 0, flatCoordinates.length, stride, angle, anchor, flatCoordinates);\n            this.changed();\n        }\n    };\n    /**\n     * Scale the geometry (with an optional origin).  This modifies the geometry\n     * coordinates in place.\n     * @param {number} sx The scaling factor in the x-direction.\n     * @param {number=} opt_sy The scaling factor in the y-direction (defaults to sx).\n     * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor The scale origin (defaults to the center\n     *     of the geometry extent).\n     * @api\n     */\n    SimpleGeometry.prototype.scale = function (sx, opt_sy, opt_anchor) {\n        var sy = opt_sy;\n        if (sy === undefined) {\n            sy = sx;\n        }\n        var anchor = opt_anchor;\n        if (!anchor) {\n            anchor = getCenter(this.getExtent());\n        }\n        var flatCoordinates = this.getFlatCoordinates();\n        if (flatCoordinates) {\n            var stride = this.getStride();\n            scale(flatCoordinates, 0, flatCoordinates.length, stride, sx, sy, anchor, flatCoordinates);\n            this.changed();\n        }\n    };\n    /**\n     * Translate the geometry.  This modifies the geometry coordinates in place.  If\n     * instead you want a new geometry, first `clone()` this geometry.\n     * @param {number} deltaX Delta X.\n     * @param {number} deltaY Delta Y.\n     * @api\n     */\n    SimpleGeometry.prototype.translate = function (deltaX, deltaY) {\n        var flatCoordinates = this.getFlatCoordinates();\n        if (flatCoordinates) {\n            var stride = this.getStride();\n            translate(flatCoordinates, 0, flatCoordinates.length, stride, deltaX, deltaY, flatCoordinates);\n            this.changed();\n        }\n    };\n    return SimpleGeometry;\n}(Geometry));\n/**\n * @param {number} stride Stride.\n * @return {import(\"./GeometryLayout.js\").default} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n    var layout;\n    if (stride == 2) {\n        layout = GeometryLayout.XY;\n    }\n    else if (stride == 3) {\n        layout = GeometryLayout.XYZ;\n    }\n    else if (stride == 4) {\n        layout = GeometryLayout.XYZM;\n    }\n    return /** @type {import(\"./GeometryLayout.js\").default} */ (layout);\n}\n/**\n * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n    var stride;\n    if (layout == GeometryLayout.XY) {\n        stride = 2;\n    }\n    else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\n        stride = 3;\n    }\n    else if (layout == GeometryLayout.XYZM) {\n        stride = 4;\n    }\n    return /** @type {number} */ (stride);\n}\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\n    var flatCoordinates = simpleGeometry.getFlatCoordinates();\n    if (!flatCoordinates) {\n        return null;\n    }\n    else {\n        var stride = simpleGeometry.getStride();\n        return transform2D(flatCoordinates, 0, flatCoordinates.length, stride, transform, opt_dest);\n    }\n}\nexport default SimpleGeometry;\n//# sourceMappingURL=SimpleGeometry.js.map","/**\n * @module ol/geom/flat/closest\n */\nimport { lerp, squaredDistance as squaredDx } from '../../math.js';\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(flatCoordinates, offset1, offset2, stride, x, y, closestPoint) {\n    var x1 = flatCoordinates[offset1];\n    var y1 = flatCoordinates[offset1 + 1];\n    var dx = flatCoordinates[offset2] - x1;\n    var dy = flatCoordinates[offset2 + 1] - y1;\n    var offset;\n    if (dx === 0 && dy === 0) {\n        offset = offset1;\n    }\n    else {\n        var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n        if (t > 1) {\n            offset = offset2;\n        }\n        else if (t > 0) {\n            for (var i = 0; i < stride; ++i) {\n                closestPoint[i] = lerp(flatCoordinates[offset1 + i], flatCoordinates[offset2 + i], t);\n            }\n            closestPoint.length = stride;\n            return;\n        }\n        else {\n            offset = offset1;\n        }\n    }\n    for (var i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n    }\n    closestPoint.length = stride;\n}\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    for (offset += stride; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        var squaredDelta = squaredDx(x1, y1, x2, y2);\n        if (squaredDelta > max) {\n            max = squaredDelta;\n        }\n        x1 = x2;\n        y1 = y2;\n    }\n    return max;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n        offset = end;\n    }\n    return max;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(flatCoordinates, offset, endss, stride, max) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n        offset = ends[ends.length - 1];\n    }\n    return max;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(flatCoordinates, offset, end, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, opt_tmpPoint) {\n    if (offset == end) {\n        return minSquaredDistance;\n    }\n    var i, squaredDistance;\n    if (maxDelta === 0) {\n        // All points are identical, so just test the first point.\n        squaredDistance = squaredDx(x, y, flatCoordinates[offset], flatCoordinates[offset + 1]);\n        if (squaredDistance < minSquaredDistance) {\n            for (i = 0; i < stride; ++i) {\n                closestPoint[i] = flatCoordinates[offset + i];\n            }\n            closestPoint.length = stride;\n            return squaredDistance;\n        }\n        else {\n            return minSquaredDistance;\n        }\n    }\n    var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n    var index = offset + stride;\n    while (index < end) {\n        assignClosest(flatCoordinates, index - stride, index, stride, x, y, tmpPoint);\n        squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n        if (squaredDistance < minSquaredDistance) {\n            minSquaredDistance = squaredDistance;\n            for (i = 0; i < stride; ++i) {\n                closestPoint[i] = tmpPoint[i];\n            }\n            closestPoint.length = stride;\n            index += stride;\n        }\n        else {\n            // Skip ahead multiple points, because we know that all the skipped\n            // points cannot be any closer than the closest point we have found so\n            // far.  We know this because we know how close the current point is, how\n            // close the closest point we have found so far is, and the maximum\n            // distance between consecutive points.  For example, if we're currently\n            // at distance 10, the best we've found so far is 3, and that the maximum\n            // distance between consecutive points is 2, then we'll need to skip at\n            // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n            // finding a closer point.  We use Math.max(..., 1) to ensure that we\n            // always advance at least one point, to avoid an infinite loop.\n            index +=\n                stride *\n                    Math.max(((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n                        maxDelta) |\n                        0, 1);\n        }\n    }\n    if (isRing) {\n        // Check the closing segment.\n        assignClosest(flatCoordinates, end - stride, offset, stride, x, y, tmpPoint);\n        squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n        if (squaredDistance < minSquaredDistance) {\n            minSquaredDistance = squaredDistance;\n            for (i = 0; i < stride; ++i) {\n                closestPoint[i] = tmpPoint[i];\n            }\n            closestPoint.length = stride;\n        }\n    }\n    return minSquaredDistance;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(flatCoordinates, offset, ends, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, opt_tmpPoint) {\n    var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        minSquaredDistance = assignClosestPoint(flatCoordinates, offset, end, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n        offset = end;\n    }\n    return minSquaredDistance;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(flatCoordinates, offset, endss, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, opt_tmpPoint) {\n    var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        minSquaredDistance = assignClosestArrayPoint(flatCoordinates, offset, ends, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n        offset = ends[ends.length - 1];\n    }\n    return minSquaredDistance;\n}\n//# sourceMappingURL=closest.js.map","/**\n * @module ol/geom/flat/deflate\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n    for (var i = 0, ii = coordinate.length; i < ii; ++i) {\n        flatCoordinates[offset++] = coordinate[i];\n    }\n    return offset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(flatCoordinates, offset, coordinates, stride) {\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        var coordinate = coordinates[i];\n        for (var j = 0; j < stride; ++j) {\n            flatCoordinates[offset++] = coordinate[j];\n        }\n    }\n    return offset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>=} opt_ends Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(flatCoordinates, offset, coordinatess, stride, opt_ends) {\n    var ends = opt_ends ? opt_ends : [];\n    var i = 0;\n    for (var j = 0, jj = coordinatess.length; j < jj; ++j) {\n        var end = deflateCoordinates(flatCoordinates, offset, coordinatess[j], stride);\n        ends[i++] = end;\n        offset = end;\n    }\n    ends.length = i;\n    return ends;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>=} opt_endss Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(flatCoordinates, offset, coordinatesss, stride, opt_endss) {\n    var endss = opt_endss ? opt_endss : [];\n    var i = 0;\n    for (var j = 0, jj = coordinatesss.length; j < jj; ++j) {\n        var ends = deflateCoordinatesArray(flatCoordinates, offset, coordinatesss[j], stride, endss[i]);\n        endss[i++] = ends;\n        offset = ends[ends.length - 1];\n    }\n    endss.length = i;\n    return endss;\n}\n//# sourceMappingURL=deflate.js.map","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\nimport { squaredDistance, squaredSegmentDistance } from '../../math.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>=} opt_simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(flatCoordinates, offset, end, stride, squaredTolerance, highQuality, opt_simplifiedFlatCoordinates) {\n    var simplifiedFlatCoordinates = opt_simplifiedFlatCoordinates !== undefined\n        ? opt_simplifiedFlatCoordinates\n        : [];\n    if (!highQuality) {\n        end = radialDistance(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n        flatCoordinates = simplifiedFlatCoordinates;\n        offset = 0;\n        stride = 2;\n    }\n    simplifiedFlatCoordinates.length = douglasPeucker(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n    return simplifiedFlatCoordinates;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n    var n = (end - offset) / stride;\n    if (n < 3) {\n        for (; offset < end; offset += stride) {\n            simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + 1];\n        }\n        return simplifiedOffset;\n    }\n    /** @type {Array<number>} */\n    var markers = new Array(n);\n    markers[0] = 1;\n    markers[n - 1] = 1;\n    /** @type {Array<number>} */\n    var stack = [offset, end - stride];\n    var index = 0;\n    while (stack.length > 0) {\n        var last = stack.pop();\n        var first = stack.pop();\n        var maxSquaredDistance = 0;\n        var x1 = flatCoordinates[first];\n        var y1 = flatCoordinates[first + 1];\n        var x2 = flatCoordinates[last];\n        var y2 = flatCoordinates[last + 1];\n        for (var i = first + stride; i < last; i += stride) {\n            var x = flatCoordinates[i];\n            var y = flatCoordinates[i + 1];\n            var squaredDistance_1 = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n            if (squaredDistance_1 > maxSquaredDistance) {\n                index = i;\n                maxSquaredDistance = squaredDistance_1;\n            }\n        }\n        if (maxSquaredDistance > squaredTolerance) {\n            markers[(index - offset) / stride] = 1;\n            if (first + stride < index) {\n                stack.push(first, index);\n            }\n            if (index + stride < last) {\n                stack.push(index, last);\n            }\n        }\n    }\n    for (var i = 0; i < n; ++i) {\n        if (markers[i]) {\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + i * stride];\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + i * stride + 1];\n        }\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(flatCoordinates, offset, ends, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        simplifiedOffset = douglasPeucker(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset);\n        simplifiedEnds.push(simplifiedOffset);\n        offset = end;\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(flatCoordinates, offset, endss, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        var simplifiedEnds = [];\n        simplifiedOffset = douglasPeuckerArray(flatCoordinates, offset, ends, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n        simplifiedEndss.push(simplifiedEnds);\n        offset = ends[ends.length - 1];\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n    if (end <= offset + stride) {\n        // zero or one point, no simplification possible, so copy and return\n        for (; offset < end; offset += stride) {\n            simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + 1];\n        }\n        return simplifiedOffset;\n    }\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    // copy first point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n    var x2 = x1;\n    var y2 = y1;\n    for (offset += stride; offset < end; offset += stride) {\n        x2 = flatCoordinates[offset];\n        y2 = flatCoordinates[offset + 1];\n        if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n            // copy point at offset\n            simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n            simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n            x1 = x2;\n            y1 = y2;\n        }\n    }\n    if (x2 != x1 || y2 != y1) {\n        // copy last point\n        simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n        simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n    return tolerance * Math.round(value / tolerance);\n}\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(flatCoordinates, offset, end, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n    // do nothing if the line is empty\n    if (offset == end) {\n        return simplifiedOffset;\n    }\n    // snap the first coordinate (P1)\n    var x1 = snap(flatCoordinates[offset], tolerance);\n    var y1 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // add the first coordinate to the output\n    simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n    // find the next coordinate that does not snap to the same value as the first\n    // coordinate (P2)\n    var x2, y2;\n    do {\n        x2 = snap(flatCoordinates[offset], tolerance);\n        y2 = snap(flatCoordinates[offset + 1], tolerance);\n        offset += stride;\n        if (offset == end) {\n            // all coordinates snap to the same value, the line collapses to a point\n            // push the last snapped value anyway to ensure that the output contains\n            // at least two points\n            // FIXME should we really return at least two points anyway?\n            simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n            simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n            return simplifiedOffset;\n        }\n    } while (x2 == x1 && y2 == y1);\n    while (offset < end) {\n        // snap the next coordinate (P3)\n        var x3 = snap(flatCoordinates[offset], tolerance);\n        var y3 = snap(flatCoordinates[offset + 1], tolerance);\n        offset += stride;\n        // skip P3 if it is equal to P2\n        if (x3 == x2 && y3 == y2) {\n            continue;\n        }\n        // calculate the delta between P1 and P2\n        var dx1 = x2 - x1;\n        var dy1 = y2 - y1;\n        // calculate the delta between P3 and P1\n        var dx2 = x3 - x1;\n        var dy2 = y3 - y1;\n        // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n        // P1 in the same direction then P2 is on the straight line between P1 and\n        // P3\n        if (dx1 * dy2 == dy1 * dx2 &&\n            ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n            ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))) {\n            // discard P2 and set P2 = P3\n            x2 = x3;\n            y2 = y3;\n            continue;\n        }\n        // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n        // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n        // and continue with P1 = P2 and P2 = P3\n        simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n        simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n        x1 = x2;\n        y1 = y2;\n        x2 = x3;\n        y2 = y3;\n    }\n    // add the last point (P2)\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(flatCoordinates, offset, ends, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        simplifiedOffset = quantize(flatCoordinates, offset, end, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset);\n        simplifiedEnds.push(simplifiedOffset);\n        offset = end;\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(flatCoordinates, offset, endss, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        var simplifiedEnds = [];\n        simplifiedOffset = quantizeArray(flatCoordinates, offset, ends, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n        simplifiedEndss.push(simplifiedEnds);\n        offset = ends[ends.length - 1];\n    }\n    return simplifiedOffset;\n}\n//# sourceMappingURL=simplify.js.map","/**\n * @module ol/geom/flat/inflate\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>=} opt_coordinates Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(flatCoordinates, offset, end, stride, opt_coordinates) {\n    var coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        coordinates[i++] = flatCoordinates.slice(j, j + stride);\n    }\n    coordinates.length = i;\n    return coordinates;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>=} opt_coordinatess Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(flatCoordinates, offset, ends, stride, opt_coordinatess) {\n    var coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n    var i = 0;\n    for (var j = 0, jj = ends.length; j < jj; ++j) {\n        var end = ends[j];\n        coordinatess[i++] = inflateCoordinates(flatCoordinates, offset, end, stride, coordinatess[i]);\n        offset = end;\n    }\n    coordinatess.length = i;\n    return coordinatess;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>=} opt_coordinatesss\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(flatCoordinates, offset, endss, stride, opt_coordinatesss) {\n    var coordinatesss = opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n    var i = 0;\n    for (var j = 0, jj = endss.length; j < jj; ++j) {\n        var ends = endss[j];\n        coordinatesss[i++] = inflateCoordinatesArray(flatCoordinates, offset, ends, stride, coordinatesss[i]);\n        offset = ends[ends.length - 1];\n    }\n    coordinatesss.length = i;\n    return coordinatesss;\n}\n//# sourceMappingURL=inflate.js.map","/**\n * @module ol/geom/flat/area\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n    var twiceArea = 0;\n    var x1 = flatCoordinates[end - stride];\n    var y1 = flatCoordinates[end - stride + 1];\n    for (; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        twiceArea += y1 * x2 - x1 * y2;\n        x1 = x2;\n        y1 = y2;\n    }\n    return twiceArea / 2;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n    var area = 0;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        area += linearRing(flatCoordinates, offset, end, stride);\n        offset = end;\n    }\n    return area;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n    var area = 0;\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        area += linearRings(flatCoordinates, offset, ends, stride);\n        offset = ends[ends.length - 1];\n    }\n    return area;\n}\n//# sourceMappingURL=area.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/LinearRing\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { assignClosestPoint, maxSquaredDelta } from './flat/closest.js';\nimport { closestSquaredDistanceXY } from '../extent.js';\nimport { deflateCoordinates } from './flat/deflate.js';\nimport { douglasPeucker } from './flat/simplify.js';\nimport { inflateCoordinates } from './flat/inflate.js';\nimport { linearRing as linearRingArea } from './flat/area.js';\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nvar LinearRing = /** @class */ (function (_super) {\n    __extends(LinearRing, _super);\n    /**\n     * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n     *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     */\n    function LinearRing(coordinates, opt_layout) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n            _this.setFlatCoordinates(opt_layout, \n            /** @type {Array<number>} */ (coordinates));\n        }\n        else {\n            _this.setCoordinates(\n            /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!LinearRing} Clone.\n     * @api\n     */\n    LinearRing.prototype.clone = function () {\n        return new LinearRing(this.flatCoordinates.slice(), this.layout);\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    LinearRing.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(maxSquaredDelta(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestPoint(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * Return the area of the linear ring on projected plane.\n     * @return {number} Area (on projected plane).\n     * @api\n     */\n    LinearRing.prototype.getArea = function () {\n        return linearRingArea(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * Return the coordinates of the linear ring.\n     * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n     * @api\n     */\n    LinearRing.prototype.getCoordinates = function () {\n        return inflateCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {LinearRing} Simplified LinearRing.\n     * @protected\n     */\n    LinearRing.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        simplifiedFlatCoordinates.length = douglasPeucker(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n        return new LinearRing(simplifiedFlatCoordinates, GeometryLayout.XY);\n    };\n    /**\n     * Get the type of this geometry.\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     * @api\n     */\n    LinearRing.prototype.getType = function () {\n        return GeometryType.LINEAR_RING;\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     * @api\n     */\n    LinearRing.prototype.intersectsExtent = function (extent) {\n        return false;\n    };\n    /**\n     * Set the coordinates of the linear ring.\n     * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     * @api\n     */\n    LinearRing.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 1);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        this.flatCoordinates.length = deflateCoordinates(this.flatCoordinates, 0, coordinates, this.stride);\n        this.changed();\n    };\n    return LinearRing;\n}(SimpleGeometry));\nexport default LinearRing;\n//# sourceMappingURL=LinearRing.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/Point\n */\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { containsXY, createOrUpdateFromCoordinate } from '../extent.js';\nimport { deflateCoordinate } from './flat/deflate.js';\nimport { squaredDistance as squaredDx } from '../math.js';\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nvar Point = /** @class */ (function (_super) {\n    __extends(Point, _super);\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     */\n    function Point(coordinates, opt_layout) {\n        var _this = _super.call(this) || this;\n        _this.setCoordinates(coordinates, opt_layout);\n        return _this;\n    }\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!Point} Clone.\n     * @api\n     */\n    Point.prototype.clone = function () {\n        var point = new Point(this.flatCoordinates.slice(), this.layout);\n        point.applyProperties(this);\n        return point;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    Point.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        var flatCoordinates = this.flatCoordinates;\n        var squaredDistance = squaredDx(x, y, flatCoordinates[0], flatCoordinates[1]);\n        if (squaredDistance < minSquaredDistance) {\n            var stride = this.stride;\n            for (var i = 0; i < stride; ++i) {\n                closestPoint[i] = flatCoordinates[i];\n            }\n            closestPoint.length = stride;\n            return squaredDistance;\n        }\n        else {\n            return minSquaredDistance;\n        }\n    };\n    /**\n     * Return the coordinate of the point.\n     * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n     * @api\n     */\n    Point.prototype.getCoordinates = function () {\n        return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @protected\n     * @return {import(\"../extent.js\").Extent} extent Extent.\n     */\n    Point.prototype.computeExtent = function (extent) {\n        return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n    };\n    /**\n     * Get the type of this geometry.\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     * @api\n     */\n    Point.prototype.getType = function () {\n        return GeometryType.POINT;\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     * @api\n     */\n    Point.prototype.intersectsExtent = function (extent) {\n        return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n    };\n    /**\n     * @param {!Array<*>} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     * @api\n     */\n    Point.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 0);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        this.flatCoordinates.length = deflateCoordinate(this.flatCoordinates, 0, coordinates, this.stride);\n        this.changed();\n    };\n    return Point;\n}(SimpleGeometry));\nexport default Point;\n//# sourceMappingURL=Point.js.map","/**\n * @module ol/geom/flat/contains\n */\nimport { forEachCorner } from '../../extent.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(flatCoordinates, offset, end, stride, extent) {\n    var outside = forEachCorner(extent, \n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n        return !linearRingContainsXY(flatCoordinates, offset, end, stride, coordinate[0], coordinate[1]);\n    });\n    return !outside;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(flatCoordinates, offset, end, stride, x, y) {\n    // http://geomalgorithms.com/a03-_inclusion.html\n    // Copyright 2000 softSurfer, 2012 Dan Sunday\n    // This code may be freely used and modified for any purpose\n    // providing that this copyright notice is included with it.\n    // SoftSurfer makes no warranty for this code, and cannot be held\n    // liable for any real or imagined damage resulting from its use.\n    // Users of this code must verify correctness for their application.\n    var wn = 0;\n    var x1 = flatCoordinates[end - stride];\n    var y1 = flatCoordinates[end - stride + 1];\n    for (; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        if (y1 <= y) {\n            if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n                wn++;\n            }\n        }\n        else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n            wn--;\n        }\n        x1 = x2;\n        y1 = y2;\n    }\n    return wn !== 0;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y) {\n    if (ends.length === 0) {\n        return false;\n    }\n    if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n        return false;\n    }\n    for (var i = 1, ii = ends.length; i < ii; ++i) {\n        if (linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(flatCoordinates, offset, endss, stride, x, y) {\n    if (endss.length === 0) {\n        return false;\n    }\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n            return true;\n        }\n        offset = ends[ends.length - 1];\n    }\n    return false;\n}\n//# sourceMappingURL=contains.js.map","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport { containsExtent, createEmpty, extendFlatCoordinates, intersects, intersectsSegment, } from '../../extent.js';\nimport { forEach as forEachSegment } from './segments.js';\nimport { linearRingContainsExtent, linearRingContainsXY } from './contains.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(flatCoordinates, offset, end, stride, extent) {\n    var coordinatesExtent = extendFlatCoordinates(createEmpty(), flatCoordinates, offset, end, stride);\n    if (!intersects(extent, coordinatesExtent)) {\n        return false;\n    }\n    if (containsExtent(extent, coordinatesExtent)) {\n        return true;\n    }\n    if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n        return true;\n    }\n    if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n        return true;\n    }\n    return forEachSegment(flatCoordinates, offset, end, stride, \n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n        return intersectsSegment(extent, point1, point2);\n    });\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(flatCoordinates, offset, ends, stride, extent) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        if (intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)) {\n            return true;\n        }\n        offset = ends[i];\n    }\n    return false;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(flatCoordinates, offset, end, stride, extent) {\n    if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[1])) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[3])) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[1])) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[3])) {\n        return true;\n    }\n    return false;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent) {\n    if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n        return false;\n    }\n    if (ends.length === 1) {\n        return true;\n    }\n    for (var i = 1, ii = ends.length; i < ii; ++i) {\n        if (linearRingContainsExtent(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n            if (!intersectsLineString(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(flatCoordinates, offset, endss, stride, extent) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        if (intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)) {\n            return true;\n        }\n        offset = ends[ends.length - 1];\n    }\n    return false;\n}\n//# sourceMappingURL=intersectsextent.js.map","/**\n * @module ol/geom/flat/segments\n */\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n    var point1 = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n    var point2 = [];\n    var ret;\n    for (; offset + stride < end; offset += stride) {\n        point2[0] = flatCoordinates[offset + stride];\n        point2[1] = flatCoordinates[offset + stride + 1];\n        ret = callback(point1, point2);\n        if (ret) {\n            return ret;\n        }\n        point1[0] = point2[0];\n        point1[1] = point2[1];\n    }\n    return false;\n}\n//# sourceMappingURL=segments.js.map","/**\n * @module ol/geom/flat/reverse\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n    while (offset < end - stride) {\n        for (var i = 0; i < stride; ++i) {\n            var tmp = flatCoordinates[offset + i];\n            flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n            flatCoordinates[end - stride + i] = tmp;\n        }\n        offset += stride;\n        end -= stride;\n    }\n}\n//# sourceMappingURL=reverse.js.map","/**\n * @module ol/geom/flat/orient\n */\nimport { coordinates as reverseCoordinates } from './reverse.js';\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n    // http://tinyurl.com/clockwise-method\n    // https://github.com/OSGeo/gdal/blob/trunk/gdal/ogr/ogrlinearring.cpp\n    var edge = 0;\n    var x1 = flatCoordinates[end - stride];\n    var y1 = flatCoordinates[end - stride + 1];\n    for (; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        edge += (x2 - x1) * (y2 + y1);\n        x1 = x2;\n        y1 = y2;\n    }\n    return edge === 0 ? undefined : edge > 0;\n}\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right) {\n    var right = opt_right !== undefined ? opt_right : false;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        var isClockwise = linearRingIsClockwise(flatCoordinates, offset, end, stride);\n        if (i === 0) {\n            if ((right && isClockwise) || (!right && !isClockwise)) {\n                return false;\n            }\n        }\n        else {\n            if ((right && !isClockwise) || (!right && isClockwise)) {\n                return false;\n            }\n        }\n        offset = end;\n    }\n    return true;\n}\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(flatCoordinates, offset, endss, stride, opt_right) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right)) {\n            return false;\n        }\n        if (ends.length) {\n            offset = ends[ends.length - 1];\n        }\n    }\n    return true;\n}\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(flatCoordinates, offset, ends, stride, opt_right) {\n    var right = opt_right !== undefined ? opt_right : false;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        var isClockwise = linearRingIsClockwise(flatCoordinates, offset, end, stride);\n        var reverse = i === 0\n            ? (right && isClockwise) || (!right && !isClockwise)\n            : (right && !isClockwise) || (!right && isClockwise);\n        if (reverse) {\n            reverseCoordinates(flatCoordinates, offset, end, stride);\n        }\n        offset = end;\n    }\n    return offset;\n}\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(flatCoordinates, offset, endss, stride, opt_right) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        offset = orientLinearRings(flatCoordinates, offset, endss[i], stride, opt_right);\n    }\n    return offset;\n}\n//# sourceMappingURL=orient.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/Polygon\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { arrayMaxSquaredDelta, assignClosestArrayPoint } from './flat/closest.js';\nimport { closestSquaredDistanceXY, getCenter } from '../extent.js';\nimport { deflateCoordinatesArray } from './flat/deflate.js';\nimport { extend } from '../array.js';\nimport { getInteriorPointOfArray } from './flat/interiorpoint.js';\nimport { inflateCoordinatesArray } from './flat/inflate.js';\nimport { intersectsLinearRingArray } from './flat/intersectsextent.js';\nimport { linearRingsAreOriented, orientLinearRings } from './flat/orient.js';\nimport { linearRings as linearRingsArea } from './flat/area.js';\nimport { linearRingsContainsXY } from './flat/contains.js';\nimport { modulo } from '../math.js';\nimport { quantizeArray } from './flat/simplify.js';\nimport { offset as sphereOffset } from '../sphere.js';\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nvar Polygon = /** @class */ (function (_super) {\n    __extends(Polygon, _super);\n    /**\n     * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n     *     Array of linear rings that define the polygon. The first linear ring of the\n     *     array defines the outer-boundary or surface of the polygon. Each subsequent\n     *     linear ring defines a hole in the surface of the polygon. A linear ring is\n     *     an array of vertices' coordinates where the first coordinate and the last are\n     *     equivalent. (For internal use, flat coordinates in combination with\n     *     `opt_layout` and `opt_ends` are also accepted.)\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     * @param {Array<number>=} opt_ends Ends (for internal use with flat coordinates).\n     */\n    function Polygon(coordinates, opt_layout, opt_ends) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {Array<number>}\n         * @private\n         */\n        _this.ends_ = [];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.flatInteriorPointRevision_ = -1;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.flatInteriorPoint_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.orientedRevision_ = -1;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.orientedFlatCoordinates_ = null;\n        if (opt_layout !== undefined && opt_ends) {\n            _this.setFlatCoordinates(opt_layout, \n            /** @type {Array<number>} */ (coordinates));\n            _this.ends_ = opt_ends;\n        }\n        else {\n            _this.setCoordinates(\n            /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Append the passed linear ring to this polygon.\n     * @param {LinearRing} linearRing Linear ring.\n     * @api\n     */\n    Polygon.prototype.appendLinearRing = function (linearRing) {\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n        }\n        else {\n            extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n        }\n        this.ends_.push(this.flatCoordinates.length);\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!Polygon} Clone.\n     * @api\n     */\n    Polygon.prototype.clone = function () {\n        var polygon = new Polygon(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\n        polygon.applyProperties(this);\n        return polygon;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    Polygon.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(this.flatCoordinates, 0, this.ends_, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestArrayPoint(this.flatCoordinates, 0, this.ends_, this.stride, this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @return {boolean} Contains (x, y).\n     */\n    Polygon.prototype.containsXY = function (x, y) {\n        return linearRingsContainsXY(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, x, y);\n    };\n    /**\n     * Return the area of the polygon on projected plane.\n     * @return {number} Area (on projected plane).\n     * @api\n     */\n    Polygon.prototype.getArea = function () {\n        return linearRingsArea(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride);\n    };\n    /**\n     * Get the coordinate array for this geometry.  This array has the structure\n     * of a GeoJSON coordinate array for polygons.\n     *\n     * @param {boolean=} opt_right Orient coordinates according to the right-hand\n     *     rule (counter-clockwise for exterior and clockwise for interior rings).\n     *     If `false`, coordinates will be oriented according to the left-hand rule\n     *     (clockwise for exterior and counter-clockwise for interior rings).\n     *     By default, coordinate orientation will depend on how the geometry was\n     *     constructed.\n     * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n     * @api\n     */\n    Polygon.prototype.getCoordinates = function (opt_right) {\n        var flatCoordinates;\n        if (opt_right !== undefined) {\n            flatCoordinates = this.getOrientedFlatCoordinates().slice();\n            orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, opt_right);\n        }\n        else {\n            flatCoordinates = this.flatCoordinates;\n        }\n        return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n    };\n    /**\n     * @return {Array<number>} Ends.\n     */\n    Polygon.prototype.getEnds = function () {\n        return this.ends_;\n    };\n    /**\n     * @return {Array<number>} Interior point.\n     */\n    Polygon.prototype.getFlatInteriorPoint = function () {\n        if (this.flatInteriorPointRevision_ != this.getRevision()) {\n            var flatCenter = getCenter(this.getExtent());\n            this.flatInteriorPoint_ = getInteriorPointOfArray(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, flatCenter, 0);\n            this.flatInteriorPointRevision_ = this.getRevision();\n        }\n        return this.flatInteriorPoint_;\n    };\n    /**\n     * Return an interior point of the polygon.\n     * @return {Point} Interior point as XYM coordinate, where M is the\n     * length of the horizontal intersection that the point belongs to.\n     * @api\n     */\n    Polygon.prototype.getInteriorPoint = function () {\n        return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\n    };\n    /**\n     * Return the number of rings of the polygon,  this includes the exterior\n     * ring and any interior rings.\n     *\n     * @return {number} Number of rings.\n     * @api\n     */\n    Polygon.prototype.getLinearRingCount = function () {\n        return this.ends_.length;\n    };\n    /**\n     * Return the Nth linear ring of the polygon geometry. Return `null` if the\n     * given index is out of range.\n     * The exterior linear ring is available at index `0` and the interior rings\n     * at index `1` and beyond.\n     *\n     * @param {number} index Index.\n     * @return {LinearRing} Linear ring.\n     * @api\n     */\n    Polygon.prototype.getLinearRing = function (index) {\n        if (index < 0 || this.ends_.length <= index) {\n            return null;\n        }\n        return new LinearRing(this.flatCoordinates.slice(index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\n    };\n    /**\n     * Return the linear rings of the polygon.\n     * @return {Array<LinearRing>} Linear rings.\n     * @api\n     */\n    Polygon.prototype.getLinearRings = function () {\n        var layout = this.layout;\n        var flatCoordinates = this.flatCoordinates;\n        var ends = this.ends_;\n        var linearRings = [];\n        var offset = 0;\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            var end = ends[i];\n            var linearRing = new LinearRing(flatCoordinates.slice(offset, end), layout);\n            linearRings.push(linearRing);\n            offset = end;\n        }\n        return linearRings;\n    };\n    /**\n     * @return {Array<number>} Oriented flat coordinates.\n     */\n    Polygon.prototype.getOrientedFlatCoordinates = function () {\n        if (this.orientedRevision_ != this.getRevision()) {\n            var flatCoordinates = this.flatCoordinates;\n            if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n                this.orientedFlatCoordinates_ = flatCoordinates;\n            }\n            else {\n                this.orientedFlatCoordinates_ = flatCoordinates.slice();\n                this.orientedFlatCoordinates_.length = orientLinearRings(this.orientedFlatCoordinates_, 0, this.ends_, this.stride);\n            }\n            this.orientedRevision_ = this.getRevision();\n        }\n        return this.orientedFlatCoordinates_;\n    };\n    /**\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {Polygon} Simplified Polygon.\n     * @protected\n     */\n    Polygon.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        var simplifiedEnds = [];\n        simplifiedFlatCoordinates.length = quantizeArray(this.flatCoordinates, 0, this.ends_, this.stride, Math.sqrt(squaredTolerance), simplifiedFlatCoordinates, 0, simplifiedEnds);\n        return new Polygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\n    };\n    /**\n     * Get the type of this geometry.\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     * @api\n     */\n    Polygon.prototype.getType = function () {\n        return GeometryType.POLYGON;\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     * @api\n     */\n    Polygon.prototype.intersectsExtent = function (extent) {\n        return intersectsLinearRingArray(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, extent);\n    };\n    /**\n     * Set the coordinates of the polygon.\n     * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     * @api\n     */\n    Polygon.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 2);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        var ends = deflateCoordinatesArray(this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n        this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n        this.changed();\n    };\n    return Polygon;\n}(SimpleGeometry));\nexport default Polygon;\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices.\n * @param {number=} opt_n Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number=} opt_sphereRadius Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\n    var n = opt_n ? opt_n : 32;\n    /** @type {Array<number>} */\n    var flatCoordinates = [];\n    for (var i = 0; i < n; ++i) {\n        extend(flatCoordinates, sphereOffset(center, radius, (2 * Math.PI * i) / n, opt_sphereRadius));\n    }\n    flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n    return new Polygon(flatCoordinates, GeometryLayout.XY, [\n        flatCoordinates.length,\n    ]);\n}\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n    var minX = extent[0];\n    var minY = extent[1];\n    var maxX = extent[2];\n    var maxY = extent[3];\n    var flatCoordinates = [\n        minX,\n        minY,\n        minX,\n        maxY,\n        maxX,\n        maxY,\n        maxX,\n        minY,\n        minX,\n        minY,\n    ];\n    return new Polygon(flatCoordinates, GeometryLayout.XY, [\n        flatCoordinates.length,\n    ]);\n}\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number=} opt_sides Number of sides of the polygon. Default is 32.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, opt_sides, opt_angle) {\n    var sides = opt_sides ? opt_sides : 32;\n    var stride = circle.getStride();\n    var layout = circle.getLayout();\n    var center = circle.getCenter();\n    var arrayLength = stride * (sides + 1);\n    var flatCoordinates = new Array(arrayLength);\n    for (var i = 0; i < arrayLength; i += stride) {\n        flatCoordinates[i] = 0;\n        flatCoordinates[i + 1] = 0;\n        for (var j = 2; j < stride; j++) {\n            flatCoordinates[i + j] = center[j];\n        }\n    }\n    var ends = [flatCoordinates.length];\n    var polygon = new Polygon(flatCoordinates, layout, ends);\n    makeRegular(polygon, center, circle.getRadius(), opt_angle);\n    return polygon;\n}\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, opt_angle) {\n    var flatCoordinates = polygon.getFlatCoordinates();\n    var stride = polygon.getStride();\n    var sides = flatCoordinates.length / stride - 1;\n    var startAngle = opt_angle ? opt_angle : 0;\n    for (var i = 0; i <= sides; ++i) {\n        var offset = i * stride;\n        var angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n        flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n        flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n    }\n    polygon.changed();\n}\n//# sourceMappingURL=Polygon.js.map","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport { linearRingsContainsXY } from './contains.js';\nimport { numberSafeCompareFunction } from '../../array.js';\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(flatCoordinates, offset, ends, stride, flatCenters, flatCentersOffset, opt_dest) {\n    var i, ii, x, x1, x2, y1, y2;\n    var y = flatCenters[flatCentersOffset + 1];\n    /** @type {Array<number>} */\n    var intersections = [];\n    // Calculate intersections with the horizontal line\n    for (var r = 0, rr = ends.length; r < rr; ++r) {\n        var end = ends[r];\n        x1 = flatCoordinates[end - stride];\n        y1 = flatCoordinates[end - stride + 1];\n        for (i = offset; i < end; i += stride) {\n            x2 = flatCoordinates[i];\n            y2 = flatCoordinates[i + 1];\n            if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n                x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n                intersections.push(x);\n            }\n            x1 = x2;\n            y1 = y2;\n        }\n    }\n    // Find the longest segment of the horizontal line that has its center point\n    // inside the linear ring.\n    var pointX = NaN;\n    var maxSegmentLength = -Infinity;\n    intersections.sort(numberSafeCompareFunction);\n    x1 = intersections[0];\n    for (i = 1, ii = intersections.length; i < ii; ++i) {\n        x2 = intersections[i];\n        var segmentLength = Math.abs(x2 - x1);\n        if (segmentLength > maxSegmentLength) {\n            x = (x1 + x2) / 2;\n            if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n                pointX = x;\n                maxSegmentLength = segmentLength;\n            }\n        }\n        x1 = x2;\n    }\n    if (isNaN(pointX)) {\n        // There is no horizontal line that has its center point inside the linear\n        // ring.  Use the center of the the linear ring's extent.\n        pointX = flatCenters[flatCentersOffset];\n    }\n    if (opt_dest) {\n        opt_dest.push(pointX, y, maxSegmentLength);\n        return opt_dest;\n    }\n    else {\n        return [pointX, y, maxSegmentLength];\n    }\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(flatCoordinates, offset, endss, stride, flatCenters) {\n    var interiorPoints = [];\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        interiorPoints = getInteriorPointOfArray(flatCoordinates, offset, ends, stride, flatCenters, 2 * i, interiorPoints);\n        offset = ends[ends.length - 1];\n    }\n    return interiorPoints;\n}\n//# sourceMappingURL=interiorpoint.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport GeometryType from './geom/GeometryType.js';\nimport Units from './proj/Units.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport { DEFAULT_TILE_SIZE } from './tilegrid/common.js';\nimport { METERS_PER_UNIT, createProjection, fromUserCoordinate, fromUserExtent, getUserProjection, toUserCoordinate, toUserExtent, } from './proj.js';\nimport { VOID } from './functions.js';\nimport { add as addCoordinate, equals as coordinatesEqual, rotate as rotateCoordinate, } from './coordinate.js';\nimport { assert } from './asserts.js';\nimport { assign } from './obj.js';\nimport { none as centerNone, createExtent } from './centerconstraint.js';\nimport { clamp, modulo } from './math.js';\nimport { createMinMaxResolution } from './resolutionconstraint.js';\nimport { createSnapToN, createSnapToZero, disable, none as rotationNone, } from './rotationconstraint.js';\nimport { createSnapToPower, createSnapToResolutions, } from './resolutionconstraint.js';\nimport { easeOut } from './easing.js';\nimport { equals } from './coordinate.js';\nimport { getCenter, getForViewAndSize, getHeight, getWidth, isEmpty, } from './extent.js';\nimport { inAndOut } from './easing.js';\nimport { linearFindNearest } from './array.js';\nimport { fromExtent as polygonFromExtent } from './geom/Polygon.js';\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter]\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter]\n * @property {number} [sourceResolution]\n * @property {number} [targetResolution]\n * @property {number} [sourceRotation]\n * @property {number} [targetRotation]\n * @property {import(\"./coordinate.js\").Coordinate} [anchor]\n * @property {number} start\n * @property {number} duration\n * @property {boolean} complete\n * @property {function(number):number} easing\n * @property {function(boolean):void} callback\n */\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center\n * @property {import(\"./resolutionconstraint.js\").Type} resolution\n * @property {import(\"./rotationconstraint.js\").Type} rotation\n */\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions to determine the\n * resolution constraint. If set the `maxResolution`, `minResolution`,\n * `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center\n * @property {import(\"./proj/Projection.js\").default} projection\n * @property {number} resolution\n * @property {number} rotation\n * @property {number} zoom\n */\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nvar DEFAULT_MIN_ZOOM = 0;\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Spherical Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `opt_anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nvar View = /** @class */ (function (_super) {\n    __extends(View, _super);\n    /**\n     * @param {ViewOptions=} opt_options View options.\n     */\n    function View(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = assign({}, opt_options);\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.hints_ = [0, 0];\n        /**\n         * @private\n         * @type {Array<Array<Animation>>}\n         */\n        _this.animations_ = [];\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.updateAnimationKey_;\n        /**\n         * @private\n         * @const\n         * @type {import(\"./proj/Projection.js\").default}\n         */\n        _this.projection_ = createProjection(options.projection, 'EPSG:3857');\n        /**\n         * @private\n         * @type {import(\"./size.js\").Size}\n         */\n        _this.viewportSize_ = [100, 100];\n        /**\n         * @private\n         * @type {import(\"./coordinate.js\").Coordinate|undefined}\n         */\n        _this.targetCenter_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.targetResolution_;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.targetRotation_;\n        /**\n         * @private\n         * @type {import(\"./coordinate.js\").Coordinate|undefined}\n         */\n        _this.cancelAnchor_ = undefined;\n        if (options.center) {\n            options.center = fromUserCoordinate(options.center, _this.projection_);\n        }\n        if (options.extent) {\n            options.extent = fromUserExtent(options.extent, _this.projection_);\n        }\n        _this.applyOptions_(options);\n        return _this;\n    }\n    /**\n     * Set up the view with the given options.\n     * @param {ViewOptions} options View options.\n     */\n    View.prototype.applyOptions_ = function (options) {\n        /**\n         * @type {Object<string, *>}\n         */\n        var properties = {};\n        var resolutionConstraintInfo = createResolutionConstraint(options);\n        /**\n         * @private\n         * @type {number}\n         */\n        this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.minResolution_ = resolutionConstraintInfo.minResolution;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n        /**\n         * @private\n         * @type {Array<number>|undefined}\n         */\n        this.resolutions_ = options.resolutions;\n        /**\n         * Padding (in css pixels).\n         * If the map viewport is partially covered with other content (overlays) along\n         * its edges, this setting allows to shift the center of the viewport away from that\n         * content. The order of the values in the array is top, right, bottom, left.\n         * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n         * @type {Array<number>|undefined}\n         * @api\n         */\n        this.padding = options.padding;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.minZoom_ = resolutionConstraintInfo.minZoom;\n        var centerConstraint = createCenterConstraint(options);\n        var resolutionConstraint = resolutionConstraintInfo.constraint;\n        var rotationConstraint = createRotationConstraint(options);\n        /**\n         * @private\n         * @type {Constraints}\n         */\n        this.constraints_ = {\n            center: centerConstraint,\n            resolution: resolutionConstraint,\n            rotation: rotationConstraint,\n        };\n        this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n        this.setCenterInternal(options.center !== undefined ? options.center : null);\n        if (options.resolution !== undefined) {\n            this.setResolution(options.resolution);\n        }\n        else if (options.zoom !== undefined) {\n            this.setZoom(options.zoom);\n        }\n        this.setProperties(properties);\n        /**\n         * @private\n         * @type {ViewOptions}\n         */\n        this.options_ = options;\n    };\n    /**\n     * Get an updated version of the view options used to construct the view.  The\n     * current resolution (or zoom), center, and rotation are applied to any stored\n     * options.  The provided options can be used to apply new min/max zoom or\n     * resolution limits.\n     * @param {ViewOptions} newOptions New options to be applied.\n     * @return {ViewOptions} New options updated with the current view state.\n     */\n    View.prototype.getUpdatedOptions_ = function (newOptions) {\n        var options = assign({}, this.options_);\n        // preserve resolution (or zoom)\n        if (options.resolution !== undefined) {\n            options.resolution = this.getResolution();\n        }\n        else {\n            options.zoom = this.getZoom();\n        }\n        // preserve center\n        options.center = this.getCenterInternal();\n        // preserve rotation\n        options.rotation = this.getRotation();\n        return assign({}, options, newOptions);\n    };\n    /**\n     * Animate the view.  The view's center, zoom (or resolution), and rotation\n     * can be animated for smooth transitions between view states.  For example,\n     * to animate the view to a new zoom level:\n     *\n     *     view.animate({zoom: view.getZoom() + 1});\n     *\n     * By default, the animation lasts one second and uses in-and-out easing.  You\n     * can customize this behavior by including `duration` (in milliseconds) and\n     * `easing` options (see {@link module:ol/easing}).\n     *\n     * To chain together multiple animations, call the method with multiple\n     * animation objects.  For example, to first zoom and then pan:\n     *\n     *     view.animate({zoom: 10}, {center: [0, 0]});\n     *\n     * If you provide a function as the last argument to the animate method, it\n     * will get called at the end of an animation series.  The callback will be\n     * called with `true` if the animation series completed on its own or `false`\n     * if it was cancelled.\n     *\n     * Animations are cancelled by user interactions (e.g. dragging the map) or by\n     * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n     * (or another method that calls one of these).\n     *\n     * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n     *     options.  Multiple animations can be run in series by passing multiple\n     *     options objects.  To run multiple animations in parallel, call the method\n     *     multiple times.  An optional callback can be provided as a final\n     *     argument.  The callback will be called with a boolean indicating whether\n     *     the animation completed without being cancelled.\n     * @api\n     */\n    View.prototype.animate = function (var_args) {\n        if (this.isDef() && !this.getAnimating()) {\n            this.resolveConstraints(0);\n        }\n        var args = new Array(arguments.length);\n        for (var i = 0; i < args.length; ++i) {\n            var options = arguments[i];\n            if (options.center) {\n                options = assign({}, options);\n                options.center = fromUserCoordinate(options.center, this.getProjection());\n            }\n            if (options.anchor) {\n                options = assign({}, options);\n                options.anchor = fromUserCoordinate(options.anchor, this.getProjection());\n            }\n            args[i] = options;\n        }\n        this.animateInternal.apply(this, args);\n    };\n    /**\n     * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n     */\n    View.prototype.animateInternal = function (var_args) {\n        var animationCount = arguments.length;\n        var callback;\n        if (animationCount > 1 &&\n            typeof arguments[animationCount - 1] === 'function') {\n            callback = arguments[animationCount - 1];\n            --animationCount;\n        }\n        if (!this.isDef()) {\n            // if view properties are not yet set, shortcut to the final state\n            var state = arguments[animationCount - 1];\n            if (state.center) {\n                this.setCenterInternal(state.center);\n            }\n            if (state.zoom !== undefined) {\n                this.setZoom(state.zoom);\n            }\n            if (state.rotation !== undefined) {\n                this.setRotation(state.rotation);\n            }\n            if (callback) {\n                animationCallback(callback, true);\n            }\n            return;\n        }\n        var start = Date.now();\n        var center = this.targetCenter_.slice();\n        var resolution = this.targetResolution_;\n        var rotation = this.targetRotation_;\n        var series = [];\n        for (var i = 0; i < animationCount; ++i) {\n            var options = /** @type {AnimationOptions} */ (arguments[i]);\n            var animation = {\n                start: start,\n                complete: false,\n                anchor: options.anchor,\n                duration: options.duration !== undefined ? options.duration : 1000,\n                easing: options.easing || inAndOut,\n                callback: callback,\n            };\n            if (options.center) {\n                animation.sourceCenter = center;\n                animation.targetCenter = options.center.slice();\n                center = animation.targetCenter;\n            }\n            if (options.zoom !== undefined) {\n                animation.sourceResolution = resolution;\n                animation.targetResolution = this.getResolutionForZoom(options.zoom);\n                resolution = animation.targetResolution;\n            }\n            else if (options.resolution) {\n                animation.sourceResolution = resolution;\n                animation.targetResolution = options.resolution;\n                resolution = animation.targetResolution;\n            }\n            if (options.rotation !== undefined) {\n                animation.sourceRotation = rotation;\n                var delta = modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n                animation.targetRotation = rotation + delta;\n                rotation = animation.targetRotation;\n            }\n            // check if animation is a no-op\n            if (isNoopAnimation(animation)) {\n                animation.complete = true;\n                // we still push it onto the series for callback handling\n            }\n            else {\n                start += animation.duration;\n            }\n            series.push(animation);\n        }\n        this.animations_.push(series);\n        this.setHint(ViewHint.ANIMATING, 1);\n        this.updateAnimations_();\n    };\n    /**\n     * Determine if the view is being animated.\n     * @return {boolean} The view is being animated.\n     * @api\n     */\n    View.prototype.getAnimating = function () {\n        return this.hints_[ViewHint.ANIMATING] > 0;\n    };\n    /**\n     * Determine if the user is interacting with the view, such as panning or zooming.\n     * @return {boolean} The view is being interacted with.\n     * @api\n     */\n    View.prototype.getInteracting = function () {\n        return this.hints_[ViewHint.INTERACTING] > 0;\n    };\n    /**\n     * Cancel any ongoing animations.\n     * @api\n     */\n    View.prototype.cancelAnimations = function () {\n        this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n        var anchor;\n        for (var i = 0, ii = this.animations_.length; i < ii; ++i) {\n            var series = this.animations_[i];\n            if (series[0].callback) {\n                animationCallback(series[0].callback, false);\n            }\n            if (!anchor) {\n                for (var j = 0, jj = series.length; j < jj; ++j) {\n                    var animation = series[j];\n                    if (!animation.complete) {\n                        anchor = animation.anchor;\n                        break;\n                    }\n                }\n            }\n        }\n        this.animations_.length = 0;\n        this.cancelAnchor_ = anchor;\n    };\n    /**\n     * Update all animations.\n     */\n    View.prototype.updateAnimations_ = function () {\n        if (this.updateAnimationKey_ !== undefined) {\n            cancelAnimationFrame(this.updateAnimationKey_);\n            this.updateAnimationKey_ = undefined;\n        }\n        if (!this.getAnimating()) {\n            return;\n        }\n        var now = Date.now();\n        var more = false;\n        for (var i = this.animations_.length - 1; i >= 0; --i) {\n            var series = this.animations_[i];\n            var seriesComplete = true;\n            for (var j = 0, jj = series.length; j < jj; ++j) {\n                var animation = series[j];\n                if (animation.complete) {\n                    continue;\n                }\n                var elapsed = now - animation.start;\n                var fraction = animation.duration > 0 ? elapsed / animation.duration : 1;\n                if (fraction >= 1) {\n                    animation.complete = true;\n                    fraction = 1;\n                }\n                else {\n                    seriesComplete = false;\n                }\n                var progress = animation.easing(fraction);\n                if (animation.sourceCenter) {\n                    var x0 = animation.sourceCenter[0];\n                    var y0 = animation.sourceCenter[1];\n                    var x1 = animation.targetCenter[0];\n                    var y1 = animation.targetCenter[1];\n                    var x = x0 + progress * (x1 - x0);\n                    var y = y0 + progress * (y1 - y0);\n                    this.targetCenter_ = [x, y];\n                }\n                if (animation.sourceResolution && animation.targetResolution) {\n                    var resolution = progress === 1\n                        ? animation.targetResolution\n                        : animation.sourceResolution +\n                            progress *\n                                (animation.targetResolution - animation.sourceResolution);\n                    if (animation.anchor) {\n                        var size = this.getViewportSize_(this.getRotation());\n                        var constrainedResolution = this.constraints_.resolution(resolution, 0, size, true);\n                        this.targetCenter_ = this.calculateCenterZoom(constrainedResolution, animation.anchor);\n                    }\n                    this.targetResolution_ = resolution;\n                    this.applyTargetState_(true);\n                }\n                if (animation.sourceRotation !== undefined &&\n                    animation.targetRotation !== undefined) {\n                    var rotation = progress === 1\n                        ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                            Math.PI\n                        : animation.sourceRotation +\n                            progress *\n                                (animation.targetRotation - animation.sourceRotation);\n                    if (animation.anchor) {\n                        var constrainedRotation = this.constraints_.rotation(rotation, true);\n                        this.targetCenter_ = this.calculateCenterRotate(constrainedRotation, animation.anchor);\n                    }\n                    this.targetRotation_ = rotation;\n                }\n                this.applyTargetState_(true);\n                more = true;\n                if (!animation.complete) {\n                    break;\n                }\n            }\n            if (seriesComplete) {\n                this.animations_[i] = null;\n                this.setHint(ViewHint.ANIMATING, -1);\n                var callback = series[0].callback;\n                if (callback) {\n                    animationCallback(callback, true);\n                }\n            }\n        }\n        // prune completed series\n        this.animations_ = this.animations_.filter(Boolean);\n        if (more && this.updateAnimationKey_ === undefined) {\n            this.updateAnimationKey_ = requestAnimationFrame(this.updateAnimations_.bind(this));\n        }\n    };\n    /**\n     * @param {number} rotation Target rotation.\n     * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n     */\n    View.prototype.calculateCenterRotate = function (rotation, anchor) {\n        var center;\n        var currentCenter = this.getCenterInternal();\n        if (currentCenter !== undefined) {\n            center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n            rotateCoordinate(center, rotation - this.getRotation());\n            addCoordinate(center, anchor);\n        }\n        return center;\n    };\n    /**\n     * @param {number} resolution Target resolution.\n     * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n     */\n    View.prototype.calculateCenterZoom = function (resolution, anchor) {\n        var center;\n        var currentCenter = this.getCenterInternal();\n        var currentResolution = this.getResolution();\n        if (currentCenter !== undefined && currentResolution !== undefined) {\n            var x = anchor[0] -\n                (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n            var y = anchor[1] -\n                (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n            center = [x, y];\n        }\n        return center;\n    };\n    /**\n     * Returns the current viewport size.\n     * @private\n     * @param {number=} opt_rotation Take into account the rotation of the viewport when giving the size\n     * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n     */\n    View.prototype.getViewportSize_ = function (opt_rotation) {\n        var size = this.viewportSize_;\n        if (opt_rotation) {\n            var w = size[0];\n            var h = size[1];\n            return [\n                Math.abs(w * Math.cos(opt_rotation)) +\n                    Math.abs(h * Math.sin(opt_rotation)),\n                Math.abs(w * Math.sin(opt_rotation)) +\n                    Math.abs(h * Math.cos(opt_rotation)),\n            ];\n        }\n        else {\n            return size;\n        }\n    };\n    /**\n     * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n     * to avoid performance hit and layout reflow.\n     * This should be done on map size change.\n     * Note: the constraints are not resolved during an animation to avoid stopping it\n     * @param {import(\"./size.js\").Size=} opt_size Viewport size; if undefined, [100, 100] is assumed\n     */\n    View.prototype.setViewportSize = function (opt_size) {\n        this.viewportSize_ = Array.isArray(opt_size)\n            ? opt_size.slice()\n            : [100, 100];\n        if (!this.getAnimating()) {\n            this.resolveConstraints(0);\n        }\n    };\n    /**\n     * Get the view center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.getCenter = function () {\n        var center = this.getCenterInternal();\n        if (!center) {\n            return center;\n        }\n        return toUserCoordinate(center, this.getProjection());\n    };\n    /**\n     * Get the view center without transforming to user projection.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n     */\n    View.prototype.getCenterInternal = function () {\n        return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (this.get(ViewProperty.CENTER));\n    };\n    /**\n     * @return {Constraints} Constraints.\n     */\n    View.prototype.getConstraints = function () {\n        return this.constraints_;\n    };\n    /**\n     * @return {boolean} Resolution constraint is set\n     */\n    View.prototype.getConstrainResolution = function () {\n        return this.options_.constrainResolution;\n    };\n    /**\n     * @param {Array<number>=} opt_hints Destination array.\n     * @return {Array<number>} Hint.\n     */\n    View.prototype.getHints = function (opt_hints) {\n        if (opt_hints !== undefined) {\n            opt_hints[0] = this.hints_[0];\n            opt_hints[1] = this.hints_[1];\n            return opt_hints;\n        }\n        else {\n            return this.hints_.slice();\n        }\n    };\n    /**\n     * Calculate the extent for the current view state and the passed size.\n     * The size is the pixel dimensions of the box into which the calculated extent\n     * should fit. In most cases you want to get the extent of the entire map,\n     * that is `map.getSize()`.\n     * @param {import(\"./size.js\").Size=} opt_size Box pixel size. If not provided, the size\n     * of the map that uses this view will be used.\n     * @return {import(\"./extent.js\").Extent} Extent.\n     * @api\n     */\n    View.prototype.calculateExtent = function (opt_size) {\n        var extent = this.calculateExtentInternal(opt_size);\n        return toUserExtent(extent, this.getProjection());\n    };\n    /**\n     * @param {import(\"./size.js\").Size=} opt_size Box pixel size. If not provided,\n     * the map's last known viewport size will be used.\n     * @return {import(\"./extent.js\").Extent} Extent.\n     */\n    View.prototype.calculateExtentInternal = function (opt_size) {\n        var size = opt_size || this.getViewportSize_();\n        var center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (this.getCenterInternal());\n        assert(center, 1); // The view center is not defined\n        var resolution = /** @type {!number} */ (this.getResolution());\n        assert(resolution !== undefined, 2); // The view resolution is not defined\n        var rotation = /** @type {!number} */ (this.getRotation());\n        assert(rotation !== undefined, 3); // The view rotation is not defined\n        return getForViewAndSize(center, resolution, rotation, size);\n    };\n    /**\n     * Get the maximum resolution of the view.\n     * @return {number} The maximum resolution of the view.\n     * @api\n     */\n    View.prototype.getMaxResolution = function () {\n        return this.maxResolution_;\n    };\n    /**\n     * Get the minimum resolution of the view.\n     * @return {number} The minimum resolution of the view.\n     * @api\n     */\n    View.prototype.getMinResolution = function () {\n        return this.minResolution_;\n    };\n    /**\n     * Get the maximum zoom level for the view.\n     * @return {number} The maximum zoom level.\n     * @api\n     */\n    View.prototype.getMaxZoom = function () {\n        return /** @type {number} */ (this.getZoomForResolution(this.minResolution_));\n    };\n    /**\n     * Set a new maximum zoom level for the view.\n     * @param {number} zoom The maximum zoom level.\n     * @api\n     */\n    View.prototype.setMaxZoom = function (zoom) {\n        this.applyOptions_(this.getUpdatedOptions_({ maxZoom: zoom }));\n    };\n    /**\n     * Get the minimum zoom level for the view.\n     * @return {number} The minimum zoom level.\n     * @api\n     */\n    View.prototype.getMinZoom = function () {\n        return /** @type {number} */ (this.getZoomForResolution(this.maxResolution_));\n    };\n    /**\n     * Set a new minimum zoom level for the view.\n     * @param {number} zoom The minimum zoom level.\n     * @api\n     */\n    View.prototype.setMinZoom = function (zoom) {\n        this.applyOptions_(this.getUpdatedOptions_({ minZoom: zoom }));\n    };\n    /**\n     * Set whether the view shoud allow intermediary zoom levels.\n     * @param {boolean} enabled Whether the resolution is constrained.\n     * @api\n     */\n    View.prototype.setConstrainResolution = function (enabled) {\n        this.applyOptions_(this.getUpdatedOptions_({ constrainResolution: enabled }));\n    };\n    /**\n     * Get the view projection.\n     * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n     * @api\n     */\n    View.prototype.getProjection = function () {\n        return this.projection_;\n    };\n    /**\n     * Get the view resolution.\n     * @return {number|undefined} The resolution of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.getResolution = function () {\n        return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n    };\n    /**\n     * Get the resolutions for the view. This returns the array of resolutions\n     * passed to the constructor of the View, or undefined if none were given.\n     * @return {Array<number>|undefined} The resolutions of the view.\n     * @api\n     */\n    View.prototype.getResolutions = function () {\n        return this.resolutions_;\n    };\n    /**\n     * Get the resolution for a provided extent (in map units) and size (in pixels).\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {import(\"./size.js\").Size=} opt_size Box pixel size.\n     * @return {number} The resolution at which the provided extent will render at\n     *     the given size.\n     * @api\n     */\n    View.prototype.getResolutionForExtent = function (extent, opt_size) {\n        return this.getResolutionForExtentInternal(fromUserExtent(extent, this.getProjection()), opt_size);\n    };\n    /**\n     * Get the resolution for a provided extent (in map units) and size (in pixels).\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {import(\"./size.js\").Size=} opt_size Box pixel size.\n     * @return {number} The resolution at which the provided extent will render at\n     *     the given size.\n     */\n    View.prototype.getResolutionForExtentInternal = function (extent, opt_size) {\n        var size = opt_size || this.getViewportSize_();\n        var xResolution = getWidth(extent) / size[0];\n        var yResolution = getHeight(extent) / size[1];\n        return Math.max(xResolution, yResolution);\n    };\n    /**\n     * Return a function that returns a value between 0 and 1 for a\n     * resolution. Exponential scaling is assumed.\n     * @param {number=} opt_power Power.\n     * @return {function(number): number} Resolution for value function.\n     */\n    View.prototype.getResolutionForValueFunction = function (opt_power) {\n        var power = opt_power || 2;\n        var maxResolution = this.getConstrainedResolution(this.maxResolution_);\n        var minResolution = this.minResolution_;\n        var max = Math.log(maxResolution / minResolution) / Math.log(power);\n        return (\n        /**\n         * @param {number} value Value.\n         * @return {number} Resolution.\n         */\n        function (value) {\n            var resolution = maxResolution / Math.pow(power, value * max);\n            return resolution;\n        });\n    };\n    /**\n     * Get the view rotation.\n     * @return {number} The rotation of the view in radians.\n     * @observable\n     * @api\n     */\n    View.prototype.getRotation = function () {\n        return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n    };\n    /**\n     * Return a function that returns a resolution for a value between\n     * 0 and 1. Exponential scaling is assumed.\n     * @param {number=} opt_power Power.\n     * @return {function(number): number} Value for resolution function.\n     */\n    View.prototype.getValueForResolutionFunction = function (opt_power) {\n        var logPower = Math.log(opt_power || 2);\n        var maxResolution = this.getConstrainedResolution(this.maxResolution_);\n        var minResolution = this.minResolution_;\n        var max = Math.log(maxResolution / minResolution) / logPower;\n        return (\n        /**\n         * @param {number} resolution Resolution.\n         * @return {number} Value.\n         */\n        function (resolution) {\n            var value = Math.log(maxResolution / resolution) / logPower / max;\n            return value;\n        });\n    };\n    /**\n     * Returns the size of the viewport minus padding.\n     * @private\n     * @param {number=} opt_rotation Take into account the rotation of the viewport when giving the size\n     * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n     */\n    View.prototype.getViewportSizeMinusPadding_ = function (opt_rotation) {\n        var size = this.getViewportSize_(opt_rotation);\n        var padding = this.padding;\n        if (padding) {\n            size = [\n                size[0] - padding[1] - padding[3],\n                size[1] - padding[0] - padding[2],\n            ];\n        }\n        return size;\n    };\n    /**\n     * @return {State} View state.\n     */\n    View.prototype.getState = function () {\n        var projection = this.getProjection();\n        var resolution = /** @type {number} */ (this.getResolution());\n        var rotation = this.getRotation();\n        var center = /** @type {import(\"./coordinate.js\").Coordinate} */ (this.getCenterInternal());\n        var padding = this.padding;\n        if (padding) {\n            var reducedSize = this.getViewportSizeMinusPadding_();\n            center = calculateCenterOn(center, this.getViewportSize_(), [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]], resolution, rotation);\n        }\n        return {\n            center: center.slice(0),\n            projection: projection !== undefined ? projection : null,\n            resolution: resolution,\n            rotation: rotation,\n            zoom: this.getZoom(),\n        };\n    };\n    /**\n     * Get the current zoom level. This method may return non-integer zoom levels\n     * if the view does not constrain the resolution, or if an interaction or\n     * animation is underway.\n     * @return {number|undefined} Zoom.\n     * @api\n     */\n    View.prototype.getZoom = function () {\n        var zoom;\n        var resolution = this.getResolution();\n        if (resolution !== undefined) {\n            zoom = this.getZoomForResolution(resolution);\n        }\n        return zoom;\n    };\n    /**\n     * Get the zoom level for a resolution.\n     * @param {number} resolution The resolution.\n     * @return {number|undefined} The zoom level for the provided resolution.\n     * @api\n     */\n    View.prototype.getZoomForResolution = function (resolution) {\n        var offset = this.minZoom_ || 0;\n        var max, zoomFactor;\n        if (this.resolutions_) {\n            var nearest = linearFindNearest(this.resolutions_, resolution, 1);\n            offset = nearest;\n            max = this.resolutions_[nearest];\n            if (nearest == this.resolutions_.length - 1) {\n                zoomFactor = 2;\n            }\n            else {\n                zoomFactor = max / this.resolutions_[nearest + 1];\n            }\n        }\n        else {\n            max = this.maxResolution_;\n            zoomFactor = this.zoomFactor_;\n        }\n        return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n    };\n    /**\n     * Get the resolution for a zoom level.\n     * @param {number} zoom Zoom level.\n     * @return {number} The view resolution for the provided zoom level.\n     * @api\n     */\n    View.prototype.getResolutionForZoom = function (zoom) {\n        if (this.resolutions_) {\n            if (this.resolutions_.length <= 1) {\n                return 0;\n            }\n            var baseLevel = clamp(Math.floor(zoom), 0, this.resolutions_.length - 2);\n            var zoomFactor = this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n            return (this.resolutions_[baseLevel] /\n                Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1)));\n        }\n        else {\n            return (this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_));\n        }\n    };\n    /**\n     * Fit the given geometry or extent based on the given map size and border.\n     * The size is pixel dimensions of the box to fit the extent into.\n     * In most cases you will want to use the map size, that is `map.getSize()`.\n     * Takes care of the map angle.\n     * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n     *     extent to fit the view to.\n     * @param {FitOptions=} opt_options Options.\n     * @api\n     */\n    View.prototype.fit = function (geometryOrExtent, opt_options) {\n        /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n        var geometry;\n        assert(Array.isArray(geometryOrExtent) ||\n            typeof ( /** @type {?} */(geometryOrExtent).getSimplifiedGeometry) ===\n                'function', 24); // Invalid extent or geometry provided as `geometry`\n        if (Array.isArray(geometryOrExtent)) {\n            assert(!isEmpty(geometryOrExtent), 25); // Cannot fit empty extent provided as `geometry`\n            var extent = fromUserExtent(geometryOrExtent, this.getProjection());\n            geometry = polygonFromExtent(extent);\n        }\n        else if (geometryOrExtent.getType() === GeometryType.CIRCLE) {\n            var extent = fromUserExtent(geometryOrExtent.getExtent(), this.getProjection());\n            geometry = polygonFromExtent(extent);\n            geometry.rotate(this.getRotation(), getCenter(extent));\n        }\n        else {\n            var userProjection = getUserProjection();\n            if (userProjection) {\n                geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometryOrExtent\n                    .clone()\n                    .transform(userProjection, this.getProjection()));\n            }\n            else {\n                geometry = geometryOrExtent;\n            }\n        }\n        this.fitInternal(geometry, opt_options);\n    };\n    /**\n     * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n     * @param {FitOptions=} opt_options Options.\n     */\n    View.prototype.fitInternal = function (geometry, opt_options) {\n        var options = opt_options || {};\n        var size = options.size;\n        if (!size) {\n            size = this.getViewportSizeMinusPadding_();\n        }\n        var padding = options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n        var nearest = options.nearest !== undefined ? options.nearest : false;\n        var minResolution;\n        if (options.minResolution !== undefined) {\n            minResolution = options.minResolution;\n        }\n        else if (options.maxZoom !== undefined) {\n            minResolution = this.getResolutionForZoom(options.maxZoom);\n        }\n        else {\n            minResolution = 0;\n        }\n        var coords = geometry.getFlatCoordinates();\n        // calculate rotated extent\n        var rotation = this.getRotation();\n        var cosAngle = Math.cos(-rotation);\n        var sinAngle = Math.sin(-rotation);\n        var minRotX = +Infinity;\n        var minRotY = +Infinity;\n        var maxRotX = -Infinity;\n        var maxRotY = -Infinity;\n        var stride = geometry.getStride();\n        for (var i = 0, ii = coords.length; i < ii; i += stride) {\n            var rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n            var rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n            minRotX = Math.min(minRotX, rotX);\n            minRotY = Math.min(minRotY, rotY);\n            maxRotX = Math.max(maxRotX, rotX);\n            maxRotY = Math.max(maxRotY, rotY);\n        }\n        // calculate resolution\n        var resolution = this.getResolutionForExtentInternal([minRotX, minRotY, maxRotX, maxRotY], [size[0] - padding[1] - padding[3], size[1] - padding[0] - padding[2]]);\n        resolution = isNaN(resolution)\n            ? minResolution\n            : Math.max(resolution, minResolution);\n        resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n        // calculate center\n        sinAngle = -sinAngle; // go back to original rotation\n        var centerRotX = (minRotX + maxRotX) / 2;\n        var centerRotY = (minRotY + maxRotY) / 2;\n        centerRotX += ((padding[1] - padding[3]) / 2) * resolution;\n        centerRotY += ((padding[0] - padding[2]) / 2) * resolution;\n        var centerX = centerRotX * cosAngle - centerRotY * sinAngle;\n        var centerY = centerRotY * cosAngle + centerRotX * sinAngle;\n        var center = this.getConstrainedCenter([centerX, centerY], resolution);\n        var callback = options.callback ? options.callback : VOID;\n        if (options.duration !== undefined) {\n            this.animateInternal({\n                resolution: resolution,\n                center: center,\n                duration: options.duration,\n                easing: options.easing,\n            }, callback);\n        }\n        else {\n            this.targetResolution_ = resolution;\n            this.targetCenter_ = center;\n            this.applyTargetState_(false, true);\n            animationCallback(callback, true);\n        }\n    };\n    /**\n     * Center on coordinate and view position.\n     * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"./size.js\").Size} size Box pixel size.\n     * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n     * @api\n     */\n    View.prototype.centerOn = function (coordinate, size, position) {\n        this.centerOnInternal(fromUserCoordinate(coordinate, this.getProjection()), size, position);\n    };\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"./size.js\").Size} size Box pixel size.\n     * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n     */\n    View.prototype.centerOnInternal = function (coordinate, size, position) {\n        this.setCenterInternal(calculateCenterOn(coordinate, size, position, this.getResolution(), this.getRotation()));\n    };\n    /**\n     * Calculates the shift between map and viewport center.\n     * @param {import(\"./coordinate.js\").Coordinate} center Center.\n     * @param {number} resolution Resolution.\n     * @param {number} rotation Rotation.\n     * @param {import(\"./size.js\").Size} size Size.\n     * @return {Array<number>|undefined} Center shift.\n     */\n    View.prototype.calculateCenterShift = function (center, resolution, rotation, size) {\n        var centerShift;\n        var padding = this.padding;\n        if (padding && center) {\n            var reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n            var shiftedCenter = calculateCenterOn(center, size, [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]], resolution, rotation);\n            centerShift = [\n                center[0] - shiftedCenter[0],\n                center[1] - shiftedCenter[1],\n            ];\n        }\n        return centerShift;\n    };\n    /**\n     * @return {boolean} Is defined.\n     */\n    View.prototype.isDef = function () {\n        return !!this.getCenterInternal() && this.getResolution() !== undefined;\n    };\n    /**\n     * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n     * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n     * @api\n     */\n    View.prototype.adjustCenter = function (deltaCoordinates) {\n        var center = toUserCoordinate(this.targetCenter_, this.getProjection());\n        this.setCenter([\n            center[0] + deltaCoordinates[0],\n            center[1] + deltaCoordinates[1],\n        ]);\n    };\n    /**\n     * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n     * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n     */\n    View.prototype.adjustCenterInternal = function (deltaCoordinates) {\n        var center = this.targetCenter_;\n        this.setCenterInternal([\n            center[0] + deltaCoordinates[0],\n            center[1] + deltaCoordinates[1],\n        ]);\n    };\n    /**\n     * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n     * constraint will apply.\n     * @param {number} ratio The ratio to apply on the view resolution.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     * @api\n     */\n    View.prototype.adjustResolution = function (ratio, opt_anchor) {\n        var anchor = opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n        this.adjustResolutionInternal(ratio, anchor);\n    };\n    /**\n     * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n     * constraint will apply.\n     * @param {number} ratio The ratio to apply on the view resolution.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     */\n    View.prototype.adjustResolutionInternal = function (ratio, opt_anchor) {\n        var isMoving = this.getAnimating() || this.getInteracting();\n        var size = this.getViewportSize_(this.getRotation());\n        var newResolution = this.constraints_.resolution(this.targetResolution_ * ratio, 0, size, isMoving);\n        if (opt_anchor) {\n            this.targetCenter_ = this.calculateCenterZoom(newResolution, opt_anchor);\n        }\n        this.targetResolution_ *= ratio;\n        this.applyTargetState_();\n    };\n    /**\n     * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n     * constraint will apply.\n     * @param {number} delta Relative value to add to the zoom level.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     * @api\n     */\n    View.prototype.adjustZoom = function (delta, opt_anchor) {\n        this.adjustResolution(Math.pow(this.zoomFactor_, -delta), opt_anchor);\n    };\n    /**\n     * Adds a value to the view rotation, optionally using an anchor. Any rotation\n     * constraint will apply.\n     * @param {number} delta Relative value to add to the zoom rotation, in radians.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The rotation center.\n     * @api\n     */\n    View.prototype.adjustRotation = function (delta, opt_anchor) {\n        if (opt_anchor) {\n            opt_anchor = fromUserCoordinate(opt_anchor, this.getProjection());\n        }\n        this.adjustRotationInternal(delta, opt_anchor);\n    };\n    /**\n     * @param {number} delta Relative value to add to the zoom rotation, in radians.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The rotation center.\n     */\n    View.prototype.adjustRotationInternal = function (delta, opt_anchor) {\n        var isMoving = this.getAnimating() || this.getInteracting();\n        var newRotation = this.constraints_.rotation(this.targetRotation_ + delta, isMoving);\n        if (opt_anchor) {\n            this.targetCenter_ = this.calculateCenterRotate(newRotation, opt_anchor);\n        }\n        this.targetRotation_ += delta;\n        this.applyTargetState_();\n    };\n    /**\n     * Set the center of the current view. Any extent constraint will apply.\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.setCenter = function (center) {\n        this.setCenterInternal(fromUserCoordinate(center, this.getProjection()));\n    };\n    /**\n     * Set the center using the view projection (not the user projection).\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n     */\n    View.prototype.setCenterInternal = function (center) {\n        this.targetCenter_ = center;\n        this.applyTargetState_();\n    };\n    /**\n     * @param {import(\"./ViewHint.js\").default} hint Hint.\n     * @param {number} delta Delta.\n     * @return {number} New value.\n     */\n    View.prototype.setHint = function (hint, delta) {\n        this.hints_[hint] += delta;\n        this.changed();\n        return this.hints_[hint];\n    };\n    /**\n     * Set the resolution for this view. Any resolution constraint will apply.\n     * @param {number|undefined} resolution The resolution of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.setResolution = function (resolution) {\n        this.targetResolution_ = resolution;\n        this.applyTargetState_();\n    };\n    /**\n     * Set the rotation for this view. Any rotation constraint will apply.\n     * @param {number} rotation The rotation of the view in radians.\n     * @observable\n     * @api\n     */\n    View.prototype.setRotation = function (rotation) {\n        this.targetRotation_ = rotation;\n        this.applyTargetState_();\n    };\n    /**\n     * Zoom to a specific zoom level. Any resolution constrain will apply.\n     * @param {number} zoom Zoom level.\n     * @api\n     */\n    View.prototype.setZoom = function (zoom) {\n        this.setResolution(this.getResolutionForZoom(zoom));\n    };\n    /**\n     * Recompute rotation/resolution/center based on target values.\n     * Note: we have to compute rotation first, then resolution and center considering that\n     * parameters can influence one another in case a view extent constraint is present.\n     * @param {boolean=} opt_doNotCancelAnims Do not cancel animations.\n     * @param {boolean=} opt_forceMoving Apply constraints as if the view is moving.\n     * @private\n     */\n    View.prototype.applyTargetState_ = function (opt_doNotCancelAnims, opt_forceMoving) {\n        var isMoving = this.getAnimating() || this.getInteracting() || opt_forceMoving;\n        // compute rotation\n        var newRotation = this.constraints_.rotation(this.targetRotation_, isMoving);\n        var size = this.getViewportSize_(newRotation);\n        var newResolution = this.constraints_.resolution(this.targetResolution_, 0, size, isMoving);\n        var newCenter = this.constraints_.center(this.targetCenter_, newResolution, size, isMoving, this.calculateCenterShift(this.targetCenter_, newResolution, newRotation, size));\n        if (this.get(ViewProperty.ROTATION) !== newRotation) {\n            this.set(ViewProperty.ROTATION, newRotation);\n        }\n        if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n            this.set(ViewProperty.RESOLUTION, newResolution);\n        }\n        if (!this.get(ViewProperty.CENTER) ||\n            !equals(this.get(ViewProperty.CENTER), newCenter)) {\n            this.set(ViewProperty.CENTER, newCenter);\n        }\n        if (this.getAnimating() && !opt_doNotCancelAnims) {\n            this.cancelAnimations();\n        }\n        this.cancelAnchor_ = undefined;\n    };\n    /**\n     * If any constraints need to be applied, an animation will be triggered.\n     * This is typically done on interaction end.\n     * Note: calling this with a duration of 0 will apply the constrained values straight away,\n     * without animation.\n     * @param {number=} opt_duration The animation duration in ms.\n     * @param {number=} opt_resolutionDirection Which direction to zoom.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     */\n    View.prototype.resolveConstraints = function (opt_duration, opt_resolutionDirection, opt_anchor) {\n        var duration = opt_duration !== undefined ? opt_duration : 200;\n        var direction = opt_resolutionDirection || 0;\n        var newRotation = this.constraints_.rotation(this.targetRotation_);\n        var size = this.getViewportSize_(newRotation);\n        var newResolution = this.constraints_.resolution(this.targetResolution_, direction, size);\n        var newCenter = this.constraints_.center(this.targetCenter_, newResolution, size, false, this.calculateCenterShift(this.targetCenter_, newResolution, newRotation, size));\n        if (duration === 0 && !this.cancelAnchor_) {\n            this.targetResolution_ = newResolution;\n            this.targetRotation_ = newRotation;\n            this.targetCenter_ = newCenter;\n            this.applyTargetState_();\n            return;\n        }\n        var anchor = opt_anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n        this.cancelAnchor_ = undefined;\n        if (this.getResolution() !== newResolution ||\n            this.getRotation() !== newRotation ||\n            !this.getCenterInternal() ||\n            !equals(this.getCenterInternal(), newCenter)) {\n            if (this.getAnimating()) {\n                this.cancelAnimations();\n            }\n            this.animateInternal({\n                rotation: newRotation,\n                center: newCenter,\n                resolution: newResolution,\n                duration: duration,\n                easing: easeOut,\n                anchor: anchor,\n            });\n        }\n    };\n    /**\n     * Notify the View that an interaction has started.\n     * The view state will be resolved to a stable one if needed\n     * (depending on its constraints).\n     * @api\n     */\n    View.prototype.beginInteraction = function () {\n        this.resolveConstraints(0);\n        this.setHint(ViewHint.INTERACTING, 1);\n    };\n    /**\n     * Notify the View that an interaction has ended. The view state will be resolved\n     * to a stable one if needed (depending on its constraints).\n     * @param {number=} opt_duration Animation duration in ms.\n     * @param {number=} opt_resolutionDirection Which direction to zoom.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     * @api\n     */\n    View.prototype.endInteraction = function (opt_duration, opt_resolutionDirection, opt_anchor) {\n        var anchor = opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n        this.endInteractionInternal(opt_duration, opt_resolutionDirection, anchor);\n    };\n    /**\n     * Notify the View that an interaction has ended. The view state will be resolved\n     * to a stable one if needed (depending on its constraints).\n     * @param {number=} opt_duration Animation duration in ms.\n     * @param {number=} opt_resolutionDirection Which direction to zoom.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     */\n    View.prototype.endInteractionInternal = function (opt_duration, opt_resolutionDirection, opt_anchor) {\n        this.setHint(ViewHint.INTERACTING, -1);\n        this.resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor);\n    };\n    /**\n     * Get a valid position for the view center according to the current constraints.\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n     * @param {number=} opt_targetResolution Target resolution. If not supplied, the current one will be used.\n     * This is useful to guess a valid center position at a different zoom level.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n     */\n    View.prototype.getConstrainedCenter = function (targetCenter, opt_targetResolution) {\n        var size = this.getViewportSize_(this.getRotation());\n        return this.constraints_.center(targetCenter, opt_targetResolution || this.getResolution(), size);\n    };\n    /**\n     * Get a valid zoom level according to the current view constraints.\n     * @param {number|undefined} targetZoom Target zoom.\n     * @param {number=} [opt_direction=0] Indicate which resolution should be used\n     * by a renderer if the view resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @return {number|undefined} Valid zoom level.\n     */\n    View.prototype.getConstrainedZoom = function (targetZoom, opt_direction) {\n        var targetRes = this.getResolutionForZoom(targetZoom);\n        return this.getZoomForResolution(this.getConstrainedResolution(targetRes, opt_direction));\n    };\n    /**\n     * Get a valid resolution according to the current view constraints.\n     * @param {number|undefined} targetResolution Target resolution.\n     * @param {number=} [opt_direction=0] Indicate which resolution should be used\n     * by a renderer if the view resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @return {number|undefined} Valid resolution.\n     */\n    View.prototype.getConstrainedResolution = function (targetResolution, opt_direction) {\n        var direction = opt_direction || 0;\n        var size = this.getViewportSize_(this.getRotation());\n        return this.constraints_.resolution(targetResolution, direction, size);\n    };\n    return View;\n}(BaseObject));\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n    setTimeout(function () {\n        callback(returnValue);\n    }, 0);\n}\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n    if (options.extent !== undefined) {\n        var smooth = options.smoothExtentConstraint !== undefined\n            ? options.smoothExtentConstraint\n            : true;\n        return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n    }\n    var projection = createProjection(options.projection, 'EPSG:3857');\n    if (options.multiWorld !== true && projection.isGlobal()) {\n        var extent = projection.getExtent().slice();\n        extent[0] = -Infinity;\n        extent[2] = Infinity;\n        return createExtent(extent, false, false);\n    }\n    return centerNone;\n}\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n    var resolutionConstraint;\n    var maxResolution;\n    var minResolution;\n    // TODO: move these to be ol constants\n    // see https://github.com/openlayers/openlayers/issues/2076\n    var defaultMaxZoom = 28;\n    var defaultZoomFactor = 2;\n    var minZoom = options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n    var maxZoom = options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n    var zoomFactor = options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n    var multiWorld = options.multiWorld !== undefined ? options.multiWorld : false;\n    var smooth = options.smoothResolutionConstraint !== undefined\n        ? options.smoothResolutionConstraint\n        : true;\n    var showFullExtent = options.showFullExtent !== undefined ? options.showFullExtent : false;\n    var projection = createProjection(options.projection, 'EPSG:3857');\n    var projExtent = projection.getExtent();\n    var constrainOnlyCenter = options.constrainOnlyCenter;\n    var extent = options.extent;\n    if (!multiWorld && !extent && projection.isGlobal()) {\n        constrainOnlyCenter = false;\n        extent = projExtent;\n    }\n    if (options.resolutions !== undefined) {\n        var resolutions = options.resolutions;\n        maxResolution = resolutions[minZoom];\n        minResolution =\n            resolutions[maxZoom] !== undefined\n                ? resolutions[maxZoom]\n                : resolutions[resolutions.length - 1];\n        if (options.constrainResolution) {\n            resolutionConstraint = createSnapToResolutions(resolutions, smooth, !constrainOnlyCenter && extent, showFullExtent);\n        }\n        else {\n            resolutionConstraint = createMinMaxResolution(maxResolution, minResolution, smooth, !constrainOnlyCenter && extent, showFullExtent);\n        }\n    }\n    else {\n        // calculate the default min and max resolution\n        var size = !projExtent\n            ? // use an extent that can fit the whole world if need be\n                (360 * METERS_PER_UNIT[Units.DEGREES]) / projection.getMetersPerUnit()\n            : Math.max(getWidth(projExtent), getHeight(projExtent));\n        var defaultMaxResolution = size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n        var defaultMinResolution = defaultMaxResolution /\n            Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n        // user provided maxResolution takes precedence\n        maxResolution = options.maxResolution;\n        if (maxResolution !== undefined) {\n            minZoom = 0;\n        }\n        else {\n            maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n        }\n        // user provided minResolution takes precedence\n        minResolution = options.minResolution;\n        if (minResolution === undefined) {\n            if (options.maxZoom !== undefined) {\n                if (options.maxResolution !== undefined) {\n                    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n                }\n                else {\n                    minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n                }\n            }\n            else {\n                minResolution = defaultMinResolution;\n            }\n        }\n        // given discrete zoom levels, minResolution may be different than provided\n        maxZoom =\n            minZoom +\n                Math.floor(Math.log(maxResolution / minResolution) / Math.log(zoomFactor));\n        minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n        if (options.constrainResolution) {\n            resolutionConstraint = createSnapToPower(zoomFactor, maxResolution, minResolution, smooth, !constrainOnlyCenter && extent, showFullExtent);\n        }\n        else {\n            resolutionConstraint = createMinMaxResolution(maxResolution, minResolution, smooth, !constrainOnlyCenter && extent, showFullExtent);\n        }\n    }\n    return {\n        constraint: resolutionConstraint,\n        maxResolution: maxResolution,\n        minResolution: minResolution,\n        minZoom: minZoom,\n        zoomFactor: zoomFactor,\n    };\n}\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n    var enableRotation = options.enableRotation !== undefined ? options.enableRotation : true;\n    if (enableRotation) {\n        var constrainRotation = options.constrainRotation;\n        if (constrainRotation === undefined || constrainRotation === true) {\n            return createSnapToZero();\n        }\n        else if (constrainRotation === false) {\n            return rotationNone;\n        }\n        else if (typeof constrainRotation === 'number') {\n            return createSnapToN(constrainRotation);\n        }\n        else {\n            return rotationNone;\n        }\n    }\n    else {\n        return disable;\n    }\n}\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n    if (animation.sourceCenter && animation.targetCenter) {\n        if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n            return false;\n        }\n    }\n    if (animation.sourceResolution !== animation.targetResolution) {\n        return false;\n    }\n    if (animation.sourceRotation !== animation.targetRotation) {\n        return false;\n    }\n    return true;\n}\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n    // calculate rotated position\n    var cosAngle = Math.cos(-rotation);\n    var sinAngle = Math.sin(-rotation);\n    var rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n    var rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n    rotX += (size[0] / 2 - position[0]) * resolution;\n    rotY += (position[1] - size[1] / 2) * resolution;\n    // go back to original angle\n    sinAngle = -sinAngle; // go back to original rotation\n    var centerX = rotX * cosAngle - rotY * sinAngle;\n    var centerY = rotY * cosAngle + rotX * sinAngle;\n    return [centerX, centerY];\n}\nexport default View;\n//# sourceMappingURL=View.js.map","/**\n * @module ol/size\n */\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, opt_size) {\n    if (opt_size === undefined) {\n        opt_size = [0, 0];\n    }\n    opt_size[0] = size[0] + 2 * num;\n    opt_size[1] = size[1] + 2 * num;\n    return opt_size;\n}\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n    return size[0] > 0 && size[1] > 0;\n}\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, opt_size) {\n    if (opt_size === undefined) {\n        opt_size = [0, 0];\n    }\n    opt_size[0] = (size[0] * ratio + 0.5) | 0;\n    opt_size[1] = (size[1] * ratio + 0.5) | 0;\n    return opt_size;\n}\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, opt_size) {\n    if (Array.isArray(size)) {\n        return size;\n    }\n    else {\n        if (opt_size === undefined) {\n            opt_size = [size, size];\n        }\n        else {\n            opt_size[0] = size;\n            opt_size[1] = size;\n        }\n        return opt_size;\n    }\n}\n//# sourceMappingURL=size.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/PluggableMap\n */\nimport BaseObject, { getChangeEventType } from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport EventType from './events/EventType.js';\nimport LayerGroup from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, { getTilePriority } from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport { DEVICE_PIXEL_RATIO, IMAGE_DECODE, PASSIVE_EVENT_LISTENERS, } from './has.js';\nimport { TRUE } from './functions.js';\nimport { apply as applyTransform, create as createTransform, } from './transform.js';\nimport { assert } from './asserts.js';\nimport { clone, createOrUpdateEmpty, equals, getForViewAndSize, isEmpty, } from './extent.js';\nimport { fromUserCoordinate, toUserCoordinate } from './proj.js';\nimport { hasArea } from './size.js';\nimport { listen, unlistenByKey } from './events.js';\nimport { removeNode } from './dom.js';\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform\n * @property {import(\"rbush\").default} declutterTree\n * @property {null|import(\"./extent.js\").Extent} extent\n * @property {number} index\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray\n * @property {number} layerIndex\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform\n * @property {Array<PostRenderFunction>} postRenderFunctions\n * @property {import(\"./size.js\").Size} size\n * @property {TileQueue} tileQueue\n * @property {!Object<string, Object<string, boolean>>} usedTiles\n * @property {Array<number>} viewHints\n * @property {!Object<string, Object<string, boolean>>} wantedTiles\n */\n/**\n * @typedef {function(PluggableMap, ?FrameState): any} PostRenderFunction\n */\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls]\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions]\n * @property {HTMLElement|Document} keyboardEventTarget\n * @property {Collection<import(\"./Overlay.js\").default>} overlays\n * @property {Object<string, *>} values\n */\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control~defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction~defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * @property {View} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n/**\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nvar PluggableMap = /** @class */ (function (_super) {\n    __extends(PluggableMap, _super);\n    /**\n     * @param {MapOptions} options Map options.\n     */\n    function PluggableMap(options) {\n        var _this = _super.call(this) || this;\n        var optionsInternal = createOptionsInternal(options);\n        /** @private */\n        _this.boundHandleBrowserEvent_ = _this.handleBrowserEvent.bind(_this);\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.maxTilesLoading_ =\n            options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ =\n            options.pixelRatio !== undefined\n                ? options.pixelRatio\n                : DEVICE_PIXEL_RATIO;\n        /**\n         * @private\n         * @type {*}\n         */\n        _this.postRenderTimeoutHandle_;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.animationDelayKey_;\n        /**\n         * @private\n         */\n        _this.animationDelay_ = /** @this {PluggableMap} */ function () {\n            this.animationDelayKey_ = undefined;\n            this.renderFrame_(Date.now());\n        }.bind(_this);\n        /**\n         * @private\n         * @type {import(\"./transform.js\").Transform}\n         */\n        _this.coordinateToPixelTransform_ = createTransform();\n        /**\n         * @private\n         * @type {import(\"./transform.js\").Transform}\n         */\n        _this.pixelToCoordinateTransform_ = createTransform();\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.frameIndex_ = 0;\n        /**\n         * @private\n         * @type {?FrameState}\n         */\n        _this.frameState_ = null;\n        /**\n         * The extent at the previous 'moveend' event.\n         * @private\n         * @type {import(\"./extent.js\").Extent}\n         */\n        _this.previousExtent_ = null;\n        /**\n         * @private\n         * @type {?import(\"./events.js\").EventsKey}\n         */\n        _this.viewPropertyListenerKey_ = null;\n        /**\n         * @private\n         * @type {?import(\"./events.js\").EventsKey}\n         */\n        _this.viewChangeListenerKey_ = null;\n        /**\n         * @private\n         * @type {?Array<import(\"./events.js\").EventsKey>}\n         */\n        _this.layerGroupPropertyListenerKeys_ = null;\n        /**\n         * @private\n         * @type {!HTMLElement}\n         */\n        _this.viewport_ = document.createElement('div');\n        _this.viewport_.className =\n            'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n        _this.viewport_.style.position = 'relative';\n        _this.viewport_.style.overflow = 'hidden';\n        _this.viewport_.style.width = '100%';\n        _this.viewport_.style.height = '100%';\n        /**\n         * @private\n         * @type {!HTMLElement}\n         */\n        _this.overlayContainer_ = document.createElement('div');\n        _this.overlayContainer_.style.position = 'absolute';\n        _this.overlayContainer_.style.zIndex = '0';\n        _this.overlayContainer_.style.width = '100%';\n        _this.overlayContainer_.style.height = '100%';\n        _this.overlayContainer_.style.pointerEvents = 'none';\n        _this.overlayContainer_.className = 'ol-overlaycontainer';\n        _this.viewport_.appendChild(_this.overlayContainer_);\n        /**\n         * @private\n         * @type {!HTMLElement}\n         */\n        _this.overlayContainerStopEvent_ = document.createElement('div');\n        _this.overlayContainerStopEvent_.style.position = 'absolute';\n        _this.overlayContainerStopEvent_.style.zIndex = '0';\n        _this.overlayContainerStopEvent_.style.width = '100%';\n        _this.overlayContainerStopEvent_.style.height = '100%';\n        _this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n        _this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n        _this.viewport_.appendChild(_this.overlayContainerStopEvent_);\n        /**\n         * @private\n         * @type {MapBrowserEventHandler}\n         */\n        _this.mapBrowserEventHandler_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.moveTolerance_ = options.moveTolerance;\n        /**\n         * @private\n         * @type {HTMLElement|Document}\n         */\n        _this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n        /**\n         * @private\n         * @type {?Array<import(\"./events.js\").EventsKey>}\n         */\n        _this.keyHandlerKeys_ = null;\n        /**\n         * @type {Collection<import(\"./control/Control.js\").default>}\n         * @protected\n         */\n        _this.controls = optionsInternal.controls || new Collection();\n        /**\n         * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n         * @protected\n         */\n        _this.interactions = optionsInternal.interactions || new Collection();\n        /**\n         * @type {Collection<import(\"./Overlay.js\").default>}\n         * @private\n         */\n        _this.overlays_ = optionsInternal.overlays;\n        /**\n         * A lookup of overlays by id.\n         * @private\n         * @type {Object<string, import(\"./Overlay.js\").default>}\n         */\n        _this.overlayIdIndex_ = {};\n        /**\n         * @type {import(\"./renderer/Map.js\").default}\n         * @private\n         */\n        _this.renderer_ = null;\n        /**\n         * @type {undefined|function(Event): void}\n         * @private\n         */\n        _this.handleResize_;\n        /**\n         * @private\n         * @type {!Array<PostRenderFunction>}\n         */\n        _this.postRenderFunctions_ = [];\n        /**\n         * @private\n         * @type {TileQueue}\n         */\n        _this.tileQueue_ = new TileQueue(_this.getTilePriority.bind(_this), _this.handleTileChange_.bind(_this));\n        _this.addEventListener(getChangeEventType(MapProperty.LAYERGROUP), _this.handleLayerGroupChanged_);\n        _this.addEventListener(getChangeEventType(MapProperty.VIEW), _this.handleViewChanged_);\n        _this.addEventListener(getChangeEventType(MapProperty.SIZE), _this.handleSizeChanged_);\n        _this.addEventListener(getChangeEventType(MapProperty.TARGET), _this.handleTargetChanged_);\n        // setProperties will trigger the rendering of the map if the map\n        // is \"defined\" already.\n        _this.setProperties(optionsInternal.values);\n        _this.controls.forEach(\n        /**\n         * @param {import(\"./control/Control.js\").default} control Control.\n         * @this {PluggableMap}\n         */\n        function (control) {\n            control.setMap(this);\n        }.bind(_this));\n        _this.controls.addEventListener(CollectionEventType.ADD, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(this);\n        }.bind(_this));\n        _this.controls.addEventListener(CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(null);\n        }.bind(_this));\n        _this.interactions.forEach(\n        /**\n         * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n         * @this {PluggableMap}\n         */\n        function (interaction) {\n            interaction.setMap(this);\n        }.bind(_this));\n        _this.interactions.addEventListener(CollectionEventType.ADD, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(this);\n        }.bind(_this));\n        _this.interactions.addEventListener(CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(null);\n        }.bind(_this));\n        _this.overlays_.forEach(_this.addOverlayInternal_.bind(_this));\n        _this.overlays_.addEventListener(CollectionEventType.ADD, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            this.addOverlayInternal_(\n            /** @type {import(\"./Overlay.js\").default} */ (event.element));\n        }.bind(_this));\n        _this.overlays_.addEventListener(CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            var overlay = /** @type {import(\"./Overlay.js\").default} */ (event.element);\n            var id = overlay.getId();\n            if (id !== undefined) {\n                delete this.overlayIdIndex_[id.toString()];\n            }\n            event.element.setMap(null);\n        }.bind(_this));\n        return _this;\n    }\n    /**\n     * @abstract\n     * @return {import(\"./renderer/Map.js\").default} The map renderer\n     */\n    PluggableMap.prototype.createRenderer = function () {\n        throw new Error('Use a map type that has a createRenderer method');\n    };\n    /**\n     * Add the given control to the map.\n     * @param {import(\"./control/Control.js\").default} control Control.\n     * @api\n     */\n    PluggableMap.prototype.addControl = function (control) {\n        this.getControls().push(control);\n    };\n    /**\n     * Add the given interaction to the map. If you want to add an interaction\n     * at another point of the collection use `getInteraction()` and the methods\n     * available on {@link module:ol/Collection~Collection}. This can be used to\n     * stop the event propagation from the handleEvent function. The interactions\n     * get to handle the events in the reverse order of this collection.\n     * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n     * @api\n     */\n    PluggableMap.prototype.addInteraction = function (interaction) {\n        this.getInteractions().push(interaction);\n    };\n    /**\n     * Adds the given layer to the top of this map. If you want to add a layer\n     * elsewhere in the stack, use `getLayers()` and the methods available on\n     * {@link module:ol/Collection~Collection}.\n     * @param {import(\"./layer/Base.js\").default} layer Layer.\n     * @api\n     */\n    PluggableMap.prototype.addLayer = function (layer) {\n        var layers = this.getLayerGroup().getLayers();\n        layers.push(layer);\n    };\n    /**\n     * Add the given overlay to the map.\n     * @param {import(\"./Overlay.js\").default} overlay Overlay.\n     * @api\n     */\n    PluggableMap.prototype.addOverlay = function (overlay) {\n        this.getOverlays().push(overlay);\n    };\n    /**\n     * This deals with map's overlay collection changes.\n     * @param {import(\"./Overlay.js\").default} overlay Overlay.\n     * @private\n     */\n    PluggableMap.prototype.addOverlayInternal_ = function (overlay) {\n        var id = overlay.getId();\n        if (id !== undefined) {\n            this.overlayIdIndex_[id.toString()] = overlay;\n        }\n        overlay.setMap(this);\n    };\n    /**\n     *\n     * Clean up.\n     */\n    PluggableMap.prototype.disposeInternal = function () {\n        this.setTarget(null);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * Detect features that intersect a pixel on the viewport, and execute a\n     * callback with each intersecting feature. Layers included in the detection can\n     * be configured through the `layerFilter` option in `opt_options`.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n     *     called with two arguments. The first argument is one\n     *     {@link module:ol/Feature feature} or\n     *     {@link module:ol/render/Feature render feature} at the pixel, the second is\n     *     the {@link module:ol/layer/Layer layer} of the feature and will be null for\n     *     unmanaged layers. To stop detection, callback functions can return a\n     *     truthy value.\n     * @param {AtPixelOptions=} opt_options Optional options.\n     * @return {T|undefined} Callback result, i.e. the return value of last\n     * callback execution, or the first truthy callback return value.\n     * @template S,T\n     * @api\n     */\n    PluggableMap.prototype.forEachFeatureAtPixel = function (pixel, callback, opt_options) {\n        if (!this.frameState_) {\n            return;\n        }\n        var coordinate = this.getCoordinateFromPixelInternal(pixel);\n        opt_options = opt_options !== undefined ? opt_options : {};\n        var hitTolerance = opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n        var layerFilter = opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n        var checkWrapped = opt_options.checkWrapped !== false;\n        return this.renderer_.forEachFeatureAtCoordinate(coordinate, this.frameState_, hitTolerance, checkWrapped, callback, null, layerFilter, null);\n    };\n    /**\n     * Get all features that intersect a pixel on the viewport.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {AtPixelOptions=} opt_options Optional options.\n     * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n     * an empty array if none were found.\n     * @api\n     */\n    PluggableMap.prototype.getFeaturesAtPixel = function (pixel, opt_options) {\n        var features = [];\n        this.forEachFeatureAtPixel(pixel, function (feature) {\n            features.push(feature);\n        }, opt_options);\n        return features;\n    };\n    /**\n     * Detect layers that have a color value at a pixel on the viewport, and\n     * execute a callback with each matching layer. Layers included in the\n     * detection can be configured through `opt_layerFilter`.\n     *\n     * Note: this may give false positives unless the map layers have had different `className`\n     * properties assigned to them.\n     *\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {function(this: S, import(\"./layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback\n     *     Layer callback. This callback will receive two arguments: first is the\n     *     {@link module:ol/layer/Layer layer}, second argument is an array representing\n     *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\n     *     that do not currently support this argument. To stop detection, callback\n     *     functions can return a truthy value.\n     * @param {AtPixelOptions=} opt_options Configuration options.\n     * @return {T|undefined} Callback result, i.e. the return value of last\n     * callback execution, or the first truthy callback return value.\n     * @template S,T\n     * @api\n     */\n    PluggableMap.prototype.forEachLayerAtPixel = function (pixel, callback, opt_options) {\n        if (!this.frameState_) {\n            return;\n        }\n        var options = opt_options || {};\n        var hitTolerance = options.hitTolerance !== undefined ? options.hitTolerance : 0;\n        var layerFilter = options.layerFilter || TRUE;\n        return this.renderer_.forEachLayerAtPixel(pixel, this.frameState_, hitTolerance, callback, layerFilter);\n    };\n    /**\n     * Detect if features intersect a pixel on the viewport. Layers included in the\n     * detection can be configured through `opt_layerFilter`.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {AtPixelOptions=} opt_options Optional options.\n     * @return {boolean} Is there a feature at the given pixel?\n     * @api\n     */\n    PluggableMap.prototype.hasFeatureAtPixel = function (pixel, opt_options) {\n        if (!this.frameState_) {\n            return false;\n        }\n        var coordinate = this.getCoordinateFromPixelInternal(pixel);\n        opt_options = opt_options !== undefined ? opt_options : {};\n        var layerFilter = opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n        var hitTolerance = opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n        var checkWrapped = opt_options.checkWrapped !== false;\n        return this.renderer_.hasFeatureAtCoordinate(coordinate, this.frameState_, hitTolerance, checkWrapped, layerFilter, null);\n    };\n    /**\n     * Returns the coordinate in user projection for a browser event.\n     * @param {MouseEvent} event Event.\n     * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n     * @api\n     */\n    PluggableMap.prototype.getEventCoordinate = function (event) {\n        return this.getCoordinateFromPixel(this.getEventPixel(event));\n    };\n    /**\n     * Returns the coordinate in view projection for a browser event.\n     * @param {MouseEvent} event Event.\n     * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n     */\n    PluggableMap.prototype.getEventCoordinateInternal = function (event) {\n        return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n    };\n    /**\n     * Returns the map pixel position for a browser event relative to the viewport.\n     * @param {UIEvent} event Event.\n     * @return {import(\"./pixel.js\").Pixel} Pixel.\n     * @api\n     */\n    PluggableMap.prototype.getEventPixel = function (event) {\n        var viewportPosition = this.viewport_.getBoundingClientRect();\n        var eventPosition = \n        //FIXME Are we really calling this with a TouchEvent anywhere?\n        'changedTouches' in event\n            ? /** @type {TouchEvent} */ (event).changedTouches[0]\n            : /** @type {MouseEvent} */ (event);\n        return [\n            eventPosition.clientX - viewportPosition.left,\n            eventPosition.clientY - viewportPosition.top,\n        ];\n    };\n    /**\n     * Get the target in which this map is rendered.\n     * Note that this returns what is entered as an option or in setTarget:\n     * if that was an element, it returns an element; if a string, it returns that.\n     * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n     *     map is rendered in.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getTarget = function () {\n        return /** @type {HTMLElement|string|undefined} */ (this.get(MapProperty.TARGET));\n    };\n    /**\n     * Get the DOM element into which this map is rendered. In contrast to\n     * `getTarget` this method always return an `Element`, or `null` if the\n     * map has no target.\n     * @return {HTMLElement} The element that the map is rendered in.\n     * @api\n     */\n    PluggableMap.prototype.getTargetElement = function () {\n        var target = this.getTarget();\n        if (target !== undefined) {\n            return typeof target === 'string'\n                ? document.getElementById(target)\n                : target;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Get the coordinate for a given pixel.  This returns a coordinate in the\n     * user projection.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n     * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n     * @api\n     */\n    PluggableMap.prototype.getCoordinateFromPixel = function (pixel) {\n        return toUserCoordinate(this.getCoordinateFromPixelInternal(pixel), this.getView().getProjection());\n    };\n    /**\n     * Get the coordinate for a given pixel.  This returns a coordinate in the\n     * map view projection.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n     * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n     */\n    PluggableMap.prototype.getCoordinateFromPixelInternal = function (pixel) {\n        var frameState = this.frameState_;\n        if (!frameState) {\n            return null;\n        }\n        else {\n            return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n        }\n    };\n    /**\n     * Get the map controls. Modifying this collection changes the controls\n     * associated with the map.\n     * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n     * @api\n     */\n    PluggableMap.prototype.getControls = function () {\n        return this.controls;\n    };\n    /**\n     * Get the map overlays. Modifying this collection changes the overlays\n     * associated with the map.\n     * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n     * @api\n     */\n    PluggableMap.prototype.getOverlays = function () {\n        return this.overlays_;\n    };\n    /**\n     * Get an overlay by its identifier (the value returned by overlay.getId()).\n     * Note that the index treats string and numeric identifiers as the same. So\n     * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n     * @param {string|number} id Overlay identifier.\n     * @return {import(\"./Overlay.js\").default} Overlay.\n     * @api\n     */\n    PluggableMap.prototype.getOverlayById = function (id) {\n        var overlay = this.overlayIdIndex_[id.toString()];\n        return overlay !== undefined ? overlay : null;\n    };\n    /**\n     * Get the map interactions. Modifying this collection changes the interactions\n     * associated with the map.\n     *\n     * Interactions are used for e.g. pan, zoom and rotate.\n     * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n     * @api\n     */\n    PluggableMap.prototype.getInteractions = function () {\n        return this.interactions;\n    };\n    /**\n     * Get the layergroup associated with this map.\n     * @return {LayerGroup} A layer group containing the layers in this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getLayerGroup = function () {\n        return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n    };\n    /**\n     * Get the collection of layers associated with this map.\n     * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n     * @api\n     */\n    PluggableMap.prototype.getLayers = function () {\n        var layers = this.getLayerGroup().getLayers();\n        return layers;\n    };\n    /**\n     * @return {boolean} Layers have sources that are still loading.\n     */\n    PluggableMap.prototype.getLoading = function () {\n        var layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n        for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n            var layer = layerStatesArray[i].layer;\n            var source = /** @type {import(\"./layer/Layer.js\").default} */ (layer).getSource();\n            if (source && source.loading) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * Get the pixel for a coordinate.  This takes a coordinate in the user\n     * projection and returns the corresponding pixel.\n     * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n     * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n     * @api\n     */\n    PluggableMap.prototype.getPixelFromCoordinate = function (coordinate) {\n        var viewCoordinate = fromUserCoordinate(coordinate, this.getView().getProjection());\n        return this.getPixelFromCoordinateInternal(viewCoordinate);\n    };\n    /**\n     * Get the pixel for a coordinate.  This takes a coordinate in the map view\n     * projection and returns the corresponding pixel.\n     * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n     * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n     */\n    PluggableMap.prototype.getPixelFromCoordinateInternal = function (coordinate) {\n        var frameState = this.frameState_;\n        if (!frameState) {\n            return null;\n        }\n        else {\n            return applyTransform(frameState.coordinateToPixelTransform, coordinate.slice(0, 2));\n        }\n    };\n    /**\n     * Get the map renderer.\n     * @return {import(\"./renderer/Map.js\").default} Renderer\n     */\n    PluggableMap.prototype.getRenderer = function () {\n        return this.renderer_;\n    };\n    /**\n     * Get the size of this map.\n     * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getSize = function () {\n        return /** @type {import(\"./size.js\").Size|undefined} */ (this.get(MapProperty.SIZE));\n    };\n    /**\n     * Get the view associated with this map. A view manages properties such as\n     * center and resolution.\n     * @return {View} The view that controls this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getView = function () {\n        return /** @type {View} */ (this.get(MapProperty.VIEW));\n    };\n    /**\n     * Get the element that serves as the map viewport.\n     * @return {HTMLElement} Viewport.\n     * @api\n     */\n    PluggableMap.prototype.getViewport = function () {\n        return this.viewport_;\n    };\n    /**\n     * Get the element that serves as the container for overlays.  Elements added to\n     * this container will let mousedown and touchstart events through to the map,\n     * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n     * events.\n     * @return {!HTMLElement} The map's overlay container.\n     */\n    PluggableMap.prototype.getOverlayContainer = function () {\n        return this.overlayContainer_;\n    };\n    /**\n     * Get the element that serves as a container for overlays that don't allow\n     * event propagation. Elements added to this container won't let mousedown and\n     * touchstart events through to the map, so clicks and gestures on an overlay\n     * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n     * @return {!HTMLElement} The map's overlay container that stops events.\n     */\n    PluggableMap.prototype.getOverlayContainerStopEvent = function () {\n        return this.overlayContainerStopEvent_;\n    };\n    /**\n     * @return {!Document} The document where the map is displayed.\n     */\n    PluggableMap.prototype.getOwnerDocument = function () {\n        return this.getTargetElement()\n            ? this.getTargetElement().ownerDocument\n            : document;\n    };\n    /**\n     * @param {import(\"./Tile.js\").default} tile Tile.\n     * @param {string} tileSourceKey Tile source key.\n     * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n     * @param {number} tileResolution Tile resolution.\n     * @return {number} Tile priority.\n     */\n    PluggableMap.prototype.getTilePriority = function (tile, tileSourceKey, tileCenter, tileResolution) {\n        return getTilePriority(this.frameState_, tile, tileSourceKey, tileCenter, tileResolution);\n    };\n    /**\n     * @param {UIEvent} browserEvent Browser event.\n     * @param {string=} opt_type Type.\n     */\n    PluggableMap.prototype.handleBrowserEvent = function (browserEvent, opt_type) {\n        var type = opt_type || browserEvent.type;\n        var mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n        this.handleMapBrowserEvent(mapBrowserEvent);\n    };\n    /**\n     * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n     */\n    PluggableMap.prototype.handleMapBrowserEvent = function (mapBrowserEvent) {\n        if (!this.frameState_) {\n            // With no view defined, we cannot translate pixels into geographical\n            // coordinates so interactions cannot be used.\n            return;\n        }\n        var originalEvent = /** @type {PointerEvent} */ (mapBrowserEvent.originalEvent);\n        var eventType = originalEvent.type;\n        if (eventType === PointerEventType.POINTERDOWN ||\n            eventType === EventType.WHEEL ||\n            eventType === EventType.KEYDOWN) {\n            var doc = this.getOwnerDocument();\n            var rootNode = this.viewport_.getRootNode\n                ? this.viewport_.getRootNode()\n                : doc;\n            var target = 'host' in rootNode // ShadowRoot\n                ? /** @type {ShadowRoot} */ (rootNode).elementFromPoint(originalEvent.clientX, originalEvent.clientY)\n                : /** @type {Node} */ (originalEvent.target);\n            if (\n            // Abort if the target is a child of the container for elements whose events are not meant\n            // to be handled by map interactions.\n            this.overlayContainerStopEvent_.contains(target) ||\n                // Abort if the event target is a child of the container that is no longer in the page.\n                // It's possible for the target to no longer be in the page if it has been removed in an\n                // event listener, this might happen in a Control that recreates it's content based on\n                // user interaction either manually or via a render in something like https://reactjs.org/\n                !(rootNode === doc ? doc.documentElement : rootNode).contains(target)) {\n                return;\n            }\n        }\n        mapBrowserEvent.frameState = this.frameState_;\n        if (this.dispatchEvent(mapBrowserEvent) !== false) {\n            var interactionsArray = this.getInteractions().getArray().slice();\n            for (var i = interactionsArray.length - 1; i >= 0; i--) {\n                var interaction = interactionsArray[i];\n                if (interaction.getMap() !== this ||\n                    !interaction.getActive() ||\n                    !this.getTargetElement()) {\n                    continue;\n                }\n                var cont = interaction.handleEvent(mapBrowserEvent);\n                if (!cont || mapBrowserEvent.propagationStopped) {\n                    break;\n                }\n            }\n        }\n    };\n    /**\n     * @protected\n     */\n    PluggableMap.prototype.handlePostRender = function () {\n        var frameState = this.frameState_;\n        // Manage the tile queue\n        // Image loads are expensive and a limited resource, so try to use them\n        // efficiently:\n        // * When the view is static we allow a large number of parallel tile loads\n        //   to complete the frame as quickly as possible.\n        // * When animating or interacting, image loads can cause janks, so we reduce\n        //   the maximum number of loads per frame and limit the number of parallel\n        //   tile loads to remain reactive to view changes and to reduce the chance of\n        //   loading tiles that will quickly disappear from view.\n        var tileQueue = this.tileQueue_;\n        if (!tileQueue.isEmpty()) {\n            var maxTotalLoading = this.maxTilesLoading_;\n            var maxNewLoads = maxTotalLoading;\n            if (frameState) {\n                var hints = frameState.viewHints;\n                if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n                    var lowOnFrameBudget = !IMAGE_DECODE && Date.now() - frameState.time > 8;\n                    maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n                    maxNewLoads = lowOnFrameBudget ? 0 : 2;\n                }\n            }\n            if (tileQueue.getTilesLoading() < maxTotalLoading) {\n                tileQueue.reprioritize(); // FIXME only call if view has changed\n                tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n            }\n        }\n        if (frameState &&\n            this.hasListener(RenderEventType.RENDERCOMPLETE) &&\n            !frameState.animate &&\n            !this.tileQueue_.getTilesLoading() &&\n            !this.getLoading()) {\n            this.renderer_.dispatchRenderEvent(RenderEventType.RENDERCOMPLETE, frameState);\n        }\n        var postRenderFunctions = this.postRenderFunctions_;\n        for (var i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n            postRenderFunctions[i](this, frameState);\n        }\n        postRenderFunctions.length = 0;\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleSizeChanged_ = function () {\n        if (this.getView() && !this.getView().getAnimating()) {\n            this.getView().resolveConstraints(0);\n        }\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleTargetChanged_ = function () {\n        // target may be undefined, null, a string or an Element.\n        // If it's a string we convert it to an Element before proceeding.\n        // If it's not now an Element we remove the viewport from the DOM.\n        // If it's an Element we append the viewport element to it.\n        var targetElement;\n        if (this.getTarget()) {\n            targetElement = this.getTargetElement();\n        }\n        if (this.mapBrowserEventHandler_) {\n            for (var i = 0, ii = this.keyHandlerKeys_.length; i < ii; ++i) {\n                unlistenByKey(this.keyHandlerKeys_[i]);\n            }\n            this.keyHandlerKeys_ = null;\n            this.viewport_.removeEventListener(EventType.CONTEXTMENU, this.boundHandleBrowserEvent_);\n            this.viewport_.removeEventListener(EventType.WHEEL, this.boundHandleBrowserEvent_);\n            if (this.handleResize_ !== undefined) {\n                removeEventListener(EventType.RESIZE, this.handleResize_, false);\n                this.handleResize_ = undefined;\n            }\n            this.mapBrowserEventHandler_.dispose();\n            this.mapBrowserEventHandler_ = null;\n            removeNode(this.viewport_);\n        }\n        if (!targetElement) {\n            if (this.renderer_) {\n                clearTimeout(this.postRenderTimeoutHandle_);\n                this.postRenderTimeoutHandle_ = undefined;\n                this.postRenderFunctions_.length = 0;\n                this.renderer_.dispose();\n                this.renderer_ = null;\n            }\n            if (this.animationDelayKey_) {\n                cancelAnimationFrame(this.animationDelayKey_);\n                this.animationDelayKey_ = undefined;\n            }\n        }\n        else {\n            targetElement.appendChild(this.viewport_);\n            if (!this.renderer_) {\n                this.renderer_ = this.createRenderer();\n            }\n            this.mapBrowserEventHandler_ = new MapBrowserEventHandler(this, this.moveTolerance_);\n            for (var key in MapBrowserEventType) {\n                this.mapBrowserEventHandler_.addEventListener(MapBrowserEventType[key], this.handleMapBrowserEvent.bind(this));\n            }\n            this.viewport_.addEventListener(EventType.CONTEXTMENU, this.boundHandleBrowserEvent_, false);\n            this.viewport_.addEventListener(EventType.WHEEL, this.boundHandleBrowserEvent_, PASSIVE_EVENT_LISTENERS ? { passive: false } : false);\n            var keyboardEventTarget = !this.keyboardEventTarget_\n                ? targetElement\n                : this.keyboardEventTarget_;\n            this.keyHandlerKeys_ = [\n                listen(keyboardEventTarget, EventType.KEYDOWN, this.handleBrowserEvent, this),\n                listen(keyboardEventTarget, EventType.KEYPRESS, this.handleBrowserEvent, this),\n            ];\n            if (!this.handleResize_) {\n                this.handleResize_ = this.updateSize.bind(this);\n                window.addEventListener(EventType.RESIZE, this.handleResize_, false);\n            }\n        }\n        this.updateSize();\n        // updateSize calls setSize, so no need to call this.render\n        // ourselves here.\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleTileChange_ = function () {\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleViewPropertyChanged_ = function () {\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleViewChanged_ = function () {\n        if (this.viewPropertyListenerKey_) {\n            unlistenByKey(this.viewPropertyListenerKey_);\n            this.viewPropertyListenerKey_ = null;\n        }\n        if (this.viewChangeListenerKey_) {\n            unlistenByKey(this.viewChangeListenerKey_);\n            this.viewChangeListenerKey_ = null;\n        }\n        var view = this.getView();\n        if (view) {\n            this.updateViewportSize_();\n            this.viewPropertyListenerKey_ = listen(view, ObjectEventType.PROPERTYCHANGE, this.handleViewPropertyChanged_, this);\n            this.viewChangeListenerKey_ = listen(view, EventType.CHANGE, this.handleViewPropertyChanged_, this);\n            view.resolveConstraints(0);\n        }\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleLayerGroupChanged_ = function () {\n        if (this.layerGroupPropertyListenerKeys_) {\n            this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n            this.layerGroupPropertyListenerKeys_ = null;\n        }\n        var layerGroup = this.getLayerGroup();\n        if (layerGroup) {\n            this.layerGroupPropertyListenerKeys_ = [\n                listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n                listen(layerGroup, EventType.CHANGE, this.render, this),\n            ];\n        }\n        this.render();\n    };\n    /**\n     * @return {boolean} Is rendered.\n     */\n    PluggableMap.prototype.isRendered = function () {\n        return !!this.frameState_;\n    };\n    /**\n     * Requests an immediate render in a synchronous manner.\n     * @api\n     */\n    PluggableMap.prototype.renderSync = function () {\n        if (this.animationDelayKey_) {\n            cancelAnimationFrame(this.animationDelayKey_);\n        }\n        this.animationDelay_();\n    };\n    /**\n     * Redraws all text after new fonts have loaded\n     */\n    PluggableMap.prototype.redrawText = function () {\n        var layerStates = this.getLayerGroup().getLayerStatesArray();\n        for (var i = 0, ii = layerStates.length; i < ii; ++i) {\n            var layer = layerStates[i].layer;\n            if (layer.hasRenderer()) {\n                layer.getRenderer().handleFontsChanged();\n            }\n        }\n    };\n    /**\n     * Request a map rendering (at the next animation frame).\n     * @api\n     */\n    PluggableMap.prototype.render = function () {\n        if (this.renderer_ && this.animationDelayKey_ === undefined) {\n            this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n        }\n    };\n    /**\n     * Remove the given control from the map.\n     * @param {import(\"./control/Control.js\").default} control Control.\n     * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n     *     if the control was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeControl = function (control) {\n        return this.getControls().remove(control);\n    };\n    /**\n     * Remove the given interaction from the map.\n     * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n     * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n     *     undefined if the interaction was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeInteraction = function (interaction) {\n        return this.getInteractions().remove(interaction);\n    };\n    /**\n     * Removes the given layer from the map.\n     * @param {import(\"./layer/Base.js\").default} layer Layer.\n     * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n     *     layer was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeLayer = function (layer) {\n        var layers = this.getLayerGroup().getLayers();\n        return layers.remove(layer);\n    };\n    /**\n     * Remove the given overlay from the map.\n     * @param {import(\"./Overlay.js\").default} overlay Overlay.\n     * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n     *     if the overlay was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeOverlay = function (overlay) {\n        return this.getOverlays().remove(overlay);\n    };\n    /**\n     * @param {number} time Time.\n     * @private\n     */\n    PluggableMap.prototype.renderFrame_ = function (time) {\n        var _this = this;\n        var size = this.getSize();\n        var view = this.getView();\n        var previousFrameState = this.frameState_;\n        /** @type {?FrameState} */\n        var frameState = null;\n        if (size !== undefined && hasArea(size) && view && view.isDef()) {\n            var viewHints = view.getHints(this.frameState_ ? this.frameState_.viewHints : undefined);\n            var viewState = view.getState();\n            frameState = {\n                animate: false,\n                coordinateToPixelTransform: this.coordinateToPixelTransform_,\n                declutterTree: null,\n                extent: getForViewAndSize(viewState.center, viewState.resolution, viewState.rotation, size),\n                index: this.frameIndex_++,\n                layerIndex: 0,\n                layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n                pixelRatio: this.pixelRatio_,\n                pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n                postRenderFunctions: [],\n                size: size,\n                tileQueue: this.tileQueue_,\n                time: time,\n                usedTiles: {},\n                viewState: viewState,\n                viewHints: viewHints,\n                wantedTiles: {},\n            };\n        }\n        this.frameState_ = frameState;\n        this.renderer_.renderFrame(frameState);\n        if (frameState) {\n            if (frameState.animate) {\n                this.render();\n            }\n            Array.prototype.push.apply(this.postRenderFunctions_, frameState.postRenderFunctions);\n            if (previousFrameState) {\n                var moveStart = !this.previousExtent_ ||\n                    (!isEmpty(this.previousExtent_) &&\n                        !equals(frameState.extent, this.previousExtent_));\n                if (moveStart) {\n                    this.dispatchEvent(new MapEvent(MapEventType.MOVESTART, this, previousFrameState));\n                    this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n                }\n            }\n            var idle = this.previousExtent_ &&\n                !frameState.viewHints[ViewHint.ANIMATING] &&\n                !frameState.viewHints[ViewHint.INTERACTING] &&\n                !equals(frameState.extent, this.previousExtent_);\n            if (idle) {\n                this.dispatchEvent(new MapEvent(MapEventType.MOVEEND, this, frameState));\n                clone(frameState.extent, this.previousExtent_);\n            }\n        }\n        this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n        if (!this.postRenderTimeoutHandle_) {\n            this.postRenderTimeoutHandle_ = setTimeout(function () {\n                _this.postRenderTimeoutHandle_ = undefined;\n                _this.handlePostRender();\n            }, 0);\n        }\n    };\n    /**\n     * Sets the layergroup of this map.\n     * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setLayerGroup = function (layerGroup) {\n        this.set(MapProperty.LAYERGROUP, layerGroup);\n    };\n    /**\n     * Set the size of this map.\n     * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setSize = function (size) {\n        this.set(MapProperty.SIZE, size);\n    };\n    /**\n     * Set the target element to render this map into.\n     * @param {HTMLElement|string|undefined} target The Element or id of the Element\n     *     that the map is rendered in.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setTarget = function (target) {\n        this.set(MapProperty.TARGET, target);\n    };\n    /**\n     * Set the view for this map.\n     * @param {View} view The view that controls this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setView = function (view) {\n        this.set(MapProperty.VIEW, view);\n    };\n    /**\n     * Force a recalculation of the map viewport size.  This should be called when\n     * third-party code changes the size of the map viewport.\n     * @api\n     */\n    PluggableMap.prototype.updateSize = function () {\n        var targetElement = this.getTargetElement();\n        if (!targetElement) {\n            this.setSize(undefined);\n        }\n        else {\n            var computedStyle = getComputedStyle(targetElement);\n            this.setSize([\n                targetElement.offsetWidth -\n                    parseFloat(computedStyle['borderLeftWidth']) -\n                    parseFloat(computedStyle['paddingLeft']) -\n                    parseFloat(computedStyle['paddingRight']) -\n                    parseFloat(computedStyle['borderRightWidth']),\n                targetElement.offsetHeight -\n                    parseFloat(computedStyle['borderTopWidth']) -\n                    parseFloat(computedStyle['paddingTop']) -\n                    parseFloat(computedStyle['paddingBottom']) -\n                    parseFloat(computedStyle['borderBottomWidth']),\n            ]);\n        }\n        this.updateViewportSize_();\n    };\n    /**\n     * Recomputes the viewport size and save it on the view object (if any)\n     * @private\n     */\n    PluggableMap.prototype.updateViewportSize_ = function () {\n        var view = this.getView();\n        if (view) {\n            var size = undefined;\n            var computedStyle = getComputedStyle(this.viewport_);\n            if (computedStyle.width && computedStyle.height) {\n                size = [\n                    parseInt(computedStyle.width, 10),\n                    parseInt(computedStyle.height, 10),\n                ];\n            }\n            view.setViewportSize(size);\n        }\n    };\n    return PluggableMap;\n}(BaseObject));\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n    /**\n     * @type {HTMLElement|Document}\n     */\n    var keyboardEventTarget = null;\n    if (options.keyboardEventTarget !== undefined) {\n        keyboardEventTarget =\n            typeof options.keyboardEventTarget === 'string'\n                ? document.getElementById(options.keyboardEventTarget)\n                : options.keyboardEventTarget;\n    }\n    /**\n     * @type {Object<string, *>}\n     */\n    var values = {};\n    var layerGroup = options.layers &&\n        typeof ( /** @type {?} */(options.layers).getLayers) === 'function'\n        ? /** @type {LayerGroup} */ (options.layers)\n        : new LayerGroup({ layers: /** @type {Collection} */ (options.layers) });\n    values[MapProperty.LAYERGROUP] = layerGroup;\n    values[MapProperty.TARGET] = options.target;\n    values[MapProperty.VIEW] =\n        options.view !== undefined ? options.view : new View();\n    var controls;\n    if (options.controls !== undefined) {\n        if (Array.isArray(options.controls)) {\n            controls = new Collection(options.controls.slice());\n        }\n        else {\n            assert(typeof ( /** @type {?} */(options.controls).getArray) === 'function', 47); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n            controls = /** @type {Collection} */ (options.controls);\n        }\n    }\n    var interactions;\n    if (options.interactions !== undefined) {\n        if (Array.isArray(options.interactions)) {\n            interactions = new Collection(options.interactions.slice());\n        }\n        else {\n            assert(typeof ( /** @type {?} */(options.interactions).getArray) ===\n                'function', 48); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n            interactions = /** @type {Collection} */ (options.interactions);\n        }\n    }\n    var overlays;\n    if (options.overlays !== undefined) {\n        if (Array.isArray(options.overlays)) {\n            overlays = new Collection(options.overlays.slice());\n        }\n        else {\n            assert(typeof ( /** @type {?} */(options.overlays).getArray) === 'function', 49); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n            overlays = options.overlays;\n        }\n    }\n    else {\n        overlays = new Collection();\n    }\n    return {\n        controls: controls,\n        interactions: interactions,\n        keyboardEventTarget: keyboardEventTarget,\n        overlays: overlays,\n        values: values,\n    };\n}\nexport default PluggableMap;\n//# sourceMappingURL=PluggableMap.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport { VOID } from '../functions.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport { removeNode } from '../dom.js';\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * var myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nvar Control = /** @class */ (function (_super) {\n    __extends(Control, _super);\n    /**\n     * @param {Options} options Control options.\n     */\n    function Control(options) {\n        var _this = _super.call(this) || this;\n        var element = options.element;\n        if (element && !options.target && !element.style.pointerEvents) {\n            element.style.pointerEvents = 'auto';\n        }\n        /**\n         * @protected\n         * @type {HTMLElement}\n         */\n        _this.element = element ? element : null;\n        /**\n         * @private\n         * @type {HTMLElement}\n         */\n        _this.target_ = null;\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = null;\n        /**\n         * @protected\n         * @type {!Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.listenerKeys = [];\n        if (options.render) {\n            _this.render = options.render;\n        }\n        if (options.target) {\n            _this.setTarget(options.target);\n        }\n        return _this;\n    }\n    /**\n     * Clean up.\n     */\n    Control.prototype.disposeInternal = function () {\n        removeNode(this.element);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * Get the map associated with this control.\n     * @return {import(\"../PluggableMap.js\").default} Map.\n     * @api\n     */\n    Control.prototype.getMap = function () {\n        return this.map_;\n    };\n    /**\n     * Remove the control from its current map and attach it to the new map.\n     * Subclasses may set up event handlers to get notified about changes to\n     * the map here.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     * @api\n     */\n    Control.prototype.setMap = function (map) {\n        if (this.map_) {\n            removeNode(this.element);\n        }\n        for (var i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n            unlistenByKey(this.listenerKeys[i]);\n        }\n        this.listenerKeys.length = 0;\n        this.map_ = map;\n        if (this.map_) {\n            var target = this.target_\n                ? this.target_\n                : map.getOverlayContainerStopEvent();\n            target.appendChild(this.element);\n            if (this.render !== VOID) {\n                this.listenerKeys.push(listen(map, MapEventType.POSTRENDER, this.render, this));\n            }\n            map.render();\n        }\n    };\n    /**\n     * Renders the control.\n     * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n     * @api\n     */\n    Control.prototype.render = function (mapEvent) { };\n    /**\n     * This function is used to set a target element for the control. It has no\n     * effect if it is called after the control has been added to the map (i.e.\n     * after `setMap` is called on the control). If no `target` is set in the\n     * options passed to the control constructor and if `setTarget` is not called\n     * then the control is added to the map's overlay container.\n     * @param {HTMLElement|string} target Target.\n     * @api\n     */\n    Control.prototype.setTarget = function (target) {\n        this.target_ =\n            typeof target === 'string' ? document.getElementById(target) : target;\n    };\n    return Control;\n}(BaseObject));\nexport default Control;\n//# sourceMappingURL=Control.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport { CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE } from '../css.js';\nimport { equals } from '../array.js';\nimport { inView } from '../layer/Layer.js';\nimport { removeChildren, replaceNode } from '../dom.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='»'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nvar Attribution = /** @class */ (function (_super) {\n    __extends(Attribution, _super);\n    /**\n     * @param {Options=} opt_options Attribution options.\n     */\n    function Attribution(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            render: options.render,\n            target: options.target,\n        }) || this;\n        /**\n         * @private\n         * @type {HTMLElement}\n         */\n        _this.ulElement_ = document.createElement('ul');\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.collapsed_ =\n            options.collapsed !== undefined ? options.collapsed : true;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.userCollapsed_ = _this.collapsed_;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.overrideCollapsible_ = options.collapsible !== undefined;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.collapsible_ =\n            options.collapsible !== undefined ? options.collapsible : true;\n        if (!_this.collapsible_) {\n            _this.collapsed_ = false;\n        }\n        var className = options.className !== undefined ? options.className : 'ol-attribution';\n        var tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n        var expandClassName = options.expandClassName !== undefined\n            ? options.expandClassName\n            : className + '-expand';\n        var collapseLabel = options.collapseLabel !== undefined ? options.collapseLabel : '\\u00BB';\n        var collapseClassName = options.collapseClassName !== undefined\n            ? options.collapseClassName\n            : className + '-collpase';\n        if (typeof collapseLabel === 'string') {\n            /**\n             * @private\n             * @type {HTMLElement}\n             */\n            _this.collapseLabel_ = document.createElement('span');\n            _this.collapseLabel_.textContent = collapseLabel;\n            _this.collapseLabel_.className = collapseClassName;\n        }\n        else {\n            _this.collapseLabel_ = collapseLabel;\n        }\n        var label = options.label !== undefined ? options.label : 'i';\n        if (typeof label === 'string') {\n            /**\n             * @private\n             * @type {HTMLElement}\n             */\n            _this.label_ = document.createElement('span');\n            _this.label_.textContent = label;\n            _this.label_.className = expandClassName;\n        }\n        else {\n            _this.label_ = label;\n        }\n        var activeLabel = _this.collapsible_ && !_this.collapsed_ ? _this.collapseLabel_ : _this.label_;\n        var button = document.createElement('button');\n        button.setAttribute('type', 'button');\n        button.title = tipLabel;\n        button.appendChild(activeLabel);\n        button.addEventListener(EventType.CLICK, _this.handleClick_.bind(_this), false);\n        var cssClasses = className +\n            ' ' +\n            CLASS_UNSELECTABLE +\n            ' ' +\n            CLASS_CONTROL +\n            (_this.collapsed_ && _this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n            (_this.collapsible_ ? '' : ' ol-uncollapsible');\n        var element = _this.element;\n        element.className = cssClasses;\n        element.appendChild(_this.ulElement_);\n        element.appendChild(button);\n        /**\n         * A list of currently rendered resolutions.\n         * @type {Array<string>}\n         * @private\n         */\n        _this.renderedAttributions_ = [];\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderedVisible_ = true;\n        return _this;\n    }\n    /**\n     * Collect a list of visible attributions and set the collapsible state.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {Array<string>} Attributions.\n     * @private\n     */\n    Attribution.prototype.collectSourceAttributions_ = function (frameState) {\n        /**\n         * Used to determine if an attribution already exists.\n         * @type {!Object<string, boolean>}\n         */\n        var lookup = {};\n        /**\n         * A list of visible attributions.\n         * @type {Array<string>}\n         */\n        var visibleAttributions = [];\n        var collapsible = true;\n        var layerStatesArray = frameState.layerStatesArray;\n        for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n            var layerState = layerStatesArray[i];\n            if (!inView(layerState, frameState.viewState)) {\n                continue;\n            }\n            var source = /** @type {import(\"../layer/Layer.js\").default} */ (layerState.layer).getSource();\n            if (!source) {\n                continue;\n            }\n            var attributionGetter = source.getAttributions();\n            if (!attributionGetter) {\n                continue;\n            }\n            var attributions = attributionGetter(frameState);\n            if (!attributions) {\n                continue;\n            }\n            collapsible =\n                collapsible && source.getAttributionsCollapsible() !== false;\n            if (Array.isArray(attributions)) {\n                for (var j = 0, jj = attributions.length; j < jj; ++j) {\n                    if (!(attributions[j] in lookup)) {\n                        visibleAttributions.push(attributions[j]);\n                        lookup[attributions[j]] = true;\n                    }\n                }\n            }\n            else {\n                if (!(attributions in lookup)) {\n                    visibleAttributions.push(attributions);\n                    lookup[attributions] = true;\n                }\n            }\n        }\n        if (!this.overrideCollapsible_) {\n            this.setCollapsible(collapsible);\n        }\n        return visibleAttributions;\n    };\n    /**\n     * @private\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    Attribution.prototype.updateElement_ = function (frameState) {\n        if (!frameState) {\n            if (this.renderedVisible_) {\n                this.element.style.display = 'none';\n                this.renderedVisible_ = false;\n            }\n            return;\n        }\n        var attributions = this.collectSourceAttributions_(frameState);\n        var visible = attributions.length > 0;\n        if (this.renderedVisible_ != visible) {\n            this.element.style.display = visible ? '' : 'none';\n            this.renderedVisible_ = visible;\n        }\n        if (equals(attributions, this.renderedAttributions_)) {\n            return;\n        }\n        removeChildren(this.ulElement_);\n        // append the attributions\n        for (var i = 0, ii = attributions.length; i < ii; ++i) {\n            var element = document.createElement('li');\n            element.innerHTML = attributions[i];\n            this.ulElement_.appendChild(element);\n        }\n        this.renderedAttributions_ = attributions;\n    };\n    /**\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    Attribution.prototype.handleClick_ = function (event) {\n        event.preventDefault();\n        this.handleToggle_();\n        this.userCollapsed_ = this.collapsed_;\n    };\n    /**\n     * @private\n     */\n    Attribution.prototype.handleToggle_ = function () {\n        this.element.classList.toggle(CLASS_COLLAPSED);\n        if (this.collapsed_) {\n            replaceNode(this.collapseLabel_, this.label_);\n        }\n        else {\n            replaceNode(this.label_, this.collapseLabel_);\n        }\n        this.collapsed_ = !this.collapsed_;\n    };\n    /**\n     * Return `true` if the attribution is collapsible, `false` otherwise.\n     * @return {boolean} True if the widget is collapsible.\n     * @api\n     */\n    Attribution.prototype.getCollapsible = function () {\n        return this.collapsible_;\n    };\n    /**\n     * Set whether the attribution should be collapsible.\n     * @param {boolean} collapsible True if the widget is collapsible.\n     * @api\n     */\n    Attribution.prototype.setCollapsible = function (collapsible) {\n        if (this.collapsible_ === collapsible) {\n            return;\n        }\n        this.collapsible_ = collapsible;\n        this.element.classList.toggle('ol-uncollapsible');\n        if (this.userCollapsed_) {\n            this.handleToggle_();\n        }\n    };\n    /**\n     * Collapse or expand the attribution according to the passed parameter. Will\n     * not do anything if the attribution isn't collapsible or if the current\n     * collapsed state is already the one requested.\n     * @param {boolean} collapsed True if the widget is collapsed.\n     * @api\n     */\n    Attribution.prototype.setCollapsed = function (collapsed) {\n        this.userCollapsed_ = collapsed;\n        if (!this.collapsible_ || this.collapsed_ === collapsed) {\n            return;\n        }\n        this.handleToggle_();\n    };\n    /**\n     * Return `true` when the attribution is currently collapsed or `false`\n     * otherwise.\n     * @return {boolean} True if the widget is collapsed.\n     * @api\n     */\n    Attribution.prototype.getCollapsed = function () {\n        return this.collapsed_;\n    };\n    /**\n     * Update the attribution element.\n     * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n     * @override\n     */\n    Attribution.prototype.render = function (mapEvent) {\n        this.updateElement_(mapEvent.frameState);\n    };\n    return Attribution;\n}(Control));\nexport default Attribution;\n//# sourceMappingURL=Attribution.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport { CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE } from '../css.js';\nimport { easeOut } from '../easing.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nvar Rotate = /** @class */ (function (_super) {\n    __extends(Rotate, _super);\n    /**\n     * @param {Options=} opt_options Rotate options.\n     */\n    function Rotate(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            render: options.render,\n            target: options.target,\n        }) || this;\n        var className = options.className !== undefined ? options.className : 'ol-rotate';\n        var label = options.label !== undefined ? options.label : '\\u21E7';\n        var compassClassName = options.compassClassName !== undefined\n            ? options.compassClassName\n            : 'ol-compass';\n        /**\n         * @type {HTMLElement}\n         * @private\n         */\n        _this.label_ = null;\n        if (typeof label === 'string') {\n            _this.label_ = document.createElement('span');\n            _this.label_.className = compassClassName;\n            _this.label_.textContent = label;\n        }\n        else {\n            _this.label_ = label;\n            _this.label_.classList.add(compassClassName);\n        }\n        var tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n        var button = document.createElement('button');\n        button.className = className + '-reset';\n        button.setAttribute('type', 'button');\n        button.title = tipLabel;\n        button.appendChild(_this.label_);\n        button.addEventListener(EventType.CLICK, _this.handleClick_.bind(_this), false);\n        var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n        var element = _this.element;\n        element.className = cssClasses;\n        element.appendChild(button);\n        _this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.rotation_ = undefined;\n        if (_this.autoHide_) {\n            _this.element.classList.add(CLASS_HIDDEN);\n        }\n        return _this;\n    }\n    /**\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    Rotate.prototype.handleClick_ = function (event) {\n        event.preventDefault();\n        if (this.callResetNorth_ !== undefined) {\n            this.callResetNorth_();\n        }\n        else {\n            this.resetNorth_();\n        }\n    };\n    /**\n     * @private\n     */\n    Rotate.prototype.resetNorth_ = function () {\n        var map = this.getMap();\n        var view = map.getView();\n        if (!view) {\n            // the map does not have a view, so we can't act\n            // upon it\n            return;\n        }\n        var rotation = view.getRotation();\n        if (rotation !== undefined) {\n            if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n                view.animate({\n                    rotation: 0,\n                    duration: this.duration_,\n                    easing: easeOut,\n                });\n            }\n            else {\n                view.setRotation(0);\n            }\n        }\n    };\n    /**\n     * Update the rotate control element.\n     * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n     * @override\n     */\n    Rotate.prototype.render = function (mapEvent) {\n        var frameState = mapEvent.frameState;\n        if (!frameState) {\n            return;\n        }\n        var rotation = frameState.viewState.rotation;\n        if (rotation != this.rotation_) {\n            var transform = 'rotate(' + rotation + 'rad)';\n            if (this.autoHide_) {\n                var contains = this.element.classList.contains(CLASS_HIDDEN);\n                if (!contains && rotation === 0) {\n                    this.element.classList.add(CLASS_HIDDEN);\n                }\n                else if (contains && rotation !== 0) {\n                    this.element.classList.remove(CLASS_HIDDEN);\n                }\n            }\n            this.label_.style.transform = transform;\n        }\n        this.rotation_ = rotation;\n    };\n    return Rotate;\n}(Control));\nexport default Rotate;\n//# sourceMappingURL=Rotate.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport { CLASS_CONTROL, CLASS_UNSELECTABLE } from '../css.js';\nimport { easeOut } from '../easing.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='-'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nvar Zoom = /** @class */ (function (_super) {\n    __extends(Zoom, _super);\n    /**\n     * @param {Options=} opt_options Zoom options.\n     */\n    function Zoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            target: options.target,\n        }) || this;\n        var className = options.className !== undefined ? options.className : 'ol-zoom';\n        var delta = options.delta !== undefined ? options.delta : 1;\n        var zoomInClassName = options.zoomInClassName !== undefined\n            ? options.zoomInClassName\n            : className + '-in';\n        var zoomOutClassName = options.zoomOutClassName !== undefined\n            ? options.zoomOutClassName\n            : className + '-out';\n        var zoomInLabel = options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n        var zoomOutLabel = options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2212';\n        var zoomInTipLabel = options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n        var zoomOutTipLabel = options.zoomOutTipLabel !== undefined\n            ? options.zoomOutTipLabel\n            : 'Zoom out';\n        var inElement = document.createElement('button');\n        inElement.className = zoomInClassName;\n        inElement.setAttribute('type', 'button');\n        inElement.title = zoomInTipLabel;\n        inElement.appendChild(typeof zoomInLabel === 'string'\n            ? document.createTextNode(zoomInLabel)\n            : zoomInLabel);\n        inElement.addEventListener(EventType.CLICK, _this.handleClick_.bind(_this, delta), false);\n        var outElement = document.createElement('button');\n        outElement.className = zoomOutClassName;\n        outElement.setAttribute('type', 'button');\n        outElement.title = zoomOutTipLabel;\n        outElement.appendChild(typeof zoomOutLabel === 'string'\n            ? document.createTextNode(zoomOutLabel)\n            : zoomOutLabel);\n        outElement.addEventListener(EventType.CLICK, _this.handleClick_.bind(_this, -delta), false);\n        var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n        var element = _this.element;\n        element.className = cssClasses;\n        element.appendChild(inElement);\n        element.appendChild(outElement);\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    /**\n     * @param {number} delta Zoom delta.\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    Zoom.prototype.handleClick_ = function (delta, event) {\n        event.preventDefault();\n        this.zoomByDelta_(delta);\n    };\n    /**\n     * @param {number} delta Zoom delta.\n     * @private\n     */\n    Zoom.prototype.zoomByDelta_ = function (delta) {\n        var map = this.getMap();\n        var view = map.getView();\n        if (!view) {\n            // the map does not have a view, so we can't act\n            // upon it\n            return;\n        }\n        var currentZoom = view.getZoom();\n        if (currentZoom !== undefined) {\n            var newZoom = view.getConstrainedZoom(currentZoom + delta);\n            if (this.duration_ > 0) {\n                if (view.getAnimating()) {\n                    view.cancelAnimations();\n                }\n                view.animate({\n                    zoom: newZoom,\n                    duration: this.duration_,\n                    easing: easeOut,\n                });\n            }\n            else {\n                view.setZoom(newZoom);\n            }\n        }\n    };\n    return Zoom;\n}(Control));\nexport default Zoom;\n//# sourceMappingURL=Zoom.js.map","/**\n * @module ol/interaction/Property\n */\n/**\n * @enum {string}\n */\nexport default {\n    ACTIVE: 'active',\n};\n//# sourceMappingURL=Property.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport { easeOut, linear } from '../easing.js';\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nvar Interaction = /** @class */ (function (_super) {\n    __extends(Interaction, _super);\n    /**\n     * @param {InteractionOptions=} opt_options Options.\n     */\n    function Interaction(opt_options) {\n        var _this = _super.call(this) || this;\n        if (opt_options && opt_options.handleEvent) {\n            _this.handleEvent = opt_options.handleEvent;\n        }\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = null;\n        _this.setActive(true);\n        return _this;\n    }\n    /**\n     * Return whether the interaction is currently active.\n     * @return {boolean} `true` if the interaction is active, `false` otherwise.\n     * @observable\n     * @api\n     */\n    Interaction.prototype.getActive = function () {\n        return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n    };\n    /**\n     * Get the map associated with this interaction.\n     * @return {import(\"../PluggableMap.js\").default} Map.\n     * @api\n     */\n    Interaction.prototype.getMap = function () {\n        return this.map_;\n    };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event}.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     * @api\n     */\n    Interaction.prototype.handleEvent = function (mapBrowserEvent) {\n        return true;\n    };\n    /**\n     * Activate or deactivate the interaction.\n     * @param {boolean} active Active.\n     * @observable\n     * @api\n     */\n    Interaction.prototype.setActive = function (active) {\n        this.set(InteractionProperty.ACTIVE, active);\n    };\n    /**\n     * Remove the interaction from its current map and attach it to the new map.\n     * Subclasses may set up event handlers to get notified about changes to\n     * the map here.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    Interaction.prototype.setMap = function (map) {\n        this.map_ = map;\n    };\n    return Interaction;\n}(BaseObject));\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number=} opt_duration Duration.\n */\nexport function pan(view, delta, opt_duration) {\n    var currentCenter = view.getCenterInternal();\n    if (currentCenter) {\n        var center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n        view.animateInternal({\n            duration: opt_duration !== undefined ? opt_duration : 250,\n            easing: linear,\n            center: view.getConstrainedCenter(center),\n        });\n    }\n}\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate in the user projection.\n * @param {number=} opt_duration Duration.\n */\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\n    var currentZoom = view.getZoom();\n    if (currentZoom === undefined) {\n        return;\n    }\n    var newZoom = view.getConstrainedZoom(currentZoom + delta);\n    var newResolution = view.getResolutionForZoom(newZoom);\n    if (view.getAnimating()) {\n        view.cancelAnimations();\n    }\n    view.animate({\n        resolution: newResolution,\n        anchor: opt_anchor,\n        duration: opt_duration !== undefined ? opt_duration : 250,\n        easing: easeOut,\n    });\n}\nexport default Interaction;\n//# sourceMappingURL=Interaction.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, { zoomByDelta } from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nvar DoubleClickZoom = /** @class */ (function (_super) {\n    __extends(DoubleClickZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DoubleClickZoom(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.delta_ = options.delta ? options.delta : 1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n     * doubleclick) and eventually zooms the map.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     */\n    DoubleClickZoom.prototype.handleEvent = function (mapBrowserEvent) {\n        var stopEvent = false;\n        if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n            var browserEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n            var map = mapBrowserEvent.map;\n            var anchor = mapBrowserEvent.coordinate;\n            var delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n            var view = map.getView();\n            zoomByDelta(view, delta, anchor, this.duration_);\n            browserEvent.preventDefault();\n            stopEvent = true;\n        }\n        return !stopEvent;\n    };\n    return DoubleClickZoom;\n}(Interaction));\nexport default DoubleClickZoom;\n//# sourceMappingURL=DoubleClickZoom.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport { getValues } from '../obj.js';\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nvar PointerInteraction = /** @class */ (function (_super) {\n    __extends(PointerInteraction, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function PointerInteraction(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, \n        /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)) || this;\n        if (options.handleDownEvent) {\n            _this.handleDownEvent = options.handleDownEvent;\n        }\n        if (options.handleDragEvent) {\n            _this.handleDragEvent = options.handleDragEvent;\n        }\n        if (options.handleMoveEvent) {\n            _this.handleMoveEvent = options.handleMoveEvent;\n        }\n        if (options.handleUpEvent) {\n            _this.handleUpEvent = options.handleUpEvent;\n        }\n        if (options.stopDown) {\n            _this.stopDown = options.stopDown;\n        }\n        /**\n         * @type {boolean}\n         * @protected\n         */\n        _this.handlingDownUpSequence = false;\n        /**\n         * @type {!Object<string, PointerEvent>}\n         * @private\n         */\n        _this.trackedPointers_ = {};\n        /**\n         * @type {Array<PointerEvent>}\n         * @protected\n         */\n        _this.targetPointers = [];\n        return _this;\n    }\n    /**\n     * Returns the current number of pointers involved in the interaction,\n     * e.g. `2` when two fingers are used.\n     * @return {number} The number of pointers.\n     * @api\n     */\n    PointerInteraction.prototype.getPointerCount = function () {\n        return this.targetPointers.length;\n    };\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     * @protected\n     */\n    PointerInteraction.prototype.handleDownEvent = function (mapBrowserEvent) {\n        return false;\n    };\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @protected\n     */\n    PointerInteraction.prototype.handleDragEvent = function (mapBrowserEvent) { };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} and may call into\n     * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n     * detected.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     * @api\n     */\n    PointerInteraction.prototype.handleEvent = function (mapBrowserEvent) {\n        if (!mapBrowserEvent.originalEvent) {\n            return true;\n        }\n        var stopEvent = false;\n        this.updateTrackedPointers_(mapBrowserEvent);\n        if (this.handlingDownUpSequence) {\n            if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n                this.handleDragEvent(mapBrowserEvent);\n                // prevent page scrolling during dragging\n                mapBrowserEvent.originalEvent.preventDefault();\n            }\n            else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n                var handledUp = this.handleUpEvent(mapBrowserEvent);\n                this.handlingDownUpSequence =\n                    handledUp && this.targetPointers.length > 0;\n            }\n        }\n        else {\n            if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n                var handled = this.handleDownEvent(mapBrowserEvent);\n                this.handlingDownUpSequence = handled;\n                stopEvent = this.stopDown(handled);\n            }\n            else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n                this.handleMoveEvent(mapBrowserEvent);\n            }\n        }\n        return !stopEvent;\n    };\n    /**\n     * Handle pointer move events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @protected\n     */\n    PointerInteraction.prototype.handleMoveEvent = function (mapBrowserEvent) { };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     * @protected\n     */\n    PointerInteraction.prototype.handleUpEvent = function (mapBrowserEvent) {\n        return false;\n    };\n    /**\n     * This function is used to determine if \"down\" events should be propagated\n     * to other interactions or should be stopped.\n     * @param {boolean} handled Was the event handled by the interaction?\n     * @return {boolean} Should the `down` event be stopped?\n     */\n    PointerInteraction.prototype.stopDown = function (handled) {\n        return handled;\n    };\n    /**\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @private\n     */\n    PointerInteraction.prototype.updateTrackedPointers_ = function (mapBrowserEvent) {\n        if (isPointerDraggingEvent(mapBrowserEvent)) {\n            var event_1 = mapBrowserEvent.originalEvent;\n            var id = event_1.pointerId.toString();\n            if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n                delete this.trackedPointers_[id];\n            }\n            else if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n                this.trackedPointers_[id] = event_1;\n            }\n            else if (id in this.trackedPointers_) {\n                // update only when there was a pointerdown event for this pointer\n                this.trackedPointers_[id] = event_1;\n            }\n            this.targetPointers = getValues(this.trackedPointers_);\n        }\n    };\n    return PointerInteraction;\n}(Interaction));\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {import(\"../pixel.js\").Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n    var length = pointerEvents.length;\n    var clientX = 0;\n    var clientY = 0;\n    for (var i = 0; i < length; i++) {\n        clientX += pointerEvents[i].clientX;\n        clientY += pointerEvents[i].clientY;\n    }\n    return [clientX / length, clientY / length];\n}\n/**\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n    var type = mapBrowserEvent.type;\n    return (type === MapBrowserEventType.POINTERDOWN ||\n        type === MapBrowserEventType.POINTERDRAG ||\n        type === MapBrowserEventType.POINTERUP);\n}\nexport default PointerInteraction;\n//# sourceMappingURL=Pointer.js.map","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport { FALSE, TRUE } from '../functions.js';\nimport { MAC, WEBKIT } from '../has.js';\nimport { assert } from '../asserts.js';\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n    var conditions = arguments;\n    /**\n     * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n     * @return {boolean} All conditions passed.\n     */\n    return function (event) {\n        var pass = true;\n        for (var i = 0, ii = conditions.length; i < ii; ++i) {\n            pass = pass && conditions[i](event);\n            if (!pass) {\n                break;\n            }\n        }\n        return pass;\n    };\n}\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport var altKeyOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        !originalEvent.shiftKey);\n};\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport var altShiftKeysOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        originalEvent.shiftKey);\n};\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport var focus = function (event) {\n    return event.target.getTargetElement().contains(document.activeElement);\n};\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport var focusWithTabindex = function (event) {\n    return event.map.getTargetElement().hasAttribute('tabindex')\n        ? focus(event)\n        : true;\n};\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport var always = TRUE;\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport var click = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport var mouseActionButton = function (mapBrowserEvent) {\n    var originalEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n    return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport var never = FALSE;\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport var pointerMove = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == 'pointermove';\n};\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport var singleClick = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport var doubleClick = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport var noModifierKeys = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (!originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        !originalEvent.shiftKey);\n};\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport var platformModifierKeyOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (!originalEvent.altKey &&\n        (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n        !originalEvent.shiftKey);\n};\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport var shiftKeyOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (!originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        originalEvent.shiftKey);\n};\n/**\n * Return `true` if the target element is not editable, i.e. not a `<input>`-,\n * `<select>`- or `<textarea>`-element, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport var targetNotEditable = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    var tagName = /** @type {Element} */ (originalEvent.target).tagName;\n    return tagName !== 'INPUT' && tagName !== 'SELECT' && tagName !== 'TEXTAREA';\n};\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport var mouseOnly = function (mapBrowserEvent) {\n    var pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (mapBrowserEvent)\n        .originalEvent;\n    assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n    return pointerEvent.pointerType == 'mouse';\n};\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport var touchOnly = function (mapBrowserEvent) {\n    var pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (mapBrowserEvent)\n        .originalEvent;\n    assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n    return pointerEvt.pointerType === 'touch';\n};\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport var penOnly = function (mapBrowserEvent) {\n    var pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (mapBrowserEvent)\n        .originalEvent;\n    assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n    return pointerEvt.pointerType === 'pen';\n};\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See http://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport var primaryAction = function (mapBrowserEvent) {\n    var pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (mapBrowserEvent)\n        .originalEvent;\n    assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n//# sourceMappingURL=condition.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, { centroid as centroidFromPointers, } from './Pointer.js';\nimport { FALSE } from '../functions.js';\nimport { all, focusWithTabindex, noModifierKeys, primaryAction, } from '../events/condition.js';\nimport { easeOut } from '../easing.js';\nimport { rotate as rotateCoordinate, scale as scaleCoordinate, } from '../coordinate.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~noModifierKeys} and {@link module:ol/events/condition~primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nvar DragPan = /** @class */ (function (_super) {\n    __extends(DragPan, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragPan(opt_options) {\n        var _this = _super.call(this, {\n            stopDown: FALSE,\n        }) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         * @type {import(\"../Kinetic.js\").default|undefined}\n         */\n        _this.kinetic_ = options.kinetic;\n        /**\n         * @type {import(\"../pixel.js\").Pixel}\n         */\n        _this.lastCentroid = null;\n        /**\n         * @type {number}\n         */\n        _this.lastPointersCount_;\n        /**\n         * @type {boolean}\n         */\n        _this.panning_ = false;\n        var condition = options.condition\n            ? options.condition\n            : all(noModifierKeys, primaryAction);\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.onFocusOnly\n            ? all(focusWithTabindex, condition)\n            : condition;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.noKinetic_ = false;\n        return _this;\n    }\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     */\n    DragPan.prototype.handleDragEvent = function (mapBrowserEvent) {\n        if (!this.panning_) {\n            this.panning_ = true;\n            this.getMap().getView().beginInteraction();\n        }\n        var targetPointers = this.targetPointers;\n        var centroid = centroidFromPointers(targetPointers);\n        if (targetPointers.length == this.lastPointersCount_) {\n            if (this.kinetic_) {\n                this.kinetic_.update(centroid[0], centroid[1]);\n            }\n            if (this.lastCentroid) {\n                var delta = [\n                    this.lastCentroid[0] - centroid[0],\n                    centroid[1] - this.lastCentroid[1],\n                ];\n                var map = mapBrowserEvent.map;\n                var view = map.getView();\n                scaleCoordinate(delta, view.getResolution());\n                rotateCoordinate(delta, view.getRotation());\n                view.adjustCenterInternal(delta);\n            }\n        }\n        else if (this.kinetic_) {\n            // reset so we don't overestimate the kinetic energy after\n            // after one finger down, tiny drag, second finger down\n            this.kinetic_.begin();\n        }\n        this.lastCentroid = centroid;\n        this.lastPointersCount_ = targetPointers.length;\n        mapBrowserEvent.originalEvent.preventDefault();\n    };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    DragPan.prototype.handleUpEvent = function (mapBrowserEvent) {\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (this.targetPointers.length === 0) {\n            if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n                var distance = this.kinetic_.getDistance();\n                var angle = this.kinetic_.getAngle();\n                var center = view.getCenterInternal();\n                var centerpx = map.getPixelFromCoordinateInternal(center);\n                var dest = map.getCoordinateFromPixelInternal([\n                    centerpx[0] - distance * Math.cos(angle),\n                    centerpx[1] - distance * Math.sin(angle),\n                ]);\n                view.animateInternal({\n                    center: view.getConstrainedCenter(dest),\n                    duration: 500,\n                    easing: easeOut,\n                });\n            }\n            if (this.panning_) {\n                this.panning_ = false;\n                view.endInteraction();\n            }\n            return false;\n        }\n        else {\n            if (this.kinetic_) {\n                // reset so we don't overestimate the kinetic energy after\n                // after one finger up, tiny drag, second finger up\n                this.kinetic_.begin();\n            }\n            this.lastCentroid = null;\n            return true;\n        }\n    };\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    DragPan.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n            var map = mapBrowserEvent.map;\n            var view = map.getView();\n            this.lastCentroid = null;\n            // stop any current animation\n            if (view.getAnimating()) {\n                view.cancelAnimations();\n            }\n            if (this.kinetic_) {\n                this.kinetic_.begin();\n            }\n            // No kinetic as soon as more than one pointer on the screen is\n            // detected. This is to prevent nasty pans after pinch.\n            this.noKinetic_ = this.targetPointers.length > 1;\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return DragPan;\n}(PointerInteraction));\nexport default DragPan;\n//# sourceMappingURL=DragPan.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport { FALSE } from '../functions.js';\nimport { altShiftKeysOnly, mouseActionButton, mouseOnly, } from '../events/condition.js';\nimport { disable } from '../rotationconstraint.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nvar DragRotate = /** @class */ (function (_super) {\n    __extends(DragRotate, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragRotate(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            stopDown: FALSE,\n        }) || this;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.lastAngle_ = undefined;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     */\n    DragRotate.prototype.handleDragEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return;\n        }\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (view.getConstraints().rotation === disable) {\n            return;\n        }\n        var size = map.getSize();\n        var offset = mapBrowserEvent.pixel;\n        var theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n        if (this.lastAngle_ !== undefined) {\n            var delta = theta - this.lastAngle_;\n            view.adjustRotationInternal(-delta);\n        }\n        this.lastAngle_ = theta;\n    };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    DragRotate.prototype.handleUpEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return true;\n        }\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        view.endInteraction(this.duration_);\n        return false;\n    };\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    DragRotate.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return false;\n        }\n        if (mouseActionButton(mapBrowserEvent) &&\n            this.condition_(mapBrowserEvent)) {\n            var map = mapBrowserEvent.map;\n            map.getView().beginInteraction();\n            this.lastAngle_ = undefined;\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return DragRotate;\n}(PointerInteraction));\nexport default DragRotate;\n//# sourceMappingURL=DragRotate.js.map","/**\n * @module ol/render/Box\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\nvar RenderBox = /** @class */ (function (_super) {\n    __extends(RenderBox, _super);\n    /**\n     * @param {string} className CSS class name.\n     */\n    function RenderBox(className) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {import(\"../geom/Polygon.js\").default}\n         * @private\n         */\n        _this.geometry_ = null;\n        /**\n         * @type {HTMLDivElement}\n         * @private\n         */\n        _this.element_ = document.createElement('div');\n        _this.element_.style.position = 'absolute';\n        _this.element_.style.pointerEvents = 'auto';\n        _this.element_.className = 'ol-box ' + className;\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = null;\n        /**\n         * @private\n         * @type {import(\"../pixel.js\").Pixel}\n         */\n        _this.startPixel_ = null;\n        /**\n         * @private\n         * @type {import(\"../pixel.js\").Pixel}\n         */\n        _this.endPixel_ = null;\n        return _this;\n    }\n    /**\n     * Clean up.\n     */\n    RenderBox.prototype.disposeInternal = function () {\n        this.setMap(null);\n    };\n    /**\n     * @private\n     */\n    RenderBox.prototype.render_ = function () {\n        var startPixel = this.startPixel_;\n        var endPixel = this.endPixel_;\n        var px = 'px';\n        var style = this.element_.style;\n        style.left = Math.min(startPixel[0], endPixel[0]) + px;\n        style.top = Math.min(startPixel[1], endPixel[1]) + px;\n        style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n        style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n    };\n    /**\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    RenderBox.prototype.setMap = function (map) {\n        if (this.map_) {\n            this.map_.getOverlayContainer().removeChild(this.element_);\n            var style = this.element_.style;\n            style.left = 'inherit';\n            style.top = 'inherit';\n            style.width = 'inherit';\n            style.height = 'inherit';\n        }\n        this.map_ = map;\n        if (this.map_) {\n            this.map_.getOverlayContainer().appendChild(this.element_);\n        }\n    };\n    /**\n     * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n     * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n     */\n    RenderBox.prototype.setPixels = function (startPixel, endPixel) {\n        this.startPixel_ = startPixel;\n        this.endPixel_ = endPixel;\n        this.createOrUpdateGeometry();\n        this.render_();\n    };\n    /**\n     * Creates or updates the cached geometry.\n     */\n    RenderBox.prototype.createOrUpdateGeometry = function () {\n        var startPixel = this.startPixel_;\n        var endPixel = this.endPixel_;\n        var pixels = [\n            startPixel,\n            [startPixel[0], endPixel[1]],\n            endPixel,\n            [endPixel[0], startPixel[1]],\n        ];\n        var coordinates = pixels.map(this.map_.getCoordinateFromPixelInternal, this.map_);\n        // close the polygon\n        coordinates[4] = coordinates[0].slice();\n        if (!this.geometry_) {\n            this.geometry_ = new Polygon([coordinates]);\n        }\n        else {\n            this.geometry_.setCoordinates([coordinates]);\n        }\n    };\n    /**\n     * @return {import(\"../geom/Polygon.js\").default} Geometry.\n     */\n    RenderBox.prototype.getGeometry = function () {\n        return this.geometry_;\n    };\n    return RenderBox;\n}(Disposable));\nexport default RenderBox;\n//# sourceMappingURL=Box.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport { mouseActionButton } from '../events/condition.js';\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n/**\n * @enum {string}\n */\nvar DragBoxEventType = {\n    /**\n     * Triggered upon drag box start.\n     * @event DragBoxEvent#boxstart\n     * @api\n     */\n    BOXSTART: 'boxstart',\n    /**\n     * Triggered on drag when box is active.\n     * @event DragBoxEvent#boxdrag\n     * @api\n     */\n    BOXDRAG: 'boxdrag',\n    /**\n     * Triggered upon drag box end.\n     * @event DragBoxEvent#boxend\n     * @api\n     */\n    BOXEND: 'boxend',\n    /**\n     * Triggered upon drag box canceled.\n     * @event DragBoxEvent#boxcancel\n     * @api\n     */\n    BOXCANCEL: 'boxcancel',\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nvar DragBoxEvent = /** @class */ (function (_super) {\n    __extends(DragBoxEvent, _super);\n    /**\n     * @param {string} type The event type.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n     */\n    function DragBoxEvent(type, coordinate, mapBrowserEvent) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The coordinate of the drag event.\n         * @const\n         * @type {import(\"../coordinate.js\").Coordinate}\n         * @api\n         */\n        _this.coordinate = coordinate;\n        /**\n         * @const\n         * @type {import(\"../MapBrowserEvent.js\").default}\n         * @api\n         */\n        _this.mapBrowserEvent = mapBrowserEvent;\n        return _this;\n    }\n    return DragBoxEvent;\n}(Event));\nexport { DragBoxEvent };\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nvar DragBox = /** @class */ (function (_super) {\n    __extends(DragBox, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragBox(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @type {import(\"../render/Box.js\").default}\n         * @private\n         */\n        _this.box_ = new RenderBox(options.className || 'ol-dragbox');\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n        if (options.onBoxEnd) {\n            _this.onBoxEnd = options.onBoxEnd;\n        }\n        /**\n         * @type {import(\"../pixel.js\").Pixel}\n         * @private\n         */\n        _this.startPixel_ = null;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : mouseActionButton;\n        /**\n         * @private\n         * @type {EndCondition}\n         */\n        _this.boxEndCondition_ = options.boxEndCondition\n            ? options.boxEndCondition\n            : _this.defaultBoxEndCondition;\n        return _this;\n    }\n    /**\n     * The default condition for determining whether the boxend event\n     * should fire.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n     *     leading to the box end.\n     * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n     * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n     * @return {boolean} Whether or not the boxend condition should be fired.\n     */\n    DragBox.prototype.defaultBoxEndCondition = function (mapBrowserEvent, startPixel, endPixel) {\n        var width = endPixel[0] - startPixel[0];\n        var height = endPixel[1] - startPixel[1];\n        return width * width + height * height >= this.minArea_;\n    };\n    /**\n     * Returns geometry of last drawn box.\n     * @return {import(\"../geom/Polygon.js\").default} Geometry.\n     * @api\n     */\n    DragBox.prototype.getGeometry = function () {\n        return this.box_.getGeometry();\n    };\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     */\n    DragBox.prototype.handleDragEvent = function (mapBrowserEvent) {\n        this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n        this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXDRAG, mapBrowserEvent.coordinate, mapBrowserEvent));\n    };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    DragBox.prototype.handleUpEvent = function (mapBrowserEvent) {\n        this.box_.setMap(null);\n        var completeBox = this.boxEndCondition_(mapBrowserEvent, this.startPixel_, mapBrowserEvent.pixel);\n        if (completeBox) {\n            this.onBoxEnd(mapBrowserEvent);\n        }\n        this.dispatchEvent(new DragBoxEvent(completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL, mapBrowserEvent.coordinate, mapBrowserEvent));\n        return false;\n    };\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    DragBox.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (this.condition_(mapBrowserEvent)) {\n            this.startPixel_ = mapBrowserEvent.pixel;\n            this.box_.setMap(mapBrowserEvent.map);\n            this.box_.setPixels(this.startPixel_, this.startPixel_);\n            this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXSTART, mapBrowserEvent.coordinate, mapBrowserEvent));\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * Function to execute just before `onboxend` is fired\n     * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n     */\n    DragBox.prototype.onBoxEnd = function (event) { };\n    return DragBox;\n}(PointerInteraction));\nexport default DragBox;\n//# sourceMappingURL=DragBox.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport { createOrUpdateFromCoordinates, getBottomLeft, getCenter, getTopRight, scaleFromCenter, } from '../extent.js';\nimport { easeOut } from '../easing.js';\nimport { shiftKeyOnly } from '../events/condition.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nvar DragZoom = /** @class */ (function (_super) {\n    __extends(DragZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragZoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var condition = options.condition ? options.condition : shiftKeyOnly;\n        _this = _super.call(this, {\n            condition: condition,\n            className: options.className || 'ol-dragzoom',\n            minArea: options.minArea,\n        }) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 200;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.out_ = options.out !== undefined ? options.out : false;\n        return _this;\n    }\n    /**\n     * Function to execute just before `onboxend` is fired\n     * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n     */\n    DragZoom.prototype.onBoxEnd = function (event) {\n        var map = this.getMap();\n        var view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n        var size = /** @type {!import(\"../size.js\").Size} */ (map.getSize());\n        var extent = this.getGeometry().getExtent();\n        if (this.out_) {\n            var mapExtent = view.calculateExtentInternal(size);\n            var boxPixelExtent = createOrUpdateFromCoordinates([\n                map.getPixelFromCoordinateInternal(getBottomLeft(extent)),\n                map.getPixelFromCoordinateInternal(getTopRight(extent)),\n            ]);\n            var factor = view.getResolutionForExtentInternal(boxPixelExtent, size);\n            scaleFromCenter(mapExtent, 1 / factor);\n            extent = mapExtent;\n        }\n        var resolution = view.getConstrainedResolution(view.getResolutionForExtentInternal(extent, size));\n        var center = view.getConstrainedCenter(getCenter(extent), resolution);\n        view.animateInternal({\n            resolution: resolution,\n            center: center,\n            duration: this.duration_,\n            easing: easeOut,\n        });\n    };\n    return DragZoom;\n}(DragBox));\nexport default DragZoom;\n//# sourceMappingURL=DragZoom.js.map","/**\n * @module ol/events/KeyCode\n */\n/**\n * @enum {number}\n * @const\n */\nexport default {\n    LEFT: 37,\n    UP: 38,\n    RIGHT: 39,\n    DOWN: 40,\n};\n//# sourceMappingURL=KeyCode.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, { pan } from './Interaction.js';\nimport KeyCode from '../events/KeyCode.js';\nimport { noModifierKeys, targetNotEditable } from '../events/condition.js';\nimport { rotate as rotateCoordinate } from '../coordinate.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~noModifierKeys} and\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nvar KeyboardPan = /** @class */ (function (_super) {\n    __extends(KeyboardPan, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function KeyboardPan(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options || {};\n        /**\n         * @private\n         * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n         * @return {boolean} Combined condition result.\n         */\n        _this.defaultCondition_ = function (mapBrowserEvent) {\n            return (noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent));\n        };\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ =\n            options.condition !== undefined\n                ? options.condition\n                : _this.defaultCondition_;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 100;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelDelta_ =\n            options.pixelDelta !== undefined ? options.pixelDelta : 128;\n        return _this;\n    }\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n     * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n     * pressed).\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     * @this {KeyboardPan}\n     */\n    KeyboardPan.prototype.handleEvent = function (mapBrowserEvent) {\n        var stopEvent = false;\n        if (mapBrowserEvent.type == EventType.KEYDOWN) {\n            var keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n            var keyCode = keyEvent.keyCode;\n            if (this.condition_(mapBrowserEvent) &&\n                (keyCode == KeyCode.DOWN ||\n                    keyCode == KeyCode.LEFT ||\n                    keyCode == KeyCode.RIGHT ||\n                    keyCode == KeyCode.UP)) {\n                var map = mapBrowserEvent.map;\n                var view = map.getView();\n                var mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n                var deltaX = 0, deltaY = 0;\n                if (keyCode == KeyCode.DOWN) {\n                    deltaY = -mapUnitsDelta;\n                }\n                else if (keyCode == KeyCode.LEFT) {\n                    deltaX = -mapUnitsDelta;\n                }\n                else if (keyCode == KeyCode.RIGHT) {\n                    deltaX = mapUnitsDelta;\n                }\n                else {\n                    deltaY = mapUnitsDelta;\n                }\n                var delta = [deltaX, deltaY];\n                rotateCoordinate(delta, view.getRotation());\n                pan(view, delta, this.duration_);\n                keyEvent.preventDefault();\n                stopEvent = true;\n            }\n        }\n        return !stopEvent;\n    };\n    return KeyboardPan;\n}(Interaction));\nexport default KeyboardPan;\n//# sourceMappingURL=KeyboardPan.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, { zoomByDelta } from './Interaction.js';\nimport { targetNotEditable } from '../events/condition.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nvar KeyboardZoom = /** @class */ (function (_super) {\n    __extends(KeyboardZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function KeyboardZoom(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : targetNotEditable;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.delta_ = options.delta ? options.delta : 1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 100;\n        return _this;\n    }\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n     * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n     * key pressed was '+' or '-').\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     * @this {KeyboardZoom}\n     */\n    KeyboardZoom.prototype.handleEvent = function (mapBrowserEvent) {\n        var stopEvent = false;\n        if (mapBrowserEvent.type == EventType.KEYDOWN ||\n            mapBrowserEvent.type == EventType.KEYPRESS) {\n            var keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n            var charCode = keyEvent.charCode;\n            if (this.condition_(mapBrowserEvent) &&\n                (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))) {\n                var map = mapBrowserEvent.map;\n                var delta = charCode == '+'.charCodeAt(0) ? this.delta_ : -this.delta_;\n                var view = map.getView();\n                zoomByDelta(view, delta, undefined, this.duration_);\n                keyEvent.preventDefault();\n                stopEvent = true;\n            }\n        }\n        return !stopEvent;\n    };\n    return KeyboardZoom;\n}(Interaction));\nexport default KeyboardZoom;\n//# sourceMappingURL=KeyboardZoom.js.map","/**\n * @module ol/Kinetic\n */\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nvar Kinetic = /** @class */ (function () {\n    /**\n     * @param {number} decay Rate of decay (must be negative).\n     * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n     * @param {number} delay Delay to consider to calculate the kinetic\n     *     initial values (milliseconds).\n     */\n    function Kinetic(decay, minVelocity, delay) {\n        /**\n         * @private\n         * @type {number}\n         */\n        this.decay_ = decay;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.minVelocity_ = minVelocity;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.delay_ = delay;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.points_ = [];\n        /**\n         * @private\n         * @type {number}\n         */\n        this.angle_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.initialVelocity_ = 0;\n    }\n    /**\n     * FIXME empty description for jsdoc\n     */\n    Kinetic.prototype.begin = function () {\n        this.points_.length = 0;\n        this.angle_ = 0;\n        this.initialVelocity_ = 0;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     */\n    Kinetic.prototype.update = function (x, y) {\n        this.points_.push(x, y, Date.now());\n    };\n    /**\n     * @return {boolean} Whether we should do kinetic animation.\n     */\n    Kinetic.prototype.end = function () {\n        if (this.points_.length < 6) {\n            // at least 2 points are required (i.e. there must be at least 6 elements\n            // in the array)\n            return false;\n        }\n        var delay = Date.now() - this.delay_;\n        var lastIndex = this.points_.length - 3;\n        if (this.points_[lastIndex + 2] < delay) {\n            // the last tracked point is too old, which means that the user stopped\n            // panning before releasing the map\n            return false;\n        }\n        // get the first point which still falls into the delay time\n        var firstIndex = lastIndex - 3;\n        while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n            firstIndex -= 3;\n        }\n        var duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n        // we don't want a duration of 0 (divide by zero)\n        // we also make sure the user panned for a duration of at least one frame\n        // (1/60s) to compute sane displacement values\n        if (duration < 1000 / 60) {\n            return false;\n        }\n        var dx = this.points_[lastIndex] - this.points_[firstIndex];\n        var dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n        this.angle_ = Math.atan2(dy, dx);\n        this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n        return this.initialVelocity_ > this.minVelocity_;\n    };\n    /**\n     * @return {number} Total distance travelled (pixels).\n     */\n    Kinetic.prototype.getDistance = function () {\n        return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n    };\n    /**\n     * @return {number} Angle of the kinetic panning animation (radians).\n     */\n    Kinetic.prototype.getAngle = function () {\n        return this.angle_;\n    };\n    return Kinetic;\n}());\nexport default Kinetic;\n//# sourceMappingURL=Kinetic.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, { zoomByDelta } from './Interaction.js';\nimport { DEVICE_PIXEL_RATIO, FIREFOX } from '../has.js';\nimport { all, always, focusWithTabindex } from '../events/condition.js';\nimport { clamp } from '../math.js';\n/**\n * @enum {string}\n */\nexport var Mode = {\n    TRACKPAD: 'trackpad',\n    WHEEL: 'wheel',\n};\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nvar MouseWheelZoom = /** @class */ (function (_super) {\n    __extends(MouseWheelZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function MouseWheelZoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, \n        /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.totalDelta_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.lastDelta_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.useAnchor_ =\n            options.useAnchor !== undefined ? options.useAnchor : true;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.constrainResolution_ =\n            options.constrainResolution !== undefined\n                ? options.constrainResolution\n                : false;\n        var condition = options.condition ? options.condition : always;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.onFocusOnly\n            ? all(focusWithTabindex, condition)\n            : condition;\n        /**\n         * @private\n         * @type {?import(\"../coordinate.js\").Coordinate}\n         */\n        _this.lastAnchor_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.startTime_ = undefined;\n        /**\n         * @private\n         * @type {?}\n         */\n        _this.timeoutId_;\n        /**\n         * @private\n         * @type {Mode|undefined}\n         */\n        _this.mode_ = undefined;\n        /**\n         * Trackpad events separated by this delay will be considered separate\n         * interactions.\n         * @type {number}\n         */\n        _this.trackpadEventGap_ = 400;\n        /**\n         * @type {?}\n         */\n        _this.trackpadTimeoutId_;\n        /**\n         * The number of delta values per zoom level\n         * @private\n         * @type {number}\n         */\n        _this.deltaPerZoom_ = 300;\n        return _this;\n    }\n    /**\n     * @private\n     */\n    MouseWheelZoom.prototype.endInteraction_ = function () {\n        this.trackpadTimeoutId_ = undefined;\n        var view = this.getMap().getView();\n        view.endInteraction(undefined, this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0, this.lastAnchor_);\n    };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n     * zooms the map.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     */\n    MouseWheelZoom.prototype.handleEvent = function (mapBrowserEvent) {\n        if (!this.condition_(mapBrowserEvent)) {\n            return true;\n        }\n        var type = mapBrowserEvent.type;\n        if (type !== EventType.WHEEL) {\n            return true;\n        }\n        var map = mapBrowserEvent.map;\n        var wheelEvent = /** @type {WheelEvent} */ (mapBrowserEvent.originalEvent);\n        wheelEvent.preventDefault();\n        if (this.useAnchor_) {\n            this.lastAnchor_ = mapBrowserEvent.coordinate;\n        }\n        // Delta normalisation inspired by\n        // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n        var delta;\n        if (mapBrowserEvent.type == EventType.WHEEL) {\n            delta = wheelEvent.deltaY;\n            if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n                delta /= DEVICE_PIXEL_RATIO;\n            }\n            if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n                delta *= 40;\n            }\n        }\n        if (delta === 0) {\n            return false;\n        }\n        else {\n            this.lastDelta_ = delta;\n        }\n        var now = Date.now();\n        if (this.startTime_ === undefined) {\n            this.startTime_ = now;\n        }\n        if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n            this.mode_ = Math.abs(delta) < 4 ? Mode.TRACKPAD : Mode.WHEEL;\n        }\n        var view = map.getView();\n        if (this.mode_ === Mode.TRACKPAD &&\n            !(view.getConstrainResolution() || this.constrainResolution_)) {\n            if (this.trackpadTimeoutId_) {\n                clearTimeout(this.trackpadTimeoutId_);\n            }\n            else {\n                if (view.getAnimating()) {\n                    view.cancelAnimations();\n                }\n                view.beginInteraction();\n            }\n            this.trackpadTimeoutId_ = setTimeout(this.endInteraction_.bind(this), this.timeout_);\n            view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n            this.startTime_ = now;\n            return false;\n        }\n        this.totalDelta_ += delta;\n        var timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n        clearTimeout(this.timeoutId_);\n        this.timeoutId_ = setTimeout(this.handleWheelZoom_.bind(this, map), timeLeft);\n        return false;\n    };\n    /**\n     * @private\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    MouseWheelZoom.prototype.handleWheelZoom_ = function (map) {\n        var view = map.getView();\n        if (view.getAnimating()) {\n            view.cancelAnimations();\n        }\n        var delta = -clamp(this.totalDelta_, -this.maxDelta_ * this.deltaPerZoom_, this.maxDelta_ * this.deltaPerZoom_) / this.deltaPerZoom_;\n        if (view.getConstrainResolution() || this.constrainResolution_) {\n            // view has a zoom constraint, zoom by 1\n            delta = delta ? (delta > 0 ? 1 : -1) : 0;\n        }\n        zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n        this.mode_ = undefined;\n        this.totalDelta_ = 0;\n        this.lastAnchor_ = null;\n        this.startTime_ = undefined;\n        this.timeoutId_ = undefined;\n    };\n    /**\n     * Enable or disable using the mouse's location as an anchor when zooming\n     * @param {boolean} useAnchor true to zoom to the mouse's location, false\n     * to zoom to the center of the map\n     * @api\n     */\n    MouseWheelZoom.prototype.setMouseAnchor = function (useAnchor) {\n        this.useAnchor_ = useAnchor;\n        if (!useAnchor) {\n            this.lastAnchor_ = null;\n        }\n    };\n    return MouseWheelZoom;\n}(Interaction));\nexport default MouseWheelZoom;\n//# sourceMappingURL=MouseWheelZoom.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, { centroid as centroidFromPointers, } from './Pointer.js';\nimport { FALSE } from '../functions.js';\nimport { disable } from '../rotationconstraint.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nvar PinchRotate = /** @class */ (function (_super) {\n    __extends(PinchRotate, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function PinchRotate(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n        if (!pointerOptions.stopDown) {\n            pointerOptions.stopDown = FALSE;\n        }\n        _this = _super.call(this, pointerOptions) || this;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.anchor_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.lastAngle_ = undefined;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.rotating_ = false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.rotationDelta_ = 0.0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     */\n    PinchRotate.prototype.handleDragEvent = function (mapBrowserEvent) {\n        var rotationDelta = 0.0;\n        var touch0 = this.targetPointers[0];\n        var touch1 = this.targetPointers[1];\n        // angle between touches\n        var angle = Math.atan2(touch1.clientY - touch0.clientY, touch1.clientX - touch0.clientX);\n        if (this.lastAngle_ !== undefined) {\n            var delta = angle - this.lastAngle_;\n            this.rotationDelta_ += delta;\n            if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n                this.rotating_ = true;\n            }\n            rotationDelta = delta;\n        }\n        this.lastAngle_ = angle;\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (view.getConstraints().rotation === disable) {\n            return;\n        }\n        // rotate anchor point.\n        // FIXME: should be the intersection point between the lines:\n        //     touch0,touch1 and previousTouch0,previousTouch1\n        var viewportPosition = map.getViewport().getBoundingClientRect();\n        var centroid = centroidFromPointers(this.targetPointers);\n        centroid[0] -= viewportPosition.left;\n        centroid[1] -= viewportPosition.top;\n        this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n        // rotate\n        if (this.rotating_) {\n            map.render();\n            view.adjustRotationInternal(rotationDelta, this.anchor_);\n        }\n    };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    PinchRotate.prototype.handleUpEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length < 2) {\n            var map = mapBrowserEvent.map;\n            var view = map.getView();\n            view.endInteraction(this.duration_);\n            return false;\n        }\n        else {\n            return true;\n        }\n    };\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    PinchRotate.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length >= 2) {\n            var map = mapBrowserEvent.map;\n            this.anchor_ = null;\n            this.lastAngle_ = undefined;\n            this.rotating_ = false;\n            this.rotationDelta_ = 0.0;\n            if (!this.handlingDownUpSequence) {\n                map.getView().beginInteraction();\n            }\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return PinchRotate;\n}(PointerInteraction));\nexport default PinchRotate;\n//# sourceMappingURL=PinchRotate.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, { centroid as centroidFromPointers, } from './Pointer.js';\nimport { FALSE } from '../functions.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nvar PinchZoom = /** @class */ (function (_super) {\n    __extends(PinchZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function PinchZoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n        if (!pointerOptions.stopDown) {\n            pointerOptions.stopDown = FALSE;\n        }\n        _this = _super.call(this, pointerOptions) || this;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.anchor_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 400;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.lastDistance_ = undefined;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.lastScaleDelta_ = 1;\n        return _this;\n    }\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     */\n    PinchZoom.prototype.handleDragEvent = function (mapBrowserEvent) {\n        var scaleDelta = 1.0;\n        var touch0 = this.targetPointers[0];\n        var touch1 = this.targetPointers[1];\n        var dx = touch0.clientX - touch1.clientX;\n        var dy = touch0.clientY - touch1.clientY;\n        // distance between touches\n        var distance = Math.sqrt(dx * dx + dy * dy);\n        if (this.lastDistance_ !== undefined) {\n            scaleDelta = this.lastDistance_ / distance;\n        }\n        this.lastDistance_ = distance;\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (scaleDelta != 1.0) {\n            this.lastScaleDelta_ = scaleDelta;\n        }\n        // scale anchor point.\n        var viewportPosition = map.getViewport().getBoundingClientRect();\n        var centroid = centroidFromPointers(this.targetPointers);\n        centroid[0] -= viewportPosition.left;\n        centroid[1] -= viewportPosition.top;\n        this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n        // scale, bypass the resolution constraint\n        map.render();\n        view.adjustResolutionInternal(scaleDelta, this.anchor_);\n    };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    PinchZoom.prototype.handleUpEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length < 2) {\n            var map = mapBrowserEvent.map;\n            var view = map.getView();\n            var direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n            view.endInteraction(this.duration_, direction);\n            return false;\n        }\n        else {\n            return true;\n        }\n    };\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    PinchZoom.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length >= 2) {\n            var map = mapBrowserEvent.map;\n            this.anchor_ = null;\n            this.lastDistance_ = undefined;\n            this.lastScaleDelta_ = 1;\n            if (!this.handlingDownUpSequence) {\n                map.getView().beginInteraction();\n            }\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return PinchZoom;\n}(PointerInteraction));\nexport default PinchZoom;\n//# sourceMappingURL=PinchZoom.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Map\n */\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport PluggableMap from './PluggableMap.js';\nimport { assign } from './obj.js';\nimport { defaults as defaultControls } from './control.js';\nimport { defaults as defaultInteractions } from './interaction.js';\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     var map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~Group}\n * is a subclass of {@link module:ol/layer/Base}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @api\n */\nvar Map = /** @class */ (function (_super) {\n    __extends(Map, _super);\n    /**\n     * @param {import(\"./PluggableMap.js\").MapOptions} options Map options.\n     */\n    function Map(options) {\n        var _this = this;\n        options = assign({}, options);\n        if (!options.controls) {\n            options.controls = defaultControls();\n        }\n        if (!options.interactions) {\n            options.interactions = defaultInteractions({\n                onFocusOnly: true,\n            });\n        }\n        _this = _super.call(this, options) || this;\n        return _this;\n    }\n    Map.prototype.createRenderer = function () {\n        return new CompositeMapRenderer(this);\n    };\n    return Map;\n}(PluggableMap));\nexport default Map;\n//# sourceMappingURL=Map.js.map","/**\n * @module ol/control\n */\nimport Attribution from './control/Attribution.js';\nimport Collection from './Collection.js';\nimport Rotate from './control/Rotate.js';\nimport Zoom from './control/Zoom.js';\nexport { default as Attribution } from './control/Attribution.js';\nexport { default as Control } from './control/Control.js';\nexport { default as FullScreen } from './control/FullScreen.js';\nexport { default as MousePosition } from './control/MousePosition.js';\nexport { default as OverviewMap } from './control/OverviewMap.js';\nexport { default as Rotate } from './control/Rotate.js';\nexport { default as ScaleLine } from './control/ScaleLine.js';\nexport { default as Zoom } from './control/Zoom.js';\nexport { default as ZoomSlider } from './control/ZoomSlider.js';\nexport { default as ZoomToExtent } from './control/ZoomToExtent.js';\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./control/Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./control/Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./control/Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n * @api\n */\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions=} opt_options\n * Defaults options.\n * @return {Collection<import(\"./control/Control.js\").default>}\n * Controls.\n * @api\n */\nexport function defaults(opt_options) {\n    var options = opt_options ? opt_options : {};\n    var controls = new Collection();\n    var zoomControl = options.zoom !== undefined ? options.zoom : true;\n    if (zoomControl) {\n        controls.push(new Zoom(options.zoomOptions));\n    }\n    var rotateControl = options.rotate !== undefined ? options.rotate : true;\n    if (rotateControl) {\n        controls.push(new Rotate(options.rotateOptions));\n    }\n    var attributionControl = options.attribution !== undefined ? options.attribution : true;\n    if (attributionControl) {\n        controls.push(new Attribution(options.attributionOptions));\n    }\n    return controls;\n}\n//# sourceMappingURL=control.js.map","/**\n * @module ol/interaction\n */\nimport Collection from './Collection.js';\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\nimport DragPan from './interaction/DragPan.js';\nimport DragRotate from './interaction/DragRotate.js';\nimport DragZoom from './interaction/DragZoom.js';\nimport KeyboardPan from './interaction/KeyboardPan.js';\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\nimport Kinetic from './Kinetic.js';\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\nimport PinchRotate from './interaction/PinchRotate.js';\nimport PinchZoom from './interaction/PinchZoom.js';\nexport { default as DoubleClickZoom } from './interaction/DoubleClickZoom.js';\nexport { default as DragAndDrop } from './interaction/DragAndDrop.js';\nexport { default as DragBox } from './interaction/DragBox.js';\nexport { default as DragPan } from './interaction/DragPan.js';\nexport { default as DragRotate } from './interaction/DragRotate.js';\nexport { default as DragRotateAndZoom } from './interaction/DragRotateAndZoom.js';\nexport { default as DragZoom } from './interaction/DragZoom.js';\nexport { default as Draw } from './interaction/Draw.js';\nexport { default as Extent } from './interaction/Extent.js';\nexport { default as Interaction } from './interaction/Interaction.js';\nexport { default as KeyboardPan } from './interaction/KeyboardPan.js';\nexport { default as KeyboardZoom } from './interaction/KeyboardZoom.js';\nexport { default as Modify } from './interaction/Modify.js';\nexport { default as MouseWheelZoom } from './interaction/MouseWheelZoom.js';\nexport { default as PinchRotate } from './interaction/PinchRotate.js';\nexport { default as PinchZoom } from './interaction/PinchZoom.js';\nexport { default as Pointer } from './interaction/Pointer.js';\nexport { default as Select } from './interaction/Select.js';\nexport { default as Snap } from './interaction/Snap.js';\nexport { default as Translate } from './interaction/Translate.js';\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction} instances and insert\n * them into a {@link module:ol/Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions=} opt_options Defaults options.\n * @return {import(\"./Collection.js\").default<import(\"./interaction/Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(opt_options) {\n    var options = opt_options ? opt_options : {};\n    var interactions = new Collection();\n    var kinetic = new Kinetic(-0.005, 0.05, 100);\n    var altShiftDragRotate = options.altShiftDragRotate !== undefined\n        ? options.altShiftDragRotate\n        : true;\n    if (altShiftDragRotate) {\n        interactions.push(new DragRotate());\n    }\n    var doubleClickZoom = options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n    if (doubleClickZoom) {\n        interactions.push(new DoubleClickZoom({\n            delta: options.zoomDelta,\n            duration: options.zoomDuration,\n        }));\n    }\n    var dragPan = options.dragPan !== undefined ? options.dragPan : true;\n    if (dragPan) {\n        interactions.push(new DragPan({\n            onFocusOnly: options.onFocusOnly,\n            kinetic: kinetic,\n        }));\n    }\n    var pinchRotate = options.pinchRotate !== undefined ? options.pinchRotate : true;\n    if (pinchRotate) {\n        interactions.push(new PinchRotate());\n    }\n    var pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n    if (pinchZoom) {\n        interactions.push(new PinchZoom({\n            duration: options.zoomDuration,\n        }));\n    }\n    var keyboard = options.keyboard !== undefined ? options.keyboard : true;\n    if (keyboard) {\n        interactions.push(new KeyboardPan());\n        interactions.push(new KeyboardZoom({\n            delta: options.zoomDelta,\n            duration: options.zoomDuration,\n        }));\n    }\n    var mouseWheelZoom = options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n    if (mouseWheelZoom) {\n        interactions.push(new MouseWheelZoom({\n            onFocusOnly: options.onFocusOnly,\n            duration: options.zoomDuration,\n        }));\n    }\n    var shiftDragZoom = options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n    if (shiftDragZoom) {\n        interactions.push(new DragZoom({\n            duration: options.zoomDuration,\n        }));\n    }\n    return interactions;\n}\n//# sourceMappingURL=interaction.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport { abstract } from './util.js';\nimport { easeIn } from './easing.js';\n/**\n * A function that takes an {@link module:ol/Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   var xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     var data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n/**\n * {@link module:ol/source/Tile~Tile} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @api\n */\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nvar Tile = /** @class */ (function (_super) {\n    __extends(Tile, _super);\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"./TileState.js\").default} state State.\n     * @param {Options=} opt_options Tile options.\n     */\n    function Tile(tileCoord, state, opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @type {import(\"./tilecoord.js\").TileCoord}\n         */\n        _this.tileCoord = tileCoord;\n        /**\n         * @protected\n         * @type {import(\"./TileState.js\").default}\n         */\n        _this.state = state;\n        /**\n         * An \"interim\" tile for this tile. The interim tile may be used while this\n         * one is loading, for \"smooth\" transitions when changing params/dimensions\n         * on the source.\n         * @type {Tile}\n         */\n        _this.interimTile = null;\n        /**\n         * The tile is available at the highest possible resolution. Subclasses can\n         * set this to `false` initially. Tile load listeners will not be\n         * unregistered before this is set to `true` and a `#changed()` is called.\n         * @type {boolean}\n         */\n        _this.hifi = true;\n        /**\n         * A key assigned to the tile. This is used by the tile source to determine\n         * if this tile can effectively be used, or if a new tile should be created\n         * and this one be used as an interim tile for this new tile.\n         * @type {string}\n         */\n        _this.key = '';\n        /**\n         * The duration for the opacity transition.\n         * @type {number}\n         */\n        _this.transition_ =\n            options.transition === undefined ? 250 : options.transition;\n        /**\n         * Lookup of start times for rendering transitions.  If the start time is\n         * equal to -1, the transition is complete.\n         * @type {Object<string, number>}\n         */\n        _this.transitionStarts_ = {};\n        return _this;\n    }\n    /**\n     * @protected\n     */\n    Tile.prototype.changed = function () {\n        this.dispatchEvent(EventType.CHANGE);\n    };\n    /**\n     * Called by the tile cache when the tile is removed from the cache due to expiry\n     */\n    Tile.prototype.release = function () { };\n    /**\n     * @return {string} Key.\n     */\n    Tile.prototype.getKey = function () {\n        return this.key + '/' + this.tileCoord;\n    };\n    /**\n     * Get the interim tile most suitable for rendering using the chain of interim\n     * tiles. This corresponds to the  most recent tile that has been loaded, if no\n     * such tile exists, the original tile is returned.\n     * @return {!Tile} Best tile for rendering.\n     */\n    Tile.prototype.getInterimTile = function () {\n        if (!this.interimTile) {\n            //empty chain\n            return this;\n        }\n        var tile = this.interimTile;\n        // find the first loaded tile and return it. Since the chain is sorted in\n        // decreasing order of creation time, there is no need to search the remainder\n        // of the list (all those tiles correspond to older requests and will be\n        // cleaned up by refreshInterimChain)\n        do {\n            if (tile.getState() == TileState.LOADED) {\n                // Show tile immediately instead of fading it in after loading, because\n                // the interim tile is in place already\n                this.transition_ = 0;\n                return tile;\n            }\n            tile = tile.interimTile;\n        } while (tile);\n        // we can not find a better tile\n        return this;\n    };\n    /**\n     * Goes through the chain of interim tiles and discards sections of the chain\n     * that are no longer relevant.\n     */\n    Tile.prototype.refreshInterimChain = function () {\n        if (!this.interimTile) {\n            return;\n        }\n        var tile = this.interimTile;\n        var prev = /** @type {Tile} */ (this);\n        do {\n            if (tile.getState() == TileState.LOADED) {\n                //we have a loaded tile, we can discard the rest of the list\n                //we would could abort any LOADING tile request\n                //older than this tile (i.e. any LOADING tile following this entry in the chain)\n                tile.interimTile = null;\n                break;\n            }\n            else if (tile.getState() == TileState.LOADING) {\n                //keep this LOADING tile any loaded tiles later in the chain are\n                //older than this tile, so we're still interested in the request\n                prev = tile;\n            }\n            else if (tile.getState() == TileState.IDLE) {\n                //the head of the list is the most current tile, we don't need\n                //to start any other requests for this chain\n                prev.interimTile = tile.interimTile;\n            }\n            else {\n                prev = tile;\n            }\n            tile = prev.interimTile;\n        } while (tile);\n    };\n    /**\n     * Get the tile coordinate for this tile.\n     * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n     * @api\n     */\n    Tile.prototype.getTileCoord = function () {\n        return this.tileCoord;\n    };\n    /**\n     * @return {import(\"./TileState.js\").default} State.\n     */\n    Tile.prototype.getState = function () {\n        return this.state;\n    };\n    /**\n     * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n     * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n     * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n     * the tile queue and will block other requests.\n     * @param {import(\"./TileState.js\").default} state State.\n     * @api\n     */\n    Tile.prototype.setState = function (state) {\n        if (this.state !== TileState.ERROR && this.state > state) {\n            throw new Error('Tile load sequence violation');\n        }\n        this.state = state;\n        this.changed();\n    };\n    /**\n     * Load the image or retry if loading previously failed.\n     * Loading is taken care of by the tile queue, and calling this method is\n     * only needed for preloading or for reloading in case of an error.\n     * @abstract\n     * @api\n     */\n    Tile.prototype.load = function () {\n        abstract();\n    };\n    /**\n     * Get the alpha value for rendering.\n     * @param {string} id An id for the renderer.\n     * @param {number} time The render frame time.\n     * @return {number} A number between 0 and 1.\n     */\n    Tile.prototype.getAlpha = function (id, time) {\n        if (!this.transition_) {\n            return 1;\n        }\n        var start = this.transitionStarts_[id];\n        if (!start) {\n            start = time;\n            this.transitionStarts_[id] = start;\n        }\n        else if (start === -1) {\n            return 1;\n        }\n        var delta = time - start + 1000 / 60; // avoid rendering at 0\n        if (delta >= this.transition_) {\n            return 1;\n        }\n        return easeIn(delta / this.transition_);\n    };\n    /**\n     * Determine if a tile is in an alpha transition.  A tile is considered in\n     * transition if tile.getAlpha() has not yet been called or has been called\n     * and returned 1.\n     * @param {string} id An id for the renderer.\n     * @return {boolean} The tile is in transition.\n     */\n    Tile.prototype.inTransition = function (id) {\n        if (!this.transition_) {\n            return false;\n        }\n        return this.transitionStarts_[id] !== -1;\n    };\n    /**\n     * Mark a transition as complete.\n     * @param {string} id An id for the renderer.\n     */\n    Tile.prototype.endTransition = function (id) {\n        if (this.transition_) {\n            this.transitionStarts_[id] = -1;\n        }\n    };\n    return Tile;\n}(EventTarget));\nexport default Tile;\n//# sourceMappingURL=Tile.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport { createCanvasContext2D } from './dom.js';\nimport { listenImage } from './Image.js';\nvar ImageTile = /** @class */ (function (_super) {\n    __extends(ImageTile, _super);\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"./TileState.js\").default} state State.\n     * @param {string} src Image source URI.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n     * @param {import(\"./Tile.js\").Options=} opt_options Tile options.\n     */\n    function ImageTile(tileCoord, state, src, crossOrigin, tileLoadFunction, opt_options) {\n        var _this = _super.call(this, tileCoord, state, opt_options) || this;\n        /**\n         * @private\n         * @type {?string}\n         */\n        _this.crossOrigin_ = crossOrigin;\n        /**\n         * Image URI\n         *\n         * @private\n         * @type {string}\n         */\n        _this.src_ = src;\n        _this.key = src;\n        /**\n         * @private\n         * @type {HTMLImageElement|HTMLCanvasElement}\n         */\n        _this.image_ = new Image();\n        if (crossOrigin !== null) {\n            _this.image_.crossOrigin = crossOrigin;\n        }\n        /**\n         * @private\n         * @type {?function():void}\n         */\n        _this.unlisten_ = null;\n        /**\n         * @private\n         * @type {import(\"./Tile.js\").LoadFunction}\n         */\n        _this.tileLoadFunction_ = tileLoadFunction;\n        return _this;\n    }\n    /**\n     * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n     * @api\n     */\n    ImageTile.prototype.getImage = function () {\n        return this.image_;\n    };\n    /**\n     * Tracks loading or read errors.\n     *\n     * @private\n     */\n    ImageTile.prototype.handleImageError_ = function () {\n        this.state = TileState.ERROR;\n        this.unlistenImage_();\n        this.image_ = getBlankImage();\n        this.changed();\n    };\n    /**\n     * Tracks successful image load.\n     *\n     * @private\n     */\n    ImageTile.prototype.handleImageLoad_ = function () {\n        var image = /** @type {HTMLImageElement} */ (this.image_);\n        if (image.naturalWidth && image.naturalHeight) {\n            this.state = TileState.LOADED;\n        }\n        else {\n            this.state = TileState.EMPTY;\n        }\n        this.unlistenImage_();\n        this.changed();\n    };\n    /**\n     * Load not yet loaded URI.\n     * @api\n     */\n    ImageTile.prototype.load = function () {\n        if (this.state == TileState.ERROR) {\n            this.state = TileState.IDLE;\n            this.image_ = new Image();\n            if (this.crossOrigin_ !== null) {\n                this.image_.crossOrigin = this.crossOrigin_;\n            }\n        }\n        if (this.state == TileState.IDLE) {\n            this.state = TileState.LOADING;\n            this.changed();\n            this.tileLoadFunction_(this, this.src_);\n            this.unlisten_ = listenImage(this.image_, this.handleImageLoad_.bind(this), this.handleImageError_.bind(this));\n        }\n    };\n    /**\n     * Discards event handlers which listen for load completion or errors.\n     *\n     * @private\n     */\n    ImageTile.prototype.unlistenImage_ = function () {\n        if (this.unlisten_) {\n            this.unlisten_();\n            this.unlisten_ = null;\n        }\n    };\n    return ImageTile;\n}(Tile));\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n    var ctx = createCanvasContext2D(1, 1);\n    ctx.fillStyle = 'rgba(0,0,0,0)';\n    ctx.fillRect(0, 0, 1, 1);\n    return ctx.canvas;\n}\nexport default ImageTile;\n//# sourceMappingURL=ImageTile.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/reproj/Tile\n */\nimport { ERROR_THRESHOLD } from './common.js';\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport { calculateSourceExtentResolution, render as renderReprojected, } from '../reproj.js';\nimport { clamp } from '../math.js';\nimport { getArea, getIntersection } from '../extent.js';\nimport { listen, unlistenByKey } from '../events.js';\n/**\n * @typedef {function(number, number, number, number) : import(\"../Tile.js\").default} FunctionType\n */\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nvar ReprojTile = /** @class */ (function (_super) {\n    __extends(ReprojTile, _super);\n    /**\n     * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n     * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n     * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n     * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n     * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {number} gutter Gutter of the source tiles.\n     * @param {FunctionType} getTileFunction\n     *     Function returning source tiles (z, x, y, pixelRatio).\n     * @param {number=} opt_errorThreshold Acceptable reprojection error (in px).\n     * @param {boolean=} opt_renderEdges Render reprojection edges.\n     * @param {object=} opt_contextOptions Properties to set on the canvas context.\n     */\n    function ReprojTile(sourceProj, sourceTileGrid, targetProj, targetTileGrid, tileCoord, wrappedTileCoord, pixelRatio, gutter, getTileFunction, opt_errorThreshold, opt_renderEdges, opt_contextOptions) {\n        var _this = _super.call(this, tileCoord, TileState.IDLE) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderEdges_ = opt_renderEdges !== undefined ? opt_renderEdges : false;\n        /**\n         * @private\n         * @type {object}\n         */\n        _this.contextOptions_ = opt_contextOptions;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ = pixelRatio;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.gutter_ = gutter;\n        /**\n         * @private\n         * @type {HTMLCanvasElement}\n         */\n        _this.canvas_ = null;\n        /**\n         * @private\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\n         */\n        _this.sourceTileGrid_ = sourceTileGrid;\n        /**\n         * @private\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\n         */\n        _this.targetTileGrid_ = targetTileGrid;\n        /**\n         * @private\n         * @type {import(\"../tilecoord.js\").TileCoord}\n         */\n        _this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n        /**\n         * @private\n         * @type {!Array<import(\"../Tile.js\").default>}\n         */\n        _this.sourceTiles_ = [];\n        /**\n         * @private\n         * @type {?Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.sourcesListenerKeys_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.sourceZ_ = 0;\n        var targetExtent = targetTileGrid.getTileCoordExtent(_this.wrappedTileCoord_);\n        var maxTargetExtent = _this.targetTileGrid_.getExtent();\n        var maxSourceExtent = _this.sourceTileGrid_.getExtent();\n        var limitedTargetExtent = maxTargetExtent\n            ? getIntersection(targetExtent, maxTargetExtent)\n            : targetExtent;\n        if (getArea(limitedTargetExtent) === 0) {\n            // Tile is completely outside range -> EMPTY\n            // TODO: is it actually correct that the source even creates the tile ?\n            _this.state = TileState.EMPTY;\n            return _this;\n        }\n        var sourceProjExtent = sourceProj.getExtent();\n        if (sourceProjExtent) {\n            if (!maxSourceExtent) {\n                maxSourceExtent = sourceProjExtent;\n            }\n            else {\n                maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n            }\n        }\n        var targetResolution = targetTileGrid.getResolution(_this.wrappedTileCoord_[0]);\n        var sourceResolution = calculateSourceExtentResolution(sourceProj, targetProj, limitedTargetExtent, targetResolution);\n        if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n            // invalid sourceResolution -> EMPTY\n            // probably edges of the projections when no extent is defined\n            _this.state = TileState.EMPTY;\n            return _this;\n        }\n        var errorThresholdInPixels = opt_errorThreshold !== undefined ? opt_errorThreshold : ERROR_THRESHOLD;\n        /**\n         * @private\n         * @type {!import(\"./Triangulation.js\").default}\n         */\n        _this.triangulation_ = new Triangulation(sourceProj, targetProj, limitedTargetExtent, maxSourceExtent, sourceResolution * errorThresholdInPixels, targetResolution);\n        if (_this.triangulation_.getTriangles().length === 0) {\n            // no valid triangles -> EMPTY\n            _this.state = TileState.EMPTY;\n            return _this;\n        }\n        _this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n        var sourceExtent = _this.triangulation_.calculateSourceExtent();\n        if (maxSourceExtent) {\n            if (sourceProj.canWrapX()) {\n                sourceExtent[1] = clamp(sourceExtent[1], maxSourceExtent[1], maxSourceExtent[3]);\n                sourceExtent[3] = clamp(sourceExtent[3], maxSourceExtent[1], maxSourceExtent[3]);\n            }\n            else {\n                sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n            }\n        }\n        if (!getArea(sourceExtent)) {\n            _this.state = TileState.EMPTY;\n        }\n        else {\n            var sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(sourceExtent, _this.sourceZ_);\n            for (var srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n                for (var srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n                    var tile = getTileFunction(_this.sourceZ_, srcX, srcY, pixelRatio);\n                    if (tile) {\n                        _this.sourceTiles_.push(tile);\n                    }\n                }\n            }\n            if (_this.sourceTiles_.length === 0) {\n                _this.state = TileState.EMPTY;\n            }\n        }\n        return _this;\n    }\n    /**\n     * Get the HTML Canvas element for this tile.\n     * @return {HTMLCanvasElement} Canvas.\n     */\n    ReprojTile.prototype.getImage = function () {\n        return this.canvas_;\n    };\n    /**\n     * @private\n     */\n    ReprojTile.prototype.reproject_ = function () {\n        var sources = [];\n        this.sourceTiles_.forEach(function (tile, i, arr) {\n            if (tile && tile.getState() == TileState.LOADED) {\n                sources.push({\n                    extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n                    image: tile.getImage(),\n                });\n            }\n        }.bind(this));\n        this.sourceTiles_.length = 0;\n        if (sources.length === 0) {\n            this.state = TileState.ERROR;\n        }\n        else {\n            var z = this.wrappedTileCoord_[0];\n            var size = this.targetTileGrid_.getTileSize(z);\n            var width = typeof size === 'number' ? size : size[0];\n            var height = typeof size === 'number' ? size : size[1];\n            var targetResolution = this.targetTileGrid_.getResolution(z);\n            var sourceResolution = this.sourceTileGrid_.getResolution(this.sourceZ_);\n            var targetExtent = this.targetTileGrid_.getTileCoordExtent(this.wrappedTileCoord_);\n            this.canvas_ = renderReprojected(width, height, this.pixelRatio_, sourceResolution, this.sourceTileGrid_.getExtent(), targetResolution, targetExtent, this.triangulation_, sources, this.gutter_, this.renderEdges_, this.contextOptions_);\n            this.state = TileState.LOADED;\n        }\n        this.changed();\n    };\n    /**\n     * Load not yet loaded URI.\n     */\n    ReprojTile.prototype.load = function () {\n        if (this.state == TileState.IDLE) {\n            this.state = TileState.LOADING;\n            this.changed();\n            var leftToLoad_1 = 0;\n            this.sourcesListenerKeys_ = [];\n            this.sourceTiles_.forEach(function (tile, i, arr) {\n                var state = tile.getState();\n                if (state == TileState.IDLE || state == TileState.LOADING) {\n                    leftToLoad_1++;\n                    var sourceListenKey_1 = listen(tile, EventType.CHANGE, function (e) {\n                        var state = tile.getState();\n                        if (state == TileState.LOADED ||\n                            state == TileState.ERROR ||\n                            state == TileState.EMPTY) {\n                            unlistenByKey(sourceListenKey_1);\n                            leftToLoad_1--;\n                            if (leftToLoad_1 === 0) {\n                                this.unlistenSources_();\n                                this.reproject_();\n                            }\n                        }\n                    }, this);\n                    this.sourcesListenerKeys_.push(sourceListenKey_1);\n                }\n            }.bind(this));\n            this.sourceTiles_.forEach(function (tile, i, arr) {\n                var state = tile.getState();\n                if (state == TileState.IDLE) {\n                    tile.load();\n                }\n            });\n            if (leftToLoad_1 === 0) {\n                setTimeout(this.reproject_.bind(this), 0);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    ReprojTile.prototype.unlistenSources_ = function () {\n        this.sourcesListenerKeys_.forEach(unlistenByKey);\n        this.sourcesListenerKeys_ = null;\n    };\n    return ReprojTile;\n}(Tile));\nexport default ReprojTile;\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/structs/LRUCache\n */\nimport { assert } from '../asserts.js';\n/**\n * @typedef {Object} Entry\n * @property {string} key_\n * @property {Object} newer\n * @property {Object} older\n * @property {*} value_\n */\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nvar LRUCache = /** @class */ (function () {\n    /**\n     * @param {number=} opt_highWaterMark High water mark.\n     */\n    function LRUCache(opt_highWaterMark) {\n        /**\n         * Desired max cache size after expireCache(). If set to 0, no cache entries\n         * will be pruned at all.\n         * @type {number}\n         */\n        this.highWaterMark =\n            opt_highWaterMark !== undefined ? opt_highWaterMark : 2048;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.count_ = 0;\n        /**\n         * @private\n         * @type {!Object<string, Entry>}\n         */\n        this.entries_ = {};\n        /**\n         * @private\n         * @type {?Entry}\n         */\n        this.oldest_ = null;\n        /**\n         * @private\n         * @type {?Entry}\n         */\n        this.newest_ = null;\n    }\n    /**\n     * @return {boolean} Can expire cache.\n     */\n    LRUCache.prototype.canExpireCache = function () {\n        return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n    };\n    /**\n     * FIXME empty description for jsdoc\n     */\n    LRUCache.prototype.clear = function () {\n        this.count_ = 0;\n        this.entries_ = {};\n        this.oldest_ = null;\n        this.newest_ = null;\n    };\n    /**\n     * @param {string} key Key.\n     * @return {boolean} Contains key.\n     */\n    LRUCache.prototype.containsKey = function (key) {\n        return this.entries_.hasOwnProperty(key);\n    };\n    /**\n     * @param {function(T, string, LRUCache<T>): ?} f The function\n     *     to call for every entry from the oldest to the newer. This function takes\n     *     3 arguments (the entry value, the entry key and the LRUCache object).\n     *     The return value is ignored.\n     */\n    LRUCache.prototype.forEach = function (f) {\n        var entry = this.oldest_;\n        while (entry) {\n            f(entry.value_, entry.key_, this);\n            entry = entry.newer;\n        }\n    };\n    /**\n     * @param {string} key Key.\n     * @param {*=} opt_options Options (reserverd for subclasses).\n     * @return {T} Value.\n     */\n    LRUCache.prototype.get = function (key, opt_options) {\n        var entry = this.entries_[key];\n        assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n        if (entry === this.newest_) {\n            return entry.value_;\n        }\n        else if (entry === this.oldest_) {\n            this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n            this.oldest_.older = null;\n        }\n        else {\n            entry.newer.older = entry.older;\n            entry.older.newer = entry.newer;\n        }\n        entry.newer = null;\n        entry.older = this.newest_;\n        this.newest_.newer = entry;\n        this.newest_ = entry;\n        return entry.value_;\n    };\n    /**\n     * Remove an entry from the cache.\n     * @param {string} key The entry key.\n     * @return {T} The removed entry.\n     */\n    LRUCache.prototype.remove = function (key) {\n        var entry = this.entries_[key];\n        assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n        if (entry === this.newest_) {\n            this.newest_ = /** @type {Entry} */ (entry.older);\n            if (this.newest_) {\n                this.newest_.newer = null;\n            }\n        }\n        else if (entry === this.oldest_) {\n            this.oldest_ = /** @type {Entry} */ (entry.newer);\n            if (this.oldest_) {\n                this.oldest_.older = null;\n            }\n        }\n        else {\n            entry.newer.older = entry.older;\n            entry.older.newer = entry.newer;\n        }\n        delete this.entries_[key];\n        --this.count_;\n        return entry.value_;\n    };\n    /**\n     * @return {number} Count.\n     */\n    LRUCache.prototype.getCount = function () {\n        return this.count_;\n    };\n    /**\n     * @return {Array<string>} Keys.\n     */\n    LRUCache.prototype.getKeys = function () {\n        var keys = new Array(this.count_);\n        var i = 0;\n        var entry;\n        for (entry = this.newest_; entry; entry = entry.older) {\n            keys[i++] = entry.key_;\n        }\n        return keys;\n    };\n    /**\n     * @return {Array<T>} Values.\n     */\n    LRUCache.prototype.getValues = function () {\n        var values = new Array(this.count_);\n        var i = 0;\n        var entry;\n        for (entry = this.newest_; entry; entry = entry.older) {\n            values[i++] = entry.value_;\n        }\n        return values;\n    };\n    /**\n     * @return {T} Last value.\n     */\n    LRUCache.prototype.peekLast = function () {\n        return this.oldest_.value_;\n    };\n    /**\n     * @return {string} Last key.\n     */\n    LRUCache.prototype.peekLastKey = function () {\n        return this.oldest_.key_;\n    };\n    /**\n     * Get the key of the newest item in the cache.  Throws if the cache is empty.\n     * @return {string} The newest key.\n     */\n    LRUCache.prototype.peekFirstKey = function () {\n        return this.newest_.key_;\n    };\n    /**\n     * @return {T} value Value.\n     */\n    LRUCache.prototype.pop = function () {\n        var entry = this.oldest_;\n        delete this.entries_[entry.key_];\n        if (entry.newer) {\n            entry.newer.older = null;\n        }\n        this.oldest_ = /** @type {Entry} */ (entry.newer);\n        if (!this.oldest_) {\n            this.newest_ = null;\n        }\n        --this.count_;\n        return entry.value_;\n    };\n    /**\n     * @param {string} key Key.\n     * @param {T} value Value.\n     */\n    LRUCache.prototype.replace = function (key, value) {\n        this.get(key); // update `newest_`\n        this.entries_[key].value_ = value;\n    };\n    /**\n     * @param {string} key Key.\n     * @param {T} value Value.\n     */\n    LRUCache.prototype.set = function (key, value) {\n        assert(!(key in this.entries_), 16); // Tried to set a value for a key that is used already\n        var entry = {\n            key_: key,\n            newer: null,\n            older: this.newest_,\n            value_: value,\n        };\n        if (!this.newest_) {\n            this.oldest_ = entry;\n        }\n        else {\n            this.newest_.newer = entry;\n        }\n        this.newest_ = entry;\n        this.entries_[key] = entry;\n        ++this.count_;\n    };\n    /**\n     * Set a maximum number of entries for the cache.\n     * @param {number} size Cache size.\n     * @api\n     */\n    LRUCache.prototype.setSize = function (size) {\n        this.highWaterMark = size;\n    };\n    return LRUCache;\n}());\nexport default LRUCache;\n//# sourceMappingURL=LRUCache.js.map","/**\n * @module ol/tilecoord\n */\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord=} opt_tileCoord Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, opt_tileCoord) {\n    if (opt_tileCoord !== undefined) {\n        opt_tileCoord[0] = z;\n        opt_tileCoord[1] = x;\n        opt_tileCoord[2] = y;\n        return opt_tileCoord;\n    }\n    else {\n        return [z, x, y];\n    }\n}\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n    return z + '/' + x + '/' + y;\n}\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n    return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n    return key.split('/').map(Number);\n}\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n    return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n    var z = tileCoord[0];\n    var x = tileCoord[1];\n    var y = tileCoord[2];\n    if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n        return false;\n    }\n    var tileRange = tileGrid.getFullTileRange(z);\n    if (!tileRange) {\n        return true;\n    }\n    else {\n        return tileRange.containsXY(x, y);\n    }\n}\n//# sourceMappingURL=tilecoord.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport { fromKey, getKey } from './tilecoord.js';\nvar TileCache = /** @class */ (function (_super) {\n    __extends(TileCache, _super);\n    function TileCache() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {!Object<string, boolean>} usedTiles Used tiles.\n     */\n    TileCache.prototype.expireCache = function (usedTiles) {\n        while (this.canExpireCache()) {\n            var tile = this.peekLast();\n            if (tile.getKey() in usedTiles) {\n                break;\n            }\n            else {\n                this.pop().release();\n            }\n        }\n    };\n    /**\n     * Prune all tiles from the cache that don't have the same z as the newest tile.\n     */\n    TileCache.prototype.pruneExceptNewestZ = function () {\n        if (this.getCount() === 0) {\n            return;\n        }\n        var key = this.peekFirstKey();\n        var tileCoord = fromKey(key);\n        var z = tileCoord[0];\n        this.forEach(function (tile) {\n            if (tile.tileCoord[0] !== z) {\n                this.remove(getKey(tile.tileCoord));\n                tile.release();\n            }\n        }.bind(this));\n    };\n    return TileCache;\n}(LRUCache));\nexport default TileCache;\n//# sourceMappingURL=TileCache.js.map","/**\n * @module ol/source/TileEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when a tile starts loading.\n     * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n     * @api\n     */\n    TILELOADSTART: 'tileloadstart',\n    /**\n     * Triggered when a tile finishes loading, either when its data is loaded,\n     * or when loading was aborted because the tile is no longer needed.\n     * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n     * @api\n     */\n    TILELOADEND: 'tileloadend',\n    /**\n     * Triggered if tile loading results in an error.\n     * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n     * @api\n     */\n    TILELOADERROR: 'tileloaderror',\n};\n//# sourceMappingURL=TileEventType.js.map","/**\n * @module ol/TileRange\n */\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nvar TileRange = /** @class */ (function () {\n    /**\n     * @param {number} minX Minimum X.\n     * @param {number} maxX Maximum X.\n     * @param {number} minY Minimum Y.\n     * @param {number} maxY Maximum Y.\n     */\n    function TileRange(minX, maxX, minY, maxY) {\n        /**\n         * @type {number}\n         */\n        this.minX = minX;\n        /**\n         * @type {number}\n         */\n        this.maxX = maxX;\n        /**\n         * @type {number}\n         */\n        this.minY = minY;\n        /**\n         * @type {number}\n         */\n        this.maxY = maxY;\n    }\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @return {boolean} Contains tile coordinate.\n     */\n    TileRange.prototype.contains = function (tileCoord) {\n        return this.containsXY(tileCoord[1], tileCoord[2]);\n    };\n    /**\n     * @param {TileRange} tileRange Tile range.\n     * @return {boolean} Contains.\n     */\n    TileRange.prototype.containsTileRange = function (tileRange) {\n        return (this.minX <= tileRange.minX &&\n            tileRange.maxX <= this.maxX &&\n            this.minY <= tileRange.minY &&\n            tileRange.maxY <= this.maxY);\n    };\n    /**\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @return {boolean} Contains coordinate.\n     */\n    TileRange.prototype.containsXY = function (x, y) {\n        return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n    };\n    /**\n     * @param {TileRange} tileRange Tile range.\n     * @return {boolean} Equals.\n     */\n    TileRange.prototype.equals = function (tileRange) {\n        return (this.minX == tileRange.minX &&\n            this.minY == tileRange.minY &&\n            this.maxX == tileRange.maxX &&\n            this.maxY == tileRange.maxY);\n    };\n    /**\n     * @param {TileRange} tileRange Tile range.\n     */\n    TileRange.prototype.extend = function (tileRange) {\n        if (tileRange.minX < this.minX) {\n            this.minX = tileRange.minX;\n        }\n        if (tileRange.maxX > this.maxX) {\n            this.maxX = tileRange.maxX;\n        }\n        if (tileRange.minY < this.minY) {\n            this.minY = tileRange.minY;\n        }\n        if (tileRange.maxY > this.maxY) {\n            this.maxY = tileRange.maxY;\n        }\n    };\n    /**\n     * @return {number} Height.\n     */\n    TileRange.prototype.getHeight = function () {\n        return this.maxY - this.minY + 1;\n    };\n    /**\n     * @return {import(\"./size.js\").Size} Size.\n     */\n    TileRange.prototype.getSize = function () {\n        return [this.getWidth(), this.getHeight()];\n    };\n    /**\n     * @return {number} Width.\n     */\n    TileRange.prototype.getWidth = function () {\n        return this.maxX - this.minX + 1;\n    };\n    /**\n     * @param {TileRange} tileRange Tile range.\n     * @return {boolean} Intersects.\n     */\n    TileRange.prototype.intersects = function (tileRange) {\n        return (this.minX <= tileRange.maxX &&\n            this.maxX >= tileRange.minX &&\n            this.minY <= tileRange.maxY &&\n            this.maxY >= tileRange.minY);\n    };\n    return TileRange;\n}());\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange=} tileRange TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n    if (tileRange !== undefined) {\n        tileRange.minX = minX;\n        tileRange.maxX = maxX;\n        tileRange.minY = minY;\n        tileRange.maxY = maxY;\n        return tileRange;\n    }\n    else {\n        return new TileRange(minX, maxX, minY, maxY);\n    }\n}\nexport default TileRange;\n//# sourceMappingURL=TileRange.js.map","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, { createOrUpdate as createOrUpdateTileRange, } from '../TileRange.js';\nimport { DEFAULT_TILE_SIZE } from './common.js';\nimport { assert } from '../asserts.js';\nimport { clamp } from '../math.js';\nimport { createOrUpdate, getTopLeft } from '../extent.js';\nimport { createOrUpdate as createOrUpdateTileCoord } from '../tilecoord.js';\nimport { isSorted, linearFindNearest } from '../array.js';\nimport { toSize } from '../size.js';\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nvar tmpTileCoord = [0, 0, 0];\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nvar TileGrid = /** @class */ (function () {\n    /**\n     * @param {Options} options Tile grid options.\n     */\n    function TileGrid(options) {\n        /**\n         * @protected\n         * @type {number}\n         */\n        this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n        /**\n         * @private\n         * @type {!Array<number>}\n         */\n        this.resolutions_ = options.resolutions;\n        assert(isSorted(this.resolutions_, function (a, b) {\n            return b - a;\n        }, true), 17); // `resolutions` must be sorted in descending order\n        // check if we've got a consistent zoom factor and origin\n        var zoomFactor;\n        if (!options.origins) {\n            for (var i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n                if (!zoomFactor) {\n                    zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n                }\n                else {\n                    if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n                        zoomFactor = undefined;\n                        break;\n                    }\n                }\n            }\n        }\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.zoomFactor_ = zoomFactor;\n        /**\n         * @protected\n         * @type {number}\n         */\n        this.maxZoom = this.resolutions_.length - 1;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        this.origin_ = options.origin !== undefined ? options.origin : null;\n        /**\n         * @private\n         * @type {Array<import(\"../coordinate.js\").Coordinate>}\n         */\n        this.origins_ = null;\n        if (options.origins !== undefined) {\n            this.origins_ = options.origins;\n            assert(this.origins_.length == this.resolutions_.length, 20); // Number of `origins` and `resolutions` must be equal\n        }\n        var extent = options.extent;\n        if (extent !== undefined && !this.origin_ && !this.origins_) {\n            this.origin_ = getTopLeft(extent);\n        }\n        assert((!this.origin_ && this.origins_) || (this.origin_ && !this.origins_), 18); // Either `origin` or `origins` must be configured, never both\n        /**\n         * @private\n         * @type {Array<number|import(\"../size.js\").Size>}\n         */\n        this.tileSizes_ = null;\n        if (options.tileSizes !== undefined) {\n            this.tileSizes_ = options.tileSizes;\n            assert(this.tileSizes_.length == this.resolutions_.length, 19); // Number of `tileSizes` and `resolutions` must be equal\n        }\n        /**\n         * @private\n         * @type {number|import(\"../size.js\").Size}\n         */\n        this.tileSize_ =\n            options.tileSize !== undefined\n                ? options.tileSize\n                : !this.tileSizes_\n                    ? DEFAULT_TILE_SIZE\n                    : null;\n        assert((!this.tileSize_ && this.tileSizes_) ||\n            (this.tileSize_ && !this.tileSizes_), 22); // Either `tileSize` or `tileSizes` must be configured, never both\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        this.extent_ = extent !== undefined ? extent : null;\n        /**\n         * @private\n         * @type {Array<import(\"../TileRange.js\").default>}\n         */\n        this.fullTileRanges_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        this.tmpSize_ = [0, 0];\n        if (options.sizes !== undefined) {\n            this.fullTileRanges_ = options.sizes.map(function (size, z) {\n                var tileRange = new TileRange(Math.min(0, size[0]), Math.max(size[0] - 1, -1), Math.min(0, size[1]), Math.max(size[1] - 1, -1));\n                if (extent) {\n                    var restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n                    tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n                    tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n                    tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n                    tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n                }\n                return tileRange;\n            }, this);\n        }\n        else if (extent) {\n            this.calculateTileRanges_(extent);\n        }\n    }\n    /**\n     * Call a function with each tile coordinate for a given extent and zoom level.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} zoom Integer zoom level.\n     * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n     * @api\n     */\n    TileGrid.prototype.forEachTileCoord = function (extent, zoom, callback) {\n        var tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n        for (var i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n            for (var j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n                callback([zoom, i, j]);\n            }\n        }\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n     * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary import(\"../TileRange.js\").default object.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n     * @return {boolean} Callback succeeded.\n     */\n    TileGrid.prototype.forEachTileCoordParentTileRange = function (tileCoord, callback, opt_tileRange, opt_extent) {\n        var tileRange, x, y;\n        var tileCoordExtent = null;\n        var z = tileCoord[0] - 1;\n        if (this.zoomFactor_ === 2) {\n            x = tileCoord[1];\n            y = tileCoord[2];\n        }\n        else {\n            tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n        }\n        while (z >= this.minZoom) {\n            if (this.zoomFactor_ === 2) {\n                x = Math.floor(x / 2);\n                y = Math.floor(y / 2);\n                tileRange = createOrUpdateTileRange(x, x, y, y, opt_tileRange);\n            }\n            else {\n                tileRange = this.getTileRangeForExtentAndZ(tileCoordExtent, z, opt_tileRange);\n            }\n            if (callback(z, tileRange)) {\n                return true;\n            }\n            --z;\n        }\n        return false;\n    };\n    /**\n     * Get the extent for this tile grid, if it was configured.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    TileGrid.prototype.getExtent = function () {\n        return this.extent_;\n    };\n    /**\n     * Get the maximum zoom level for the grid.\n     * @return {number} Max zoom.\n     * @api\n     */\n    TileGrid.prototype.getMaxZoom = function () {\n        return this.maxZoom;\n    };\n    /**\n     * Get the minimum zoom level for the grid.\n     * @return {number} Min zoom.\n     * @api\n     */\n    TileGrid.prototype.getMinZoom = function () {\n        return this.minZoom;\n    };\n    /**\n     * Get the origin for the grid at the given zoom level.\n     * @param {number} z Integer zoom level.\n     * @return {import(\"../coordinate.js\").Coordinate} Origin.\n     * @api\n     */\n    TileGrid.prototype.getOrigin = function (z) {\n        if (this.origin_) {\n            return this.origin_;\n        }\n        else {\n            return this.origins_[z];\n        }\n    };\n    /**\n     * Get the resolution for the given zoom level.\n     * @param {number} z Integer zoom level.\n     * @return {number} Resolution.\n     * @api\n     */\n    TileGrid.prototype.getResolution = function (z) {\n        return this.resolutions_[z];\n    };\n    /**\n     * Get the list of resolutions for the tile grid.\n     * @return {Array<number>} Resolutions.\n     * @api\n     */\n    TileGrid.prototype.getResolutions = function () {\n        return this.resolutions_;\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary import(\"../TileRange.js\").default object.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n     * @return {import(\"../TileRange.js\").default} Tile range.\n     */\n    TileGrid.prototype.getTileCoordChildTileRange = function (tileCoord, opt_tileRange, opt_extent) {\n        if (tileCoord[0] < this.maxZoom) {\n            if (this.zoomFactor_ === 2) {\n                var minX = tileCoord[1] * 2;\n                var minY = tileCoord[2] * 2;\n                return createOrUpdateTileRange(minX, minX + 1, minY, minY + 1, opt_tileRange);\n            }\n            var tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n            return this.getTileRangeForExtentAndZ(tileCoordExtent, tileCoord[0] + 1, opt_tileRange);\n        }\n        return null;\n    };\n    /**\n     * Get the extent for a tile range.\n     * @param {number} z Integer zoom level.\n     * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     */\n    TileGrid.prototype.getTileRangeExtent = function (z, tileRange, opt_extent) {\n        var origin = this.getOrigin(z);\n        var resolution = this.getResolution(z);\n        var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n        var minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n        var maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n        var minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n        var maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n        return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n    };\n    /**\n     * Get a tile range for the given extent and integer zoom level.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} z Integer zoom level.\n     * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary tile range object.\n     * @return {import(\"../TileRange.js\").default} Tile range.\n     */\n    TileGrid.prototype.getTileRangeForExtentAndZ = function (extent, z, opt_tileRange) {\n        var tileCoord = tmpTileCoord;\n        this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tileCoord);\n        var minX = tileCoord[1];\n        var minY = tileCoord[2];\n        this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tileCoord);\n        return createOrUpdateTileRange(minX, tileCoord[1], minY, tileCoord[2], opt_tileRange);\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n     */\n    TileGrid.prototype.getTileCoordCenter = function (tileCoord) {\n        var origin = this.getOrigin(tileCoord[0]);\n        var resolution = this.getResolution(tileCoord[0]);\n        var tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n        return [\n            origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n            origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n        ];\n    };\n    /**\n     * Get the extent of a tile coordinate.\n     *\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Temporary extent object.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    TileGrid.prototype.getTileCoordExtent = function (tileCoord, opt_extent) {\n        var origin = this.getOrigin(tileCoord[0]);\n        var resolution = this.getResolution(tileCoord[0]);\n        var tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n        var minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n        var minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n        var maxX = minX + tileSize[0] * resolution;\n        var maxY = minY + tileSize[1] * resolution;\n        return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n    };\n    /**\n     * Get the tile coordinate for the given map coordinate and resolution.  This\n     * method considers that coordinates that intersect tile boundaries should be\n     * assigned the higher tile coordinate.\n     *\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {number} resolution Resolution.\n     * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Destination import(\"../tilecoord.js\").TileCoord object.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n     * @api\n     */\n    TileGrid.prototype.getTileCoordForCoordAndResolution = function (coordinate, resolution, opt_tileCoord) {\n        return this.getTileCoordForXYAndResolution_(coordinate[0], coordinate[1], resolution, false, opt_tileCoord);\n    };\n    /**\n     * Note that this method should not be called for resolutions that correspond\n     * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {number} resolution Resolution (for a non-integer zoom level).\n     * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n     *     intersections go to the higher tile coordinate, let edge intersections\n     *     go to the lower tile coordinate.\n     * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Temporary import(\"../tilecoord.js\").TileCoord object.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n     * @private\n     */\n    TileGrid.prototype.getTileCoordForXYAndResolution_ = function (x, y, resolution, reverseIntersectionPolicy, opt_tileCoord) {\n        var z = this.getZForResolution(resolution);\n        var scale = resolution / this.getResolution(z);\n        var origin = this.getOrigin(z);\n        var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n        var adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n        var adjustY = reverseIntersectionPolicy ? 0.5 : 0;\n        var xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n        var yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\n        var tileCoordX = (scale * xFromOrigin) / tileSize[0];\n        var tileCoordY = (scale * yFromOrigin) / tileSize[1];\n        if (reverseIntersectionPolicy) {\n            tileCoordX = Math.ceil(tileCoordX) - 1;\n            tileCoordY = Math.ceil(tileCoordY) - 1;\n        }\n        else {\n            tileCoordX = Math.floor(tileCoordX);\n            tileCoordY = Math.floor(tileCoordY);\n        }\n        return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n    };\n    /**\n     * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n     * they should have separate implementations.  This method is for integer zoom\n     * levels.  The other method should only be called for resolutions corresponding\n     * to non-integer zoom levels.\n     * @param {number} x Map x coordinate.\n     * @param {number} y Map y coordinate.\n     * @param {number} z Integer zoom level.\n     * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n     *     intersections go to the higher tile coordinate, let edge intersections\n     *     go to the lower tile coordinate.\n     * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Temporary import(\"../tilecoord.js\").TileCoord object.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n     * @private\n     */\n    TileGrid.prototype.getTileCoordForXYAndZ_ = function (x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n        var origin = this.getOrigin(z);\n        var resolution = this.getResolution(z);\n        var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n        var adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n        var adjustY = reverseIntersectionPolicy ? 0.5 : 0;\n        var xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n        var yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\n        var tileCoordX = xFromOrigin / tileSize[0];\n        var tileCoordY = yFromOrigin / tileSize[1];\n        if (reverseIntersectionPolicy) {\n            tileCoordX = Math.ceil(tileCoordX) - 1;\n            tileCoordY = Math.ceil(tileCoordY) - 1;\n        }\n        else {\n            tileCoordX = Math.floor(tileCoordX);\n            tileCoordY = Math.floor(tileCoordY);\n        }\n        return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n    };\n    /**\n     * Get a tile coordinate given a map coordinate and zoom level.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {number} z Zoom level.\n     * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Destination import(\"../tilecoord.js\").TileCoord object.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n     * @api\n     */\n    TileGrid.prototype.getTileCoordForCoordAndZ = function (coordinate, z, opt_tileCoord) {\n        return this.getTileCoordForXYAndZ_(coordinate[0], coordinate[1], z, false, opt_tileCoord);\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @return {number} Tile resolution.\n     */\n    TileGrid.prototype.getTileCoordResolution = function (tileCoord) {\n        return this.resolutions_[tileCoord[0]];\n    };\n    /**\n     * Get the tile size for a zoom level. The type of the return value matches the\n     * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n     * get an `import(\"../size.js\").Size`, run the result through `import(\"../size.js\").Size.toSize()`.\n     * @param {number} z Z.\n     * @return {number|import(\"../size.js\").Size} Tile size.\n     * @api\n     */\n    TileGrid.prototype.getTileSize = function (z) {\n        if (this.tileSize_) {\n            return this.tileSize_;\n        }\n        else {\n            return this.tileSizes_[z];\n        }\n    };\n    /**\n     * @param {number} z Zoom level.\n     * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n     */\n    TileGrid.prototype.getFullTileRange = function (z) {\n        if (!this.fullTileRanges_) {\n            return this.extent_\n                ? this.getTileRangeForExtentAndZ(this.extent_, z)\n                : null;\n        }\n        else {\n            return this.fullTileRanges_[z];\n        }\n    };\n    /**\n     * @param {number} resolution Resolution.\n     * @param {number=} opt_direction If 0, the nearest resolution will be used.\n     *     If 1, the nearest lower resolution will be used. If -1, the nearest\n     *     higher resolution will be used. Default is 0.\n     * @return {number} Z.\n     * @api\n     */\n    TileGrid.prototype.getZForResolution = function (resolution, opt_direction) {\n        var z = linearFindNearest(this.resolutions_, resolution, opt_direction || 0);\n        return clamp(z, this.minZoom, this.maxZoom);\n    };\n    /**\n     * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n     * @private\n     */\n    TileGrid.prototype.calculateTileRanges_ = function (extent) {\n        var length = this.resolutions_.length;\n        var fullTileRanges = new Array(length);\n        for (var z = this.minZoom; z < length; ++z) {\n            fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n        }\n        this.fullTileRanges_ = fullTileRanges;\n    };\n    return TileGrid;\n}());\nexport default TileGrid;\n//# sourceMappingURL=TileGrid.js.map","/**\n * @module ol/tilegrid\n */\nimport Corner from './extent/Corner.js';\nimport TileGrid from './tilegrid/TileGrid.js';\nimport Units from './proj/Units.js';\nimport { DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE } from './tilegrid/common.js';\nimport { METERS_PER_UNIT, get as getProjection } from './proj.js';\nimport { containsCoordinate, createOrUpdate, getCorner, getHeight, getWidth, } from './extent.js';\nimport { toSize } from './size.js';\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n    var tileGrid = projection.getDefaultTileGrid();\n    if (!tileGrid) {\n        tileGrid = createForProjection(projection);\n        projection.setDefaultTileGrid(tileGrid);\n    }\n    return tileGrid;\n}\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n    var z = tileCoord[0];\n    var center = tileGrid.getTileCoordCenter(tileCoord);\n    var projectionExtent = extentFromProjection(projection);\n    if (!containsCoordinate(projectionExtent, center)) {\n        var worldWidth = getWidth(projectionExtent);\n        var worldsAway = Math.ceil((projectionExtent[0] - center[0]) / worldWidth);\n        center[0] += worldWidth * worldsAway;\n        return tileGrid.getTileCoordForCoordAndZ(center, z);\n    }\n    else {\n        return tileCoord;\n    }\n}\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent/Corner.js\").default=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner) {\n    var corner = opt_corner !== undefined ? opt_corner : Corner.TOP_LEFT;\n    var resolutions = resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize);\n    return new TileGrid({\n        extent: extent,\n        origin: getCorner(extent, corner),\n        resolutions: resolutions,\n        tileSize: opt_tileSize,\n    });\n}\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions=} opt_options Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(opt_options) {\n    var xyzOptions = opt_options || {};\n    var extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n    var gridOptions = {\n        extent: extent,\n        minZoom: xyzOptions.minZoom,\n        tileSize: xyzOptions.tileSize,\n        resolutions: resolutionsFromExtent(extent, xyzOptions.maxZoom, xyzOptions.tileSize, xyzOptions.maxResolution),\n    };\n    return new TileGrid(gridOptions);\n}\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number=} opt_maxResolution Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize, opt_maxResolution) {\n    var maxZoom = opt_maxZoom !== undefined ? opt_maxZoom : DEFAULT_MAX_ZOOM;\n    var height = getHeight(extent);\n    var width = getWidth(extent);\n    var tileSize = toSize(opt_tileSize !== undefined ? opt_tileSize : DEFAULT_TILE_SIZE);\n    var maxResolution = opt_maxResolution > 0\n        ? opt_maxResolution\n        : Math.max(width / tileSize[0], height / tileSize[1]);\n    var length = maxZoom + 1;\n    var resolutions = new Array(length);\n    for (var z = 0; z < length; ++z) {\n        resolutions[z] = maxResolution / Math.pow(2, z);\n    }\n    return resolutions;\n}\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent/Corner.js\").default=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, opt_maxZoom, opt_tileSize, opt_corner) {\n    var extent = extentFromProjection(projection);\n    return createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner);\n}\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n    projection = getProjection(projection);\n    var extent = projection.getExtent();\n    if (!extent) {\n        var half = (180 * METERS_PER_UNIT[Units.DEGREES]) / projection.getMetersPerUnit();\n        extent = createOrUpdate(-half, -half, half, half);\n    }\n    return extent;\n}\n//# sourceMappingURL=tilegrid.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport { abstract } from '../util.js';\nimport { assert } from '../asserts.js';\nimport { equivalent } from '../proj.js';\nimport { getKeyZXY, withinExtentAndZ } from '../tilecoord.js';\nimport { getForProjection as getTileGridForProjection, wrapX, } from '../tilegrid.js';\nimport { scale as scaleSize, toSize } from '../size.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize]\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio]\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {import(\"./State.js\").default} [state]\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n * @property {string} [key]\n * @property {number} [zDirection=0]\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nvar TileSource = /** @class */ (function (_super) {\n    __extends(TileSource, _super);\n    /**\n     * @param {Options} options SourceTile source options.\n     */\n    function TileSource(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            attributionsCollapsible: options.attributionsCollapsible,\n            projection: options.projection,\n            state: options.state,\n            wrapX: options.wrapX,\n        }) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.tilePixelRatio_ =\n            options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n        /**\n         * @protected\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\n         */\n        _this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n        var tileSize = [256, 256];\n        var tileGrid = options.tileGrid;\n        if (tileGrid) {\n            toSize(tileGrid.getTileSize(tileGrid.getMinZoom()), tileSize);\n        }\n        /**\n         * @protected\n         * @type {import(\"../TileCache.js\").default}\n         */\n        _this.tileCache = new TileCache(options.cacheSize || 0);\n        /**\n         * @protected\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.tmpSize = [0, 0];\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.key_ = options.key || '';\n        /**\n         * @protected\n         * @type {import(\"../Tile.js\").Options}\n         */\n        _this.tileOptions = { transition: options.transition };\n        /**\n         * zDirection hint, read by the renderer. Indicates which resolution should be used\n         * by a renderer if the views resolution does not match any resolution of the tile source.\n         * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n         * will be used. If -1, the nearest higher resolution will be used.\n         * @type {number}\n         */\n        _this.zDirection = options.zDirection ? options.zDirection : 0;\n        return _this;\n    }\n    /**\n     * @return {boolean} Can expire cache.\n     */\n    TileSource.prototype.canExpireCache = function () {\n        return this.tileCache.canExpireCache();\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {!Object<string, boolean>} usedTiles Used tiles.\n     */\n    TileSource.prototype.expireCache = function (projection, usedTiles) {\n        var tileCache = this.getTileCacheForProjection(projection);\n        if (tileCache) {\n            tileCache.expireCache(usedTiles);\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {number} z Zoom level.\n     * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n     * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n     *     loaded tile.  If the callback returns `false`, the tile will not be\n     *     considered loaded.\n     * @return {boolean} The tile range is fully covered with loaded tiles.\n     */\n    TileSource.prototype.forEachLoadedTile = function (projection, z, tileRange, callback) {\n        var tileCache = this.getTileCacheForProjection(projection);\n        if (!tileCache) {\n            return false;\n        }\n        var covered = true;\n        var tile, tileCoordKey, loaded;\n        for (var x = tileRange.minX; x <= tileRange.maxX; ++x) {\n            for (var y = tileRange.minY; y <= tileRange.maxY; ++y) {\n                tileCoordKey = getKeyZXY(z, x, y);\n                loaded = false;\n                if (tileCache.containsKey(tileCoordKey)) {\n                    tile = /** @type {!import(\"../Tile.js\").default} */ (tileCache.get(tileCoordKey));\n                    loaded = tile.getState() === TileState.LOADED;\n                    if (loaded) {\n                        loaded = callback(tile) !== false;\n                    }\n                }\n                if (!loaded) {\n                    covered = false;\n                }\n            }\n        }\n        return covered;\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {number} Gutter.\n     */\n    TileSource.prototype.getGutterForProjection = function (projection) {\n        return 0;\n    };\n    /**\n     * Return the key to be used for all tiles in the source.\n     * @return {string} The key for all tiles.\n     * @protected\n     */\n    TileSource.prototype.getKey = function () {\n        return this.key_;\n    };\n    /**\n     * Set the value to be used as the key for all tiles in the source.\n     * @param {string} key The key for tiles.\n     * @protected\n     */\n    TileSource.prototype.setKey = function (key) {\n        if (this.key_ !== key) {\n            this.key_ = key;\n            this.changed();\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {boolean} Opaque.\n     */\n    TileSource.prototype.getOpaque = function (projection) {\n        return this.opaque_;\n    };\n    /**\n     * @return {Array<number>} Resolutions.\n     */\n    TileSource.prototype.getResolutions = function () {\n        return this.tileGrid.getResolutions();\n    };\n    /**\n     * @abstract\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../Tile.js\").default} Tile.\n     */\n    TileSource.prototype.getTile = function (z, x, y, pixelRatio, projection) {\n        return abstract();\n    };\n    /**\n     * Return the tile grid of the tile source.\n     * @return {import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n     * @api\n     */\n    TileSource.prototype.getTileGrid = function () {\n        return this.tileGrid;\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n     */\n    TileSource.prototype.getTileGridForProjection = function (projection) {\n        if (!this.tileGrid) {\n            return getTileGridForProjection(projection);\n        }\n        else {\n            return this.tileGrid;\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {import(\"../TileCache.js\").default} Tile cache.\n     * @protected\n     */\n    TileSource.prototype.getTileCacheForProjection = function (projection) {\n        assert(equivalent(this.getProjection(), projection), 68 // A VectorTile source can only be rendered if it has a projection compatible with the view projection.\n        );\n        return this.tileCache;\n    };\n    /**\n     * Get the tile pixel ratio for this source. Subclasses may override this\n     * method, which is meant to return a supported pixel ratio that matches the\n     * provided `pixelRatio` as close as possible.\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {number} Tile pixel ratio.\n     */\n    TileSource.prototype.getTilePixelRatio = function (pixelRatio) {\n        return this.tilePixelRatio_;\n    };\n    /**\n     * @param {number} z Z.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {import(\"../size.js\").Size} Tile size.\n     */\n    TileSource.prototype.getTilePixelSize = function (z, pixelRatio, projection) {\n        var tileGrid = this.getTileGridForProjection(projection);\n        var tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n        var tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n        if (tilePixelRatio == 1) {\n            return tileSize;\n        }\n        else {\n            return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n        }\n    };\n    /**\n     * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n     * is outside the resolution and extent range of the tile grid, `null` will be\n     * returned.\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"../proj/Projection.js\").default=} opt_projection Projection.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n     *     null if no tile URL should be created for the passed `tileCoord`.\n     */\n    TileSource.prototype.getTileCoordForTileUrlFunction = function (tileCoord, opt_projection) {\n        var projection = opt_projection !== undefined ? opt_projection : this.getProjection();\n        var tileGrid = this.getTileGridForProjection(projection);\n        if (this.getWrapX() && projection.isGlobal()) {\n            tileCoord = wrapX(tileGrid, tileCoord, projection);\n        }\n        return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n    };\n    /**\n     * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n     * @api\n     */\n    TileSource.prototype.clear = function () {\n        this.tileCache.clear();\n    };\n    TileSource.prototype.refresh = function () {\n        this.clear();\n        _super.prototype.refresh.call(this);\n    };\n    /**\n     * Increases the cache size if needed\n     * @param {number} tileCount Minimum number of tiles needed.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     */\n    TileSource.prototype.updateCacheSize = function (tileCount, projection) {\n        var tileCache = this.getTileCacheForProjection(projection);\n        if (tileCount > tileCache.highWaterMark) {\n            tileCache.highWaterMark = tileCount;\n        }\n    };\n    /**\n     * Marks a tile coord as being used, without triggering a load.\n     * @abstract\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     */\n    TileSource.prototype.useTile = function (z, x, y, projection) { };\n    return TileSource;\n}(Source));\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nvar TileSourceEvent = /** @class */ (function (_super) {\n    __extends(TileSourceEvent, _super);\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../Tile.js\").default} tile The tile.\n     */\n    function TileSourceEvent(type, tile) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The tile related to the event.\n         * @type {import(\"../Tile.js\").default}\n         * @api\n         */\n        _this.tile = tile;\n        return _this;\n    }\n    return TileSourceEvent;\n}(Event));\nexport { TileSourceEvent };\nexport default TileSource;\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/tileurlfunction\n */\nimport { assert } from './asserts.js';\nimport { modulo } from './math.js';\nimport { hash as tileCoordHash } from './tilecoord.js';\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n    var zRegEx = /\\{z\\}/g;\n    var xRegEx = /\\{x\\}/g;\n    var yRegEx = /\\{y\\}/g;\n    var dashYRegEx = /\\{-y\\}/g;\n    return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n        if (!tileCoord) {\n            return undefined;\n        }\n        else {\n            return template\n                .replace(zRegEx, tileCoord[0].toString())\n                .replace(xRegEx, tileCoord[1].toString())\n                .replace(yRegEx, tileCoord[2].toString())\n                .replace(dashYRegEx, function () {\n                var z = tileCoord[0];\n                var range = tileGrid.getFullTileRange(z);\n                assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n                var y = range.getHeight() - tileCoord[2] - 1;\n                return y.toString();\n            });\n        }\n    });\n}\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n    var len = templates.length;\n    var tileUrlFunctions = new Array(len);\n    for (var i = 0; i < len; ++i) {\n        tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n    }\n    return createFromTileUrlFunctions(tileUrlFunctions);\n}\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n    if (tileUrlFunctions.length === 1) {\n        return tileUrlFunctions[0];\n    }\n    return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n        if (!tileCoord) {\n            return undefined;\n        }\n        else {\n            var h = tileCoordHash(tileCoord);\n            var index = modulo(h, tileUrlFunctions.length);\n            return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n        }\n    });\n}\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n}\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n    var urls = [];\n    var match = /\\{([a-z])-([a-z])\\}/.exec(url);\n    if (match) {\n        // char range\n        var startCharCode = match[1].charCodeAt(0);\n        var stopCharCode = match[2].charCodeAt(0);\n        var charCode = void 0;\n        for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n            urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n        }\n        return urls;\n    }\n    match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n    if (match) {\n        // number range\n        var stop_1 = parseInt(match[2], 10);\n        for (var i = parseInt(match[1], 10); i <= stop_1; i++) {\n            urls.push(url.replace(match[0], i.toString()));\n        }\n        return urls;\n    }\n    urls.push(url);\n    return urls;\n}\n//# sourceMappingURL=tileurlfunction.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, { TileSourceEvent } from './Tile.js';\nimport TileState from '../TileState.js';\nimport { createFromTemplates, expandUrl } from '../tileurlfunction.js';\nimport { getKeyZXY } from '../tilecoord.js';\nimport { getUid } from '../util.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize]\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {import(\"./State.js\").default} [state]\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid]\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction\n * @property {number} [tilePixelRatio]\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction]\n * @property {string} [url]\n * @property {Array<string>} [urls]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n * @property {string} [key]\n * @property {number} [zDirection=0]\n */\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nvar UrlTile = /** @class */ (function (_super) {\n    __extends(UrlTile, _super);\n    /**\n     * @param {Options} options Image tile options.\n     */\n    function UrlTile(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            opaque: options.opaque,\n            projection: options.projection,\n            state: options.state,\n            tileGrid: options.tileGrid,\n            tilePixelRatio: options.tilePixelRatio,\n            wrapX: options.wrapX,\n            transition: options.transition,\n            key: options.key,\n            attributionsCollapsible: options.attributionsCollapsible,\n            zDirection: options.zDirection,\n        }) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.generateTileUrlFunction_ =\n            _this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n        /**\n         * @protected\n         * @type {import(\"../Tile.js\").LoadFunction}\n         */\n        _this.tileLoadFunction = options.tileLoadFunction;\n        if (options.tileUrlFunction) {\n            _this.tileUrlFunction = options.tileUrlFunction;\n        }\n        /**\n         * @protected\n         * @type {!Array<string>|null}\n         */\n        _this.urls = null;\n        if (options.urls) {\n            _this.setUrls(options.urls);\n        }\n        else if (options.url) {\n            _this.setUrl(options.url);\n        }\n        /**\n         * @private\n         * @type {!Object<string, boolean>}\n         */\n        _this.tileLoadingKeys_ = {};\n        return _this;\n    }\n    /**\n     * Return the tile load function of the source.\n     * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n     * @api\n     */\n    UrlTile.prototype.getTileLoadFunction = function () {\n        return this.tileLoadFunction;\n    };\n    /**\n     * Return the tile URL function of the source.\n     * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n     * @api\n     */\n    UrlTile.prototype.getTileUrlFunction = function () {\n        return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n            ? this.tileUrlFunction.bind(this)\n            : this.tileUrlFunction;\n    };\n    /**\n     * Return the URLs used for this source.\n     * When a tileUrlFunction is used instead of url or urls,\n     * null will be returned.\n     * @return {!Array<string>|null} URLs.\n     * @api\n     */\n    UrlTile.prototype.getUrls = function () {\n        return this.urls;\n    };\n    /**\n     * Handle tile change events.\n     * @param {import(\"../events/Event.js\").default} event Event.\n     * @protected\n     */\n    UrlTile.prototype.handleTileChange = function (event) {\n        var tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n        var uid = getUid(tile);\n        var tileState = tile.getState();\n        var type;\n        if (tileState == TileState.LOADING) {\n            this.tileLoadingKeys_[uid] = true;\n            type = TileEventType.TILELOADSTART;\n        }\n        else if (uid in this.tileLoadingKeys_) {\n            delete this.tileLoadingKeys_[uid];\n            type =\n                tileState == TileState.ERROR\n                    ? TileEventType.TILELOADERROR\n                    : tileState == TileState.LOADED\n                        ? TileEventType.TILELOADEND\n                        : undefined;\n        }\n        if (type != undefined) {\n            this.dispatchEvent(new TileSourceEvent(type, tile));\n        }\n    };\n    /**\n     * Set the tile load function of the source.\n     * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n     * @api\n     */\n    UrlTile.prototype.setTileLoadFunction = function (tileLoadFunction) {\n        this.tileCache.clear();\n        this.tileLoadFunction = tileLoadFunction;\n        this.changed();\n    };\n    /**\n     * Set the tile URL function of the source.\n     * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n     * @param {string=} key Optional new tile key for the source.\n     * @api\n     */\n    UrlTile.prototype.setTileUrlFunction = function (tileUrlFunction, key) {\n        this.tileUrlFunction = tileUrlFunction;\n        this.tileCache.pruneExceptNewestZ();\n        if (typeof key !== 'undefined') {\n            this.setKey(key);\n        }\n        else {\n            this.changed();\n        }\n    };\n    /**\n     * Set the URL to use for requests.\n     * @param {string} url URL.\n     * @api\n     */\n    UrlTile.prototype.setUrl = function (url) {\n        var urls = expandUrl(url);\n        this.urls = urls;\n        this.setUrls(urls);\n    };\n    /**\n     * Set the URLs to use for requests.\n     * @param {Array<string>} urls URLs.\n     * @api\n     */\n    UrlTile.prototype.setUrls = function (urls) {\n        this.urls = urls;\n        var key = urls.join('\\n');\n        if (this.generateTileUrlFunction_) {\n            this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n        }\n        else {\n            this.setKey(key);\n        }\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    UrlTile.prototype.tileUrlFunction = function (tileCoord, pixelRatio, projection) {\n        return undefined;\n    };\n    /**\n     * Marks a tile coord as being used, without triggering a load.\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     */\n    UrlTile.prototype.useTile = function (z, x, y) {\n        var tileCoordKey = getKeyZXY(z, x, y);\n        if (this.tileCache.containsKey(tileCoordKey)) {\n            this.tileCache.get(tileCoordKey);\n        }\n    };\n    return UrlTile;\n}(TileSource));\nexport default UrlTile;\n//# sourceMappingURL=UrlTile.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport { ENABLE_RASTER_REPROJECTION } from '../reproj/common.js';\nimport { IMAGE_SMOOTHING_DISABLED } from './common.js';\nimport { equivalent, get as getProjection } from '../proj.js';\nimport { getKey, getKeyZXY } from '../tilecoord.js';\nimport { getForProjection as getTileGridForProjection } from '../tilegrid.js';\nimport { getUid } from '../util.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./State.js\").default} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number} [zDirection=0] Indicate which resolution should be used\n * by a renderer if the view resolution does not match any resolution of the tile source.\n * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n * will be used. If -1, the nearest higher resolution will be used.\n */\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nvar TileImage = /** @class */ (function (_super) {\n    __extends(TileImage, _super);\n    /**\n     * @param {!Options} options Image tile options.\n     */\n    function TileImage(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            opaque: options.opaque,\n            projection: options.projection,\n            state: options.state,\n            tileGrid: options.tileGrid,\n            tileLoadFunction: options.tileLoadFunction\n                ? options.tileLoadFunction\n                : defaultTileLoadFunction,\n            tilePixelRatio: options.tilePixelRatio,\n            tileUrlFunction: options.tileUrlFunction,\n            url: options.url,\n            urls: options.urls,\n            wrapX: options.wrapX,\n            transition: options.transition,\n            key: options.key,\n            attributionsCollapsible: options.attributionsCollapsible,\n            zDirection: options.zDirection,\n        }) || this;\n        /**\n         * @protected\n         * @type {?string}\n         */\n        _this.crossOrigin =\n            options.crossOrigin !== undefined ? options.crossOrigin : null;\n        /**\n         * @protected\n         * @type {typeof ImageTile}\n         */\n        _this.tileClass =\n            options.tileClass !== undefined ? options.tileClass : ImageTile;\n        /**\n         * @protected\n         * @type {!Object<string, TileCache>}\n         */\n        _this.tileCacheForProjection = {};\n        /**\n         * @protected\n         * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n         */\n        _this.tileGridForProjection = {};\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n        /**\n         * @private\n         * @type {object|undefined}\n         */\n        _this.contextOptions_ =\n            options.imageSmoothing === false ? IMAGE_SMOOTHING_DISABLED : undefined;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderReprojectionEdges_ = false;\n        return _this;\n    }\n    /**\n     * @return {boolean} Can expire cache.\n     */\n    TileImage.prototype.canExpireCache = function () {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            return _super.prototype.canExpireCache.call(this);\n        }\n        if (this.tileCache.canExpireCache()) {\n            return true;\n        }\n        else {\n            for (var key in this.tileCacheForProjection) {\n                if (this.tileCacheForProjection[key].canExpireCache()) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {!Object<string, boolean>} usedTiles Used tiles.\n     */\n    TileImage.prototype.expireCache = function (projection, usedTiles) {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            _super.prototype.expireCache.call(this, projection, usedTiles);\n            return;\n        }\n        var usedTileCache = this.getTileCacheForProjection(projection);\n        this.tileCache.expireCache(this.tileCache == usedTileCache ? usedTiles : {});\n        for (var id in this.tileCacheForProjection) {\n            var tileCache = this.tileCacheForProjection[id];\n            tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n        }\n    };\n    /**\n     * @return {Object|undefined} Context options.\n     */\n    TileImage.prototype.getContextOptions = function () {\n        return this.contextOptions_;\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {number} Gutter.\n     */\n    TileImage.prototype.getGutterForProjection = function (projection) {\n        if (ENABLE_RASTER_REPROJECTION &&\n            this.getProjection() &&\n            projection &&\n            !equivalent(this.getProjection(), projection)) {\n            return 0;\n        }\n        else {\n            return this.getGutter();\n        }\n    };\n    /**\n     * @return {number} Gutter.\n     */\n    TileImage.prototype.getGutter = function () {\n        return 0;\n    };\n    /**\n     * Return the key to be used for all tiles in the source.\n     * @return {string} The key for all tiles.\n     * @protected\n     */\n    TileImage.prototype.getKey = function () {\n        return (_super.prototype.getKey.call(this) +\n            (this.contextOptions_ ? '\\n' + JSON.stringify(this.contextOptions_) : ''));\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {boolean} Opaque.\n     */\n    TileImage.prototype.getOpaque = function (projection) {\n        if (ENABLE_RASTER_REPROJECTION &&\n            this.getProjection() &&\n            projection &&\n            !equivalent(this.getProjection(), projection)) {\n            return false;\n        }\n        else {\n            return _super.prototype.getOpaque.call(this, projection);\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n     */\n    TileImage.prototype.getTileGridForProjection = function (projection) {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            return _super.prototype.getTileGridForProjection.call(this, projection);\n        }\n        var thisProj = this.getProjection();\n        if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n            return this.tileGrid;\n        }\n        else {\n            var projKey = getUid(projection);\n            if (!(projKey in this.tileGridForProjection)) {\n                this.tileGridForProjection[projKey] = getTileGridForProjection(projection);\n            }\n            return this.tileGridForProjection[projKey];\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {import(\"../TileCache.js\").default} Tile cache.\n     */\n    TileImage.prototype.getTileCacheForProjection = function (projection) {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            return _super.prototype.getTileCacheForProjection.call(this, projection);\n        }\n        var thisProj = this.getProjection();\n        if (!thisProj || equivalent(thisProj, projection)) {\n            return this.tileCache;\n        }\n        else {\n            var projKey = getUid(projection);\n            if (!(projKey in this.tileCacheForProjection)) {\n                this.tileCacheForProjection[projKey] = new TileCache(this.tileCache.highWaterMark);\n            }\n            return this.tileCacheForProjection[projKey];\n        }\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {string} key The key set on the tile.\n     * @return {!import(\"../Tile.js\").default} Tile.\n     * @private\n     */\n    TileImage.prototype.createTile_ = function (z, x, y, pixelRatio, projection, key) {\n        var tileCoord = [z, x, y];\n        var urlTileCoord = this.getTileCoordForTileUrlFunction(tileCoord, projection);\n        var tileUrl = urlTileCoord\n            ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n            : undefined;\n        var tile = new this.tileClass(tileCoord, tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY, tileUrl !== undefined ? tileUrl : '', this.crossOrigin, this.tileLoadFunction, this.tileOptions);\n        tile.key = key;\n        tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n        return tile;\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../Tile.js\").default} Tile.\n     */\n    TileImage.prototype.getTile = function (z, x, y, pixelRatio, projection) {\n        var sourceProjection = this.getProjection();\n        if (!ENABLE_RASTER_REPROJECTION ||\n            !sourceProjection ||\n            !projection ||\n            equivalent(sourceProjection, projection)) {\n            return this.getTileInternal(z, x, y, pixelRatio, sourceProjection || projection);\n        }\n        else {\n            var cache = this.getTileCacheForProjection(projection);\n            var tileCoord = [z, x, y];\n            var tile = void 0;\n            var tileCoordKey = getKey(tileCoord);\n            if (cache.containsKey(tileCoordKey)) {\n                tile = cache.get(tileCoordKey);\n            }\n            var key = this.getKey();\n            if (tile && tile.key == key) {\n                return tile;\n            }\n            else {\n                var sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n                var targetTileGrid = this.getTileGridForProjection(projection);\n                var wrappedTileCoord = this.getTileCoordForTileUrlFunction(tileCoord, projection);\n                var newTile = new ReprojTile(sourceProjection, sourceTileGrid, projection, targetTileGrid, tileCoord, wrappedTileCoord, this.getTilePixelRatio(pixelRatio), this.getGutter(), function (z, x, y, pixelRatio) {\n                    return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\n                }.bind(this), this.reprojectionErrorThreshold_, this.renderReprojectionEdges_, this.contextOptions_);\n                newTile.key = key;\n                if (tile) {\n                    newTile.interimTile = tile;\n                    newTile.refreshInterimChain();\n                    cache.replace(tileCoordKey, newTile);\n                }\n                else {\n                    cache.set(tileCoordKey, newTile);\n                }\n                return newTile;\n            }\n        }\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../Tile.js\").default} Tile.\n     * @protected\n     */\n    TileImage.prototype.getTileInternal = function (z, x, y, pixelRatio, projection) {\n        var tile = null;\n        var tileCoordKey = getKeyZXY(z, x, y);\n        var key = this.getKey();\n        if (!this.tileCache.containsKey(tileCoordKey)) {\n            tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n            this.tileCache.set(tileCoordKey, tile);\n        }\n        else {\n            tile = this.tileCache.get(tileCoordKey);\n            if (tile.key != key) {\n                // The source's params changed. If the tile has an interim tile and if we\n                // can use it then we use it. Otherwise we create a new tile.  In both\n                // cases we attempt to assign an interim tile to the new tile.\n                var interimTile = tile;\n                tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n                //make the new tile the head of the list,\n                if (interimTile.getState() == TileState.IDLE) {\n                    //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n                    tile.interimTile = interimTile.interimTile;\n                }\n                else {\n                    tile.interimTile = interimTile;\n                }\n                tile.refreshInterimChain();\n                this.tileCache.replace(tileCoordKey, tile);\n            }\n        }\n        return tile;\n    };\n    /**\n     * Sets whether to render reprojection edges or not (usually for debugging).\n     * @param {boolean} render Render the edges.\n     * @api\n     */\n    TileImage.prototype.setRenderReprojectionEdges = function (render) {\n        if (!ENABLE_RASTER_REPROJECTION ||\n            this.renderReprojectionEdges_ == render) {\n            return;\n        }\n        this.renderReprojectionEdges_ = render;\n        for (var id in this.tileCacheForProjection) {\n            this.tileCacheForProjection[id].clear();\n        }\n        this.changed();\n    };\n    /**\n     * Sets the tile grid to use when reprojecting the tiles to the given\n     * projection instead of the default tile grid for the projection.\n     *\n     * This can be useful when the default tile grid cannot be created\n     * (e.g. projection has no extent defined) or\n     * for optimization reasons (custom tile size, resolutions, ...).\n     *\n     * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n     * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n     * @api\n     */\n    TileImage.prototype.setTileGridForProjection = function (projection, tilegrid) {\n        if (ENABLE_RASTER_REPROJECTION) {\n            var proj = getProjection(projection);\n            if (proj) {\n                var projKey = getUid(proj);\n                if (!(projKey in this.tileGridForProjection)) {\n                    this.tileGridForProjection[projKey] = tilegrid;\n                }\n            }\n        }\n    };\n    return TileImage;\n}(UrlTile));\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n    /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src = src;\n}\nexport default TileImage;\n//# sourceMappingURL=TileImage.js.map","/**\n * @module ol/source/XYZ\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport TileImage from './TileImage.js';\nimport { createXYZ, extentFromProjection } from '../tilegrid.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if `url` or `urls` are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number} [zDirection=0] Indicate which resolution should be used\n * by a renderer if the view resolution does not match any resolution of the tile source.\n * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n * will be used. If -1, the nearest higher resolution will be used.\n */\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nvar XYZ = /** @class */ (function (_super) {\n    __extends(XYZ, _super);\n    /**\n     * @param {Options=} opt_options XYZ options.\n     */\n    function XYZ(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        var projection = options.projection !== undefined ? options.projection : 'EPSG:3857';\n        var tileGrid = options.tileGrid !== undefined\n            ? options.tileGrid\n            : createXYZ({\n                extent: extentFromProjection(projection),\n                maxResolution: options.maxResolution,\n                maxZoom: options.maxZoom,\n                minZoom: options.minZoom,\n                tileSize: options.tileSize,\n            });\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            crossOrigin: options.crossOrigin,\n            imageSmoothing: options.imageSmoothing,\n            opaque: options.opaque,\n            projection: projection,\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            tileGrid: tileGrid,\n            tileLoadFunction: options.tileLoadFunction,\n            tilePixelRatio: options.tilePixelRatio,\n            tileUrlFunction: options.tileUrlFunction,\n            url: options.url,\n            urls: options.urls,\n            wrapX: options.wrapX !== undefined ? options.wrapX : true,\n            transition: options.transition,\n            attributionsCollapsible: options.attributionsCollapsible,\n            zDirection: options.zDirection,\n        }) || this;\n        return _this;\n    }\n    return XYZ;\n}(TileImage));\nexport default XYZ;\n//# sourceMappingURL=XYZ.js.map","/**\n * @module ol/source/OSM\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport XYZ from './XYZ.js';\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport var ATTRIBUTION = '&#169; ' +\n    '<a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">OpenStreetMap</a> ' +\n    'contributors.';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [url='https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nvar OSM = /** @class */ (function (_super) {\n    __extends(OSM, _super);\n    /**\n     * @param {Options=} [opt_options] Open Street Map options.\n     */\n    function OSM(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        var attributions;\n        if (options.attributions !== undefined) {\n            attributions = options.attributions;\n        }\n        else {\n            attributions = [ATTRIBUTION];\n        }\n        var crossOrigin = options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n        var url = options.url !== undefined\n            ? options.url\n            : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n        _this = _super.call(this, {\n            attributions: attributions,\n            attributionsCollapsible: false,\n            cacheSize: options.cacheSize,\n            crossOrigin: crossOrigin,\n            imageSmoothing: options.imageSmoothing,\n            maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n            opaque: options.opaque !== undefined ? options.opaque : true,\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            tileLoadFunction: options.tileLoadFunction,\n            transition: options.transition,\n            url: url,\n            wrapX: options.wrapX,\n        }) || this;\n        return _this;\n    }\n    return OSM;\n}(XYZ));\nexport default OSM;\n//# sourceMappingURL=OSM.js.map","/**\n * @module ol/layer/TileProperty\n */\n/**\n * @enum {string}\n */\nexport default {\n    PRELOAD: 'preload',\n    USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n//# sourceMappingURL=TileProperty.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\nimport { assign } from '../obj.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {import(\"../source/Tile.js\").default} [source] Source for this layer.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n */\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @extends {Layer<import(\"../source/Tile.js\").default>}\n * @api\n */\nvar BaseTileLayer = /** @class */ (function (_super) {\n    __extends(BaseTileLayer, _super);\n    /**\n     * @param {Options=} opt_options Tile layer options.\n     */\n    function BaseTileLayer(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var baseOptions = assign({}, options);\n        delete baseOptions.preload;\n        delete baseOptions.useInterimTilesOnError;\n        _this = _super.call(this, baseOptions) || this;\n        _this.setPreload(options.preload !== undefined ? options.preload : 0);\n        _this.setUseInterimTilesOnError(options.useInterimTilesOnError !== undefined\n            ? options.useInterimTilesOnError\n            : true);\n        return _this;\n    }\n    /**\n     * Return the level as number to which we will preload tiles up to.\n     * @return {number} The level to preload tiles up to.\n     * @observable\n     * @api\n     */\n    BaseTileLayer.prototype.getPreload = function () {\n        return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n    };\n    /**\n     * Set the level as number to which we will preload tiles up to.\n     * @param {number} preload The level to preload tiles up to.\n     * @observable\n     * @api\n     */\n    BaseTileLayer.prototype.setPreload = function (preload) {\n        this.set(TileProperty.PRELOAD, preload);\n    };\n    /**\n     * Whether we use interim tiles on error.\n     * @return {boolean} Use interim tiles on error.\n     * @observable\n     * @api\n     */\n    BaseTileLayer.prototype.getUseInterimTilesOnError = function () {\n        return /** @type {boolean} */ (this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR));\n    };\n    /**\n     * Set whether we use interim tiles on error.\n     * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n     * @observable\n     * @api\n     */\n    BaseTileLayer.prototype.setUseInterimTilesOnError = function (useInterimTilesOnError) {\n        this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n    };\n    return BaseTileLayer;\n}(Layer));\nexport default BaseTileLayer;\n//# sourceMappingURL=BaseTile.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport { apply as applyTransform, compose as composeTransform, makeInverse, } from '../../transform.js';\nimport { assign } from '../../obj.js';\nimport { createEmpty, equals, getIntersection, getTopLeft, } from '../../extent.js';\nimport { createTransformString } from '../../render/canvas.js';\nimport { fromUserExtent } from '../../proj.js';\nimport { getUid } from '../../util.js';\nimport { numberSafeCompareFunction } from '../../array.js';\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n */\nvar CanvasTileLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasTileLayerRenderer, _super);\n    /**\n     * @param {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default} tileLayer Tile layer.\n     */\n    function CanvasTileLayerRenderer(tileLayer) {\n        var _this = _super.call(this, tileLayer) || this;\n        /**\n         * Rendered extent has changed since the previous `renderFrame()` call\n         * @type {boolean}\n         */\n        _this.extentChanged = true;\n        /**\n         * @private\n         * @type {?import(\"../../extent.js\").Extent}\n         */\n        _this.renderedExtent_ = null;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.renderedPixelRatio;\n        /**\n         * @protected\n         * @type {import(\"../../proj/Projection.js\").default}\n         */\n        _this.renderedProjection = null;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.renderedRevision;\n        /**\n         * @protected\n         * @type {!Array<import(\"../../Tile.js\").default>}\n         */\n        _this.renderedTiles = [];\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.newTiles_ = false;\n        /**\n         * @protected\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.tmpExtent = createEmpty();\n        /**\n         * @private\n         * @type {import(\"../../TileRange.js\").default}\n         */\n        _this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n        return _this;\n    }\n    /**\n     * @protected\n     * @param {import(\"../../Tile.js\").default} tile Tile.\n     * @return {boolean} Tile is drawable.\n     */\n    CanvasTileLayerRenderer.prototype.isDrawableTile = function (tile) {\n        var tileLayer = this.getLayer();\n        var tileState = tile.getState();\n        var useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n        return (tileState == TileState.LOADED ||\n            tileState == TileState.EMPTY ||\n            (tileState == TileState.ERROR && !useInterimTilesOnError));\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {!import(\"../../Tile.js\").default} Tile.\n     */\n    CanvasTileLayerRenderer.prototype.getTile = function (z, x, y, frameState) {\n        var pixelRatio = frameState.pixelRatio;\n        var projection = frameState.viewState.projection;\n        var tileLayer = this.getLayer();\n        var tileSource = tileLayer.getSource();\n        var tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n        if (tile.getState() == TileState.ERROR) {\n            if (!tileLayer.getUseInterimTilesOnError()) {\n                // When useInterimTilesOnError is false, we consider the error tile as loaded.\n                tile.setState(TileState.LOADED);\n            }\n            else if (tileLayer.getPreload() > 0) {\n                // Preloaded tiles for lower resolutions might have finished loading.\n                this.newTiles_ = true;\n            }\n        }\n        if (!this.isDrawableTile(tile)) {\n            tile = tile.getInterimTile();\n        }\n        return tile;\n    };\n    /**\n     * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n     * @param {number} zoom Zoom level.\n     * @param {import(\"../../Tile.js\").default} tile Tile.\n     * @return {boolean|void} If `false`, the tile will not be considered loaded.\n     */\n    CanvasTileLayerRenderer.prototype.loadedTileCallback = function (tiles, zoom, tile) {\n        if (this.isDrawableTile(tile)) {\n            return _super.prototype.loadedTileCallback.call(this, tiles, zoom, tile);\n        }\n        return false;\n    };\n    /**\n     * Determine whether render should be called.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {boolean} Layer is ready to be rendered.\n     */\n    CanvasTileLayerRenderer.prototype.prepareFrame = function (frameState) {\n        return !!this.getLayer().getSource();\n    };\n    /**\n     * Render the layer.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {HTMLElement} target Target that may be used to render content to.\n     * @return {HTMLElement} The rendered element.\n     */\n    CanvasTileLayerRenderer.prototype.renderFrame = function (frameState, target) {\n        var layerState = frameState.layerStatesArray[frameState.layerIndex];\n        var viewState = frameState.viewState;\n        var projection = viewState.projection;\n        var viewResolution = viewState.resolution;\n        var viewCenter = viewState.center;\n        var rotation = viewState.rotation;\n        var pixelRatio = frameState.pixelRatio;\n        var tileLayer = this.getLayer();\n        var tileSource = tileLayer.getSource();\n        var sourceRevision = tileSource.getRevision();\n        var tileGrid = tileSource.getTileGridForProjection(projection);\n        var z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n        var tileResolution = tileGrid.getResolution(z);\n        var extent = frameState.extent;\n        var layerExtent = layerState.extent && fromUserExtent(layerState.extent, projection);\n        if (layerExtent) {\n            extent = getIntersection(extent, fromUserExtent(layerState.extent, projection));\n        }\n        var tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n        // desired dimensions of the canvas in pixels\n        var width = Math.round(frameState.size[0] * tilePixelRatio);\n        var height = Math.round(frameState.size[1] * tilePixelRatio);\n        if (rotation) {\n            var size = Math.round(Math.sqrt(width * width + height * height));\n            width = size;\n            height = size;\n        }\n        var dx = (tileResolution * width) / 2 / tilePixelRatio;\n        var dy = (tileResolution * height) / 2 / tilePixelRatio;\n        var canvasExtent = [\n            viewCenter[0] - dx,\n            viewCenter[1] - dy,\n            viewCenter[0] + dx,\n            viewCenter[1] + dy,\n        ];\n        var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n        /**\n         * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n         */\n        var tilesToDrawByZ = {};\n        tilesToDrawByZ[z] = {};\n        var findLoadedTiles = this.createLoadedTileFinder(tileSource, projection, tilesToDrawByZ);\n        var tmpExtent = this.tmpExtent;\n        var tmpTileRange = this.tmpTileRange_;\n        this.newTiles_ = false;\n        for (var x = tileRange.minX; x <= tileRange.maxX; ++x) {\n            for (var y = tileRange.minY; y <= tileRange.maxY; ++y) {\n                var tile = this.getTile(z, x, y, frameState);\n                if (this.isDrawableTile(tile)) {\n                    var uid = getUid(this);\n                    if (tile.getState() == TileState.LOADED) {\n                        tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n                        var inTransition = tile.inTransition(uid);\n                        if (!this.newTiles_ &&\n                            (inTransition || this.renderedTiles.indexOf(tile) === -1)) {\n                            this.newTiles_ = true;\n                        }\n                    }\n                    if (tile.getAlpha(uid, frameState.time) === 1) {\n                        // don't look for alt tiles if alpha is 1\n                        continue;\n                    }\n                }\n                var childTileRange = tileGrid.getTileCoordChildTileRange(tile.tileCoord, tmpTileRange, tmpExtent);\n                var covered = false;\n                if (childTileRange) {\n                    covered = findLoadedTiles(z + 1, childTileRange);\n                }\n                if (!covered) {\n                    tileGrid.forEachTileCoordParentTileRange(tile.tileCoord, findLoadedTiles, tmpTileRange, tmpExtent);\n                }\n            }\n        }\n        var canvasScale = tileResolution / viewResolution;\n        // set forward and inverse pixel transforms\n        composeTransform(this.pixelTransform, frameState.size[0] / 2, frameState.size[1] / 2, 1 / tilePixelRatio, 1 / tilePixelRatio, rotation, -width / 2, -height / 2);\n        var canvasTransform = createTransformString(this.pixelTransform);\n        this.useContainer(target, canvasTransform, layerState.opacity);\n        var context = this.context;\n        var canvas = context.canvas;\n        makeInverse(this.inversePixelTransform, this.pixelTransform);\n        // set scale transform for calculating tile positions on the canvas\n        composeTransform(this.tempTransform, width / 2, height / 2, canvasScale, canvasScale, 0, -width / 2, -height / 2);\n        if (canvas.width != width || canvas.height != height) {\n            canvas.width = width;\n            canvas.height = height;\n        }\n        else if (!this.containerReused) {\n            context.clearRect(0, 0, width, height);\n        }\n        if (layerExtent) {\n            this.clipUnrotated(context, frameState, layerExtent);\n        }\n        assign(context, tileSource.getContextOptions());\n        this.preRender(context, frameState);\n        this.renderedTiles.length = 0;\n        /** @type {Array<number>} */\n        var zs = Object.keys(tilesToDrawByZ).map(Number);\n        zs.sort(numberSafeCompareFunction);\n        var clips, clipZs, currentClip;\n        if (layerState.opacity === 1 &&\n            (!this.containerReused ||\n                tileSource.getOpaque(frameState.viewState.projection))) {\n            zs = zs.reverse();\n        }\n        else {\n            clips = [];\n            clipZs = [];\n        }\n        for (var i = zs.length - 1; i >= 0; --i) {\n            var currentZ = zs[i];\n            var currentTilePixelSize = tileSource.getTilePixelSize(currentZ, pixelRatio, projection);\n            var currentResolution = tileGrid.getResolution(currentZ);\n            var currentScale = currentResolution / tileResolution;\n            var dx_1 = currentTilePixelSize[0] * currentScale * canvasScale;\n            var dy_1 = currentTilePixelSize[1] * currentScale * canvasScale;\n            var originTileCoord = tileGrid.getTileCoordForCoordAndZ(getTopLeft(canvasExtent), currentZ);\n            var originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n            var origin_1 = applyTransform(this.tempTransform, [\n                (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n                    tileResolution,\n                (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n                    tileResolution,\n            ]);\n            var tileGutter = tilePixelRatio * tileSource.getGutterForProjection(projection);\n            var tilesToDraw = tilesToDrawByZ[currentZ];\n            for (var tileCoordKey in tilesToDraw) {\n                var tile = /** @type {import(\"../../ImageTile.js\").default} */ (tilesToDraw[tileCoordKey]);\n                var tileCoord = tile.tileCoord;\n                // Calculate integer positions and sizes so that tiles align\n                var floatX = origin_1[0] - (originTileCoord[1] - tileCoord[1]) * dx_1;\n                var nextX = Math.round(floatX + dx_1);\n                var floatY = origin_1[1] - (originTileCoord[2] - tileCoord[2]) * dy_1;\n                var nextY = Math.round(floatY + dy_1);\n                var x = Math.round(floatX);\n                var y = Math.round(floatY);\n                var w = nextX - x;\n                var h = nextY - y;\n                var transition = z === currentZ;\n                var inTransition = transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n                if (!inTransition) {\n                    if (clips) {\n                        // Clip mask for regions in this tile that already filled by a higher z tile\n                        context.save();\n                        currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n                        for (var i_1 = 0, ii = clips.length; i_1 < ii; ++i_1) {\n                            if (z !== currentZ && currentZ < clipZs[i_1]) {\n                                var clip = clips[i_1];\n                                context.beginPath();\n                                // counter-clockwise (outer ring) for current tile\n                                context.moveTo(currentClip[0], currentClip[1]);\n                                context.lineTo(currentClip[2], currentClip[3]);\n                                context.lineTo(currentClip[4], currentClip[5]);\n                                context.lineTo(currentClip[6], currentClip[7]);\n                                // clockwise (inner ring) for higher z tile\n                                context.moveTo(clip[6], clip[7]);\n                                context.lineTo(clip[4], clip[5]);\n                                context.lineTo(clip[2], clip[3]);\n                                context.lineTo(clip[0], clip[1]);\n                                context.clip();\n                            }\n                        }\n                        clips.push(currentClip);\n                        clipZs.push(currentZ);\n                    }\n                    else {\n                        context.clearRect(x, y, w, h);\n                    }\n                }\n                this.drawTileImage(tile, frameState, x, y, w, h, tileGutter, transition, layerState.opacity);\n                if (clips && !inTransition) {\n                    context.restore();\n                }\n                this.renderedTiles.push(tile);\n                this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n            }\n        }\n        this.renderedRevision = sourceRevision;\n        this.renderedResolution = tileResolution;\n        this.extentChanged =\n            !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n        this.renderedExtent_ = canvasExtent;\n        this.renderedPixelRatio = pixelRatio;\n        this.renderedProjection = projection;\n        this.manageTilePyramid(frameState, tileSource, tileGrid, pixelRatio, projection, extent, z, tileLayer.getPreload());\n        this.scheduleExpireCache(frameState, tileSource);\n        this.postRender(context, frameState);\n        if (layerState.extent) {\n            context.restore();\n        }\n        if (canvasTransform !== canvas.style.transform) {\n            canvas.style.transform = canvasTransform;\n        }\n        return this.container;\n    };\n    /**\n     * @param {import(\"../../ImageTile.js\").default} tile Tile.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {number} x Left of the tile.\n     * @param {number} y Top of the tile.\n     * @param {number} w Width of the tile.\n     * @param {number} h Height of the tile.\n     * @param {number} gutter Tile gutter.\n     * @param {boolean} transition Apply an alpha transition.\n     * @param {number} opacity Opacity.\n     */\n    CanvasTileLayerRenderer.prototype.drawTileImage = function (tile, frameState, x, y, w, h, gutter, transition, opacity) {\n        var image = this.getTileImage(tile);\n        if (!image) {\n            return;\n        }\n        var uid = getUid(this);\n        var tileAlpha = transition ? tile.getAlpha(uid, frameState.time) : 1;\n        var alpha = opacity * tileAlpha;\n        var alphaChanged = alpha !== this.context.globalAlpha;\n        if (alphaChanged) {\n            this.context.save();\n            this.context.globalAlpha = alpha;\n        }\n        this.context.drawImage(image, gutter, gutter, image.width - 2 * gutter, image.height - 2 * gutter, x, y, w, h);\n        if (alphaChanged) {\n            this.context.restore();\n        }\n        if (tileAlpha !== 1) {\n            frameState.animate = true;\n        }\n        else if (transition) {\n            tile.endTransition(uid);\n        }\n    };\n    /**\n     * @return {HTMLCanvasElement} Image\n     */\n    CanvasTileLayerRenderer.prototype.getImage = function () {\n        var context = this.context;\n        return context ? context.canvas : null;\n    };\n    /**\n     * Get the image from a tile.\n     * @param {import(\"../../ImageTile.js\").default} tile Tile.\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.getTileImage = function (tile) {\n        return tile.getImage();\n    };\n    /**\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.scheduleExpireCache = function (frameState, tileSource) {\n        if (tileSource.canExpireCache()) {\n            /**\n             * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n             * @param {import(\"../../PluggableMap.js\").default} map Map.\n             * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n             */\n            var postRenderFunction = function (tileSource, map, frameState) {\n                var tileSourceKey = getUid(tileSource);\n                if (tileSourceKey in frameState.usedTiles) {\n                    tileSource.expireCache(frameState.viewState.projection, frameState.usedTiles[tileSourceKey]);\n                }\n            }.bind(null, tileSource);\n            frameState.postRenderFunctions.push(\n            /** @type {import(\"../../PluggableMap.js\").PostRenderFunction} */ (postRenderFunction));\n        }\n    };\n    /**\n     * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n     * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n     * @param {import('../../Tile.js').default} tile Tile.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.updateUsedTiles = function (usedTiles, tileSource, tile) {\n        // FIXME should we use tilesToDrawByZ instead?\n        var tileSourceKey = getUid(tileSource);\n        if (!(tileSourceKey in usedTiles)) {\n            usedTiles[tileSourceKey] = {};\n        }\n        usedTiles[tileSourceKey][tile.getKey()] = true;\n    };\n    /**\n     * Manage tile pyramid.\n     * This function performs a number of functions related to the tiles at the\n     * current zoom and lower zoom levels:\n     * - registers idle tiles in frameState.wantedTiles so that they are not\n     *   discarded by the tile queue\n     * - enqueues missing tiles\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n     * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n     * @param {import(\"../../extent.js\").Extent} extent Extent.\n     * @param {number} currentZ Current Z.\n     * @param {number} preload Load low resolution tiles up to 'preload' levels.\n     * @param {function(import(\"../../Tile.js\").default)=} opt_tileCallback Tile callback.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.manageTilePyramid = function (frameState, tileSource, tileGrid, pixelRatio, projection, extent, currentZ, preload, opt_tileCallback) {\n        var tileSourceKey = getUid(tileSource);\n        if (!(tileSourceKey in frameState.wantedTiles)) {\n            frameState.wantedTiles[tileSourceKey] = {};\n        }\n        var wantedTiles = frameState.wantedTiles[tileSourceKey];\n        var tileQueue = frameState.tileQueue;\n        var minZoom = tileGrid.getMinZoom();\n        var tileCount = 0;\n        var tile, tileRange, tileResolution, x, y, z;\n        for (z = minZoom; z <= currentZ; ++z) {\n            tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n            tileResolution = tileGrid.getResolution(z);\n            for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n                for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n                    if (currentZ - z <= preload) {\n                        ++tileCount;\n                        tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n                        if (tile.getState() == TileState.IDLE) {\n                            wantedTiles[tile.getKey()] = true;\n                            if (!tileQueue.isKeyQueued(tile.getKey())) {\n                                tileQueue.enqueue([\n                                    tile,\n                                    tileSourceKey,\n                                    tileGrid.getTileCoordCenter(tile.tileCoord),\n                                    tileResolution,\n                                ]);\n                            }\n                        }\n                        if (opt_tileCallback !== undefined) {\n                            opt_tileCallback(tile);\n                        }\n                    }\n                    else {\n                        tileSource.useTile(z, x, y, projection);\n                    }\n                }\n            }\n        }\n        tileSource.updateCacheSize(tileCount, projection);\n    };\n    return CanvasTileLayerRenderer;\n}(CanvasLayerRenderer));\n/**\n * @function\n * @return {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default}\n */\nCanvasTileLayerRenderer.prototype.getLayer;\nexport default CanvasTileLayerRenderer;\n//# sourceMappingURL=TileLayer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @api\n */\nvar TileLayer = /** @class */ (function (_super) {\n    __extends(TileLayer, _super);\n    /**\n     * @param {import(\"./BaseTile.js\").Options=} opt_options Tile layer options.\n     */\n    function TileLayer(opt_options) {\n        return _super.call(this, opt_options) || this;\n    }\n    /**\n     * Create a renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n     * @protected\n     */\n    TileLayer.prototype.createRenderer = function () {\n        return new CanvasTileLayerRenderer(this);\n    };\n    return TileLayer;\n}(BaseTileLayer));\nexport default TileLayer;\n//# sourceMappingURL=Tile.js.map","import \"ol/ol.css\";\nimport ImageLayer from \"ol/layer/Image\";\nimport ImageWMS from \"ol/source/ImageWMS\";\nimport Map from \"ol/Map\";\nimport View from \"ol/View\";\nimport OSM from \"ol/source/OSM\";\nimport TileLayer from \"ol/layer/Tile\";\n\nvar basemap = new TileLayer({\n  source: new OSM()\n});\n\nvar wmsSourceF = new ImageWMS({\n  url:\n    \"https://arcgis.cuahsi.org/arcgis/services/NWM/nwm_app_data/MapServer/WmsServer?\",\n  params: {\n    LAYERS: [\"1\"]\n  },\n  ratio: 1,\n  serverType: \"geoserver\",\n  crossOrigin: \"anonymous\"\n});\n\nvar NWMF = new ImageLayer({\n  minZoom: 1,\n  extent: [-15884991, 2270341, -5455066, 8338219],\n  source: wmsSourceF\n});\n\nvar view = new View({\n  center: [-10997148, 4569099],\n  zoom: 4\n});\n\nvar map = new Map({\n  layers: [basemap, NWMF],\n  target: \"map\",\n  view: view\n});\n\nmap.on(\"singleclick\", function (evt) {\n  /*document.getElementById(\"info\").innerHTML = \"\";*/\n  var viewResolution = /** @type {number} */ (view.getResolution());\n  var url = wmsSourceF.getFeatureInfoUrl(\n    evt.coordinate,\n    viewResolution,\n    \"EPSG:3857\",\n    { INFO_FORMAT: \"text/html\" }\n  );\n  if (url) {\n    fetch(url)\n      .then(function (response) {\n        return response.text();\n      })\n      .then(function (html) {\n        document.getElementById(\"info\").innerHTML = html;\n      });\n  }\n});\n\nmap.on(\"pointermove\", function (evt) {\n  if (evt.dragging) {\n    return;\n  }\n  var pixel = map.getEventPixel(evt.originalEvent);\n  var hit = map.forEachLayerAtPixel(pixel, function () {\n    return true;\n  });\n  map.getTargetElement().style.cursor = hit ? \"pointer\" : \"\";\n});\n"],"names":["$parcel$export","e","n","v","Object","defineProperty","get","enumerable","$003acff01e79c0a73122c747343d2e59$export$default","BaseEvent","type","this","propagationStopped","target","prototype","preventDefault","stopPropagation","$f7bbc97715b7cef936b659025f276afb$export$default","Disposable","disposed","dispose","disposeInternal","$7c21d7646a0313abf7b847efa68bfceb$export$numberSafeCompareFunction","a","b","$7c21d7646a0313abf7b847efa68bfceb$export$linearFindNearest","arr","direction","length","i","$7c21d7646a0313abf7b847efa68bfceb$export$extend","data","extension","Array","isArray","$7c21d7646a0313abf7b847efa68bfceb$export$equals","arr1","arr2","len1","$8ff7925ef9afa7e69604ab9620edac22$export$TRUE","$8ff7925ef9afa7e69604ab9620edac22$export$FALSE","$8ff7925ef9afa7e69604ab9620edac22$export$VOID","$e1ac967f910869e98e549bfd20a1853c$export$assign","assign","var_sources","TypeError","output","ii","arguments","source","key","hasOwnProperty","$e1ac967f910869e98e549bfd20a1853c$export$clear","object","property","$e1ac967f910869e98e549bfd20a1853c$export$getValues","values","push","extendStatics","$99fe3f3343ef18166bd431edc467d890$var$__extends","d","setPrototypeOf","__proto__","p","call","__","constructor","create","$99fe3f3343ef18166bd431edc467d890$export$default","_super","Target","opt_target","_this","eventTarget_","pendingRemovals_","dispatching_","listeners_","addEventListener","listener","listeners","listenersForType","indexOf","dispatchEvent","event","evt","propagate","dispatching","pendingRemovals","handleEvent","pr","removeEventListener","getListeners","undefined","hasListener","opt_type","keys","index","splice","$7961378a294a4943979a10a4df4a3fcf$export$listen","opt_this","opt_once","bind","originalListener_1","apply","eventsKey","$7961378a294a4943979a10a4df4a3fcf$export$listenOnce","$7961378a294a4943979a10a4df4a3fcf$export$unlistenByKey","$02e80757fefec0a9636ae28d17c9fab2$var$__extends","__extends","$02e80757fefec0a9636ae28d17c9fab2$export$default","Observable","revision_","changed","getRevision","on","len","once","ol_key","un","$02e80757fefec0a9636ae28d17c9fab2$export$unByKey","$cd365e7aabd14aaf6df378f6a61e84d7$export$abstract","Error","$cd365e7aabd14aaf6df378f6a61e84d7$var$uidCounter_","$cd365e7aabd14aaf6df378f6a61e84d7$export$getUid","obj","ol_uid","String","$cd365e7aabd14aaf6df378f6a61e84d7$export$VERSION","$a41f90da440d5a4a421775ee47a2c536$var$__extends","$a41f90da440d5a4a421775ee47a2c536$export$ObjectEvent","ObjectEvent","oldValue","$a41f90da440d5a4a421775ee47a2c536$export$default","BaseObject","opt_values","values_","setProperties","value","getKeys","getProperties","hasProperties","notify","eventType","$a41f90da440d5a4a421775ee47a2c536$export$getChangeEventType","set","opt_silent","applyProperties","unset","$a41f90da440d5a4a421775ee47a2c536$var$changeEventTypeCache","$fd652548d0f540d94aaff6aa830746d2$var$__extends","$fd652548d0f540d94aaff6aa830746d2$export$default","AssertionError","code","message","split","name","$2ce41f61858dd350a0b2670bdab4e597$export$assert","assertion","errorCode","$916dab65013919ad0345478f9a9f4e0f$export$clamp","min","max","Math","$916dab65013919ad0345478f9a9f4e0f$export$cosh","cosh","x","y","exp","$916dab65013919ad0345478f9a9f4e0f$export$log2","log2","log","LOG2E","$916dab65013919ad0345478f9a9f4e0f$export$squaredSegmentDistance","x1","y1","x2","y2","dx","dy","t","$916dab65013919ad0345478f9a9f4e0f$export$squaredDistance","$916dab65013919ad0345478f9a9f4e0f$export$toRadians","angleInDegrees","PI","$916dab65013919ad0345478f9a9f4e0f$export$modulo","r","$916dab65013919ad0345478f9a9f4e0f$export$lerp","$3a8294651627eb74246351f5b596cf68$var$__extends","$3a8294651627eb74246351f5b596cf68$export$default","BaseLayer","options","properties","opacity","visible","zIndex","maxResolution","Infinity","minResolution","minZoom","maxZoom","className_","className","state_","getClassName","getLayerState","opt_managed","state","layer","managed","getZIndex","round","getOpacity","sourceState","getSourceState","getVisible","extent","getExtent","getMaxResolution","getMinResolution","getMinZoom","getMaxZoom","getLayersArray","opt_array","getLayerStatesArray","opt_states","setExtent","setMaxResolution","setMinResolution","setMaxZoom","setMinZoom","setOpacity","setVisible","setZIndex","zindex","$1935b85c22cfc539ea58e141ab0b37d6$var$__extends","$1935b85c22cfc539ea58e141ab0b37d6$export$default","Layer","baseOptions","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","renderer_","render","map","setMap","handleSourcePropertyChange_","setSource","array","states","getSource","getState","handleSourceChange_","getFeatures","pixel","frameState","layerRenderer","getRenderer","prepareFrame","renderFrame","layerStatesArray","layerState","some","arrayLayerState","$c81aa09fb137106970dbc142b1e89ec3$export$default","createRenderer","hasRenderer","$1935b85c22cfc539ea58e141ab0b37d6$export$inView","viewState","resolution","zoom","$3d27bea07c66fe1fc15ffd1548ea40c2$var$__extends","$3d27bea07c66fe1fc15ffd1548ea40c2$export$default","BaseImageLayer","opt_options","$ae15ed96a99c1303ea67938747c94fca$var$__extends","$ae15ed96a99c1303ea67938747c94fca$export$default","LayerRenderer","boundHandleImageChange_","handleImageChange_","layer_","declutterExecutorGroup","loadedTileCallback","tiles","tile","tileCoord","toString","createLoadedTileFinder","projection","tileRange","callback","forEachLoadedTile","forEachFeatureAtCoordinate","coordinate","hitTolerance","matches","getDataAtPixel","getLayer","handleFontsChanged","renderIfReadyAndVisible","loadImage","image","imageState","load","$1a95b8d63eeb9d5cd5e2742791ea7ab2$var$__extends","$1a95b8d63eeb9d5cd5e2742791ea7ab2$export$default","RenderEvent","opt_inversePixelTransform","opt_frameState","opt_context","inversePixelTransform","context","$af95442a94d1862a138c401177ef0c4b$var$tmp_","$af95442a94d1862a138c401177ef0c4b$export$apply","transform","$af95442a94d1862a138c401177ef0c4b$export$compose","dx1","dy1","sx","sy","angle","dx2","dy2","sin","cos","$af95442a94d1862a138c401177ef0c4b$export$makeInverse","mat","det","c","f","$af95442a94d1862a138c401177ef0c4b$export$toString","join","$8ebfb36ef5532881c5652b708da2c120$export$boundingExtent","coordinates","$8ebfb36ef5532881c5652b708da2c120$export$createEmpty","$8ebfb36ef5532881c5652b708da2c120$export$extendCoordinate","$8ebfb36ef5532881c5652b708da2c120$export$closestSquaredDistanceXY","$8ebfb36ef5532881c5652b708da2c120$export$containsCoordinate","$8ebfb36ef5532881c5652b708da2c120$export$containsXY","$8ebfb36ef5532881c5652b708da2c120$export$containsExtent","extent1","extent2","$8ebfb36ef5532881c5652b708da2c120$export$coordinateRelationship","minX","minY","maxX","maxY","relationship","$8ebfb36ef5532881c5652b708da2c120$export$createOrUpdate","opt_extent","$8ebfb36ef5532881c5652b708da2c120$export$createOrUpdateEmpty","$8ebfb36ef5532881c5652b708da2c120$export$equals","$8ebfb36ef5532881c5652b708da2c120$export$extendCoordinates","$8ebfb36ef5532881c5652b708da2c120$export$extendFlatCoordinates","flatCoordinates","offset","end","stride","$8ebfb36ef5532881c5652b708da2c120$export$extendXY","$8ebfb36ef5532881c5652b708da2c120$export$forEachCorner","val","$8ebfb36ef5532881c5652b708da2c120$export$getBottomLeft","$8ebfb36ef5532881c5652b708da2c120$export$getBottomRight","$8ebfb36ef5532881c5652b708da2c120$export$getTopRight","$8ebfb36ef5532881c5652b708da2c120$export$getTopLeft","$8ebfb36ef5532881c5652b708da2c120$export$getArea","area","$8ebfb36ef5532881c5652b708da2c120$export$isEmpty","$8ebfb36ef5532881c5652b708da2c120$export$getWidth","$8ebfb36ef5532881c5652b708da2c120$export$getHeight","$8ebfb36ef5532881c5652b708da2c120$export$getCenter","$8ebfb36ef5532881c5652b708da2c120$export$getCorner","corner","$8ebfb36ef5532881c5652b708da2c120$export$getForViewAndSize","center","rotation","size","cosRotation","sinRotation","xCos","xSin","yCos","ySin","x0","x3","y0","y3","$8ebfb36ef5532881c5652b708da2c120$export$getIntersection","intersection","$8ebfb36ef5532881c5652b708da2c120$export$intersects","$8ebfb36ef5532881c5652b708da2c120$export$applyTransform","transformFn","opt_stops","width","height","xs","ys","l","$8ebfb36ef5532881c5652b708da2c120$var$_boundingExtentXYs","$2016f251f21b02e27a5ca36c37510540$var$ua","navigator","userAgent","toLowerCase","$2016f251f21b02e27a5ca36c37510540$export$FIREFOX","$2016f251f21b02e27a5ca36c37510540$export$WEBKIT","$2016f251f21b02e27a5ca36c37510540$export$MAC","$2016f251f21b02e27a5ca36c37510540$export$DEVICE_PIXEL_RATIO","devicePixelRatio","$2016f251f21b02e27a5ca36c37510540$export$WORKER_OFFSCREEN_CANVAS","WorkerGlobalScope","OffscreenCanvas","self","$2016f251f21b02e27a5ca36c37510540$export$IMAGE_DECODE","Image","decode","$2016f251f21b02e27a5ca36c37510540$export$PASSIVE_EVENT_LISTENERS","passive","window","error","$8b566ca8fd3b2d9c184057ba73cbf345$export$createCanvasContext2D","opt_width","opt_height","opt_canvasPool","canvas","shift","document","createElement","getContext","$8b566ca8fd3b2d9c184057ba73cbf345$export$replaceNode","newNode","oldNode","parent","parentNode","replaceChild","$8b566ca8fd3b2d9c184057ba73cbf345$export$removeNode","node","removeChild","$7ef0aa4943b3f1208e19af1336a3f8f6$export$CLASS_HIDDEN","$7ef0aa4943b3f1208e19af1336a3f8f6$export$CLASS_CONTROL","$7ef0aa4943b3f1208e19af1336a3f8f6$export$CLASS_COLLAPSED","$7ef0aa4943b3f1208e19af1336a3f8f6$var$fontRegEx","RegExp","$7ef0aa4943b3f1208e19af1336a3f8f6$var$fontRegExMatchIndex","$7ef0aa4943b3f1208e19af1336a3f8f6$export$getFontParameters","fontSpec","match","style","lineHeight","weight","variant","families","family","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$checkedFonts","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$labelCache","setSize","console","warn","$d79b9b8aceb2a0d1337b4e6f69d78e46$var$measureFont","$d79b9b8aceb2a0d1337b4e6f69d78e46$var$measureContext","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$textHeights","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$registerFont","interval","referenceWidth","referenceFonts","text","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$measureTextWidth","check","done","fonts","font","clearInterval","$d79b9b8aceb2a0d1337b4e6f69d78e46$var$measureText","measureText","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$rotateAtOffset","offsetX","offsetY","translate","rotate","$d79b9b8aceb2a0d1337b4e6f69d78e46$var$createTransformStringCanvas","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$createTransformString","$ac230d10056414a40eb774bd091234f1$var$__extends","$ac230d10056414a40eb774bd091234f1$export$default","CanvasLayerRenderer","container","renderedResolution","tempTransform","pixelTransform","containerReused","useContainer","layerClassName","firstElementChild","HTMLCanvasElement","position","appendChild","left","transformOrigin","clip","pixelRatio","halfWidth","halfHeight","topLeft","topRight","bottomRight","bottomLeft","coordinateToPixelTransform","save","beginPath","moveTo","lineTo","clipUnrotated","inverted","dispatchRenderEvent_","event_1","preRender","postRender","getRenderTransform","renderPixel","slice","layerExtent","renderCoordinate","pixelToCoordinateTransform","newCanvas","newContext","clearRect","drawImage","getImageData","err","Uint8Array","$df0b68b08946bf3d8de6eeca4fba3a5f$export$default","$df0b68b08946bf3d8de6eeca4fba3a5f$export$METERS_PER_UNIT","$1514cc7c23ad291d61b727f0ef5e4246$export$default","Projection","code_","units_","units","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","canWrapX","getCode","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setWorldExtent","setGetPointResolution","func","getPointResolutionFunc","$7d5079714e2786ec6bee07910f0d8a86$var$__extends","$7d5079714e2786ec6bee07910f0d8a86$export$RADIUS","$7d5079714e2786ec6bee07910f0d8a86$export$HALF_SIZE","$7d5079714e2786ec6bee07910f0d8a86$export$EXTENT","$7d5079714e2786ec6bee07910f0d8a86$export$WORLD_EXTENT","$7d5079714e2786ec6bee07910f0d8a86$export$MAX_SAFE_Y","tan","$7d5079714e2786ec6bee07910f0d8a86$var$EPSG3857Projection","EPSG3857Projection","point","$7d5079714e2786ec6bee07910f0d8a86$export$PROJECTIONS","$7d5079714e2786ec6bee07910f0d8a86$export$fromEPSG4326","input","opt_output","opt_dimension","dimension","$7d5079714e2786ec6bee07910f0d8a86$export$toEPSG4326","atan","$655738a66489cc3574c072262645bff6$var$__extends","$655738a66489cc3574c072262645bff6$export$EXTENT","$655738a66489cc3574c072262645bff6$export$METERS_PER_UNIT","$655738a66489cc3574c072262645bff6$var$EPSG4326Projection","EPSG4326Projection","opt_axisOrientation","$655738a66489cc3574c072262645bff6$export$PROJECTIONS","$0ba2913765cbb83278246e730dbcdcdf$var$cache","$6cb154572a1cc3d19ea74b1e9a3a7861$var$transforms","$6cb154572a1cc3d19ea74b1e9a3a7861$export$add","destination","sourceCode","destinationCode","$525020a649871896a05d6fe288616b91$export$DEFAULT_RADIUS","$525020a649871896a05d6fe288616b91$export$getDistance","c1","c2","opt_radius","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","sqrt","$29884e9b826cd25109649ab0c360e769$export$equals","coordinate1","coordinate2","equals","$29884e9b826cd25109649ab0c360e769$export$rotate","cosAngle","sinAngle","$29884e9b826cd25109649ab0c360e769$export$wrapX","worldWidth","worldsAway","opt_sourceExtentWidth","projectionExtent","sourceExtentWidth","floor","$29884e9b826cd25109649ab0c360e769$export$getWorldsAway","$524e9c84a4c58bd58490804da4c772c6$export$cloneTransform","$524e9c84a4c58bd58490804da4c772c6$export$identityTransform","$524e9c84a4c58bd58490804da4c772c6$export$addProjection","$524e9c84a4c58bd58490804da4c772c6$export$get","projectionLike","replace","$524e9c84a4c58bd58490804da4c772c6$export$getPointResolution","opt_units","pointResolution","getter","toEPSG4326_1","$524e9c84a4c58bd58490804da4c772c6$export$getTransformFromProjections","vertices","$524e9c84a4c58bd58490804da4c772c6$export$addEquivalentProjections","projections","forEach","$524e9c84a4c58bd58490804da4c772c6$export$addProjections","$524e9c84a4c58bd58490804da4c772c6$export$createProjection","defaultCode","$524e9c84a4c58bd58490804da4c772c6$export$equivalent","projection1","projection2","equalUnits","sourceProjection","destinationProjection","transformFunc","$524e9c84a4c58bd58490804da4c772c6$export$getTransform","$524e9c84a4c58bd58490804da4c772c6$export$transform","$524e9c84a4c58bd58490804da4c772c6$export$transformExtent","projections2","forwardTransform","inverseTransform","$524e9c84a4c58bd58490804da4c772c6$var$userProjection","$524e9c84a4c58bd58490804da4c772c6$export$toUserCoordinate","$524e9c84a4c58bd58490804da4c772c6$export$fromUserCoordinate","destProjection","$524e9c84a4c58bd58490804da4c772c6$export$fromUserExtent","$524e9c84a4c58bd58490804da4c772c6$export$addEquivalentTransforms","$499eb9c8328aa11d5cbac56ecc1ff22b$var$__extends","$499eb9c8328aa11d5cbac56ecc1ff22b$export$default","CanvasImageLayerRenderer","imageLayer","image_","getImage","layerIndex","viewResolution","imageSource","hints","viewHints","renderedExtent","INTERACTING","imageExtent","imageResolution","getResolution","imagePixelRatio","getPixelRatio","viewCenter","scale","size_1","canvasTransform","clipped","img","dw","dh","getContextOptions","previousAlpha","globalAlpha","restore","$f43cb167c7c143462deaaf9c3488e22b$var$__extends","$f43cb167c7c143462deaaf9c3488e22b$export$default","ImageLayer","$dffde8f1acde674bc74a24601c2788a7$export$DEFAULT_WMS_VERSION","$dffde8f1acde674bc74a24601c2788a7$export$IMAGE_SMOOTHING_DISABLED","imageSmoothingEnabled","msImageSmoothingEnabled","$e65a38a3837120ad833711b5930f5912$var$__extends","$e65a38a3837120ad833711b5930f5912$export$default","ImageBase","pixelRatio_","$7e4c33869bbc09ad771e58efcd7791e2$var$brokenDiagonalRendering_","$3a0ea260bd0161734cb5e603b9086c9d$export$default","Triangulation","sourceProj","targetProj","targetExtent","maxSourceExtent","errorThreshold","opt_destinationResolution","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","ceil","addQuad_","leftBound_1","triangle","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","targetCoverageX","targetQuadExtent","isFinite","isNotFinite","centerSrc","centerSrcEstimX","abs","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","src","getTriangles","$7e4c33869bbc09ad771e58efcd7791e2$var$drawTestTriangle","ctx","u1","v1","u2","v2","closePath","fillRect","$7e4c33869bbc09ad771e58efcd7791e2$var$verifyBrokenDiagonalRendering","$7e4c33869bbc09ad771e58efcd7791e2$export$calculateSourceResolution","targetCenter","targetResolution","sourceCenter","sourceResolution","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","$7e4c33869bbc09ad771e58efcd7791e2$export$render","triangulation","sources","gutter","opt_renderEdges","opt_contextOptions","pixelRound","globalCompositeOperation","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","affineCoefs","maxRow","maxEl","absValue","tmp","j","coef","k","m","augmentedMatrix","fillStyle","$7e4c33869bbc09ad771e58efcd7791e2$var$isBrokenDiagonalRendering","ud","vd","step","steps","strokeStyle","lineWidth","stroke","$e27d29023845195edf41c541933e5848$var$__extends","$e27d29023845195edf41c541933e5848$export$default","ReprojImage","getImageFunction","maxTargetExtent","limitedTargetExtent","sourceImage","IDLE","sourcePixelRatio","triangulation_","targetResolution_","targetExtent_","sourceImage_","sourcePixelRatio_","contextOptions_","canvas_","sourceListenerKey_","unlistenSource_","getProjection","reproject_","LOADED","$6a9611a0560ac769e67fadc6cfef9a2c$var$__extends","$6a9611a0560ac769e67fadc6cfef9a2c$export$default","Source","projection_","attributions_","$6a9611a0560ac769e67fadc6cfef9a2c$var$adaptAttributions","attributions","attributionsCollapsible_","attributionsCollapsible","loading","wrapX_","wrapX","getAttributions","getAttributionsCollapsible","getResolutions","getWrapX","refresh","setAttributions","setState","attributionLike","$9f9942bd3646bc3a472cff9f79e5aa10$var$__extends","$9f9942bd3646bc3a472cff9f79e5aa10$export$ImageSourceEventType","$9f9942bd3646bc3a472cff9f79e5aa10$export$ImageSourceEvent","ImageSourceEvent","$9f9942bd3646bc3a472cff9f79e5aa10$export$default","ImageSource","resolutions_","resolutions","reprojectedImage_","reprojectedRevision_","imageSmoothing","findNearestResolution","idx","getImageInternal","handleImageChange","$9f9942bd3646bc3a472cff9f79e5aa10$export$defaultImageLoadFunction","$2fc4e1887f4ffa14e16ea647fd21482c$var$__extends","$2fc4e1887f4ffa14e16ea647fd21482c$export$default","ImageWrapper","crossOrigin","imageLoadFunction","src_","unlisten_","imageLoadFunction_","handleImageError_","unlistenImage_","handleImageLoad_","$2fc4e1887f4ffa14e16ea647fd21482c$export$listenImage","setImage","loadHandler","errorHandler","promise","listening_1","then","catch","listenerKeys","$c965b52f2e69fc1d4b0c393ef9deb65b$export$appendParams","uri","params","keyParams","encodeURIComponent","qs","$6aaca36e7c8fd08325e18f6fdd71a3e3$var$__extends","$6aaca36e7c8fd08325e18f6fdd71a3e3$var$GETFEATUREINFO_IMAGE_SIZE","$6aaca36e7c8fd08325e18f6fdd71a3e3$export$default","ImageWMS","crossOrigin_","url_","url","params_","v13_","updateV13_","serverType_","serverType","hidpi_","hidpi","imageSize_","renderedRevision_","ratio_","ratio","getFeatureInfoUrl","projectionObj","sourceProjectionObj","baseParams","SERVICE","VERSION","REQUEST","FORMAT","TRANSPARENT","QUERY_LAYERS","getRequestUrl_","getLegendUrl","layers","LAYERS","mpu","getParams","viewExtent","requestExtent","getImageLoadFunction","dpi","bbox","substr","getUrl","setImageLoadFunction","setUrl","updateParams","version","s1","s2","n1","parseInt","n2","$ddc7f5de3664aab559d1c545c366e59d$var$HEX_COLOR_RE_","$ddc7f5de3664aab559d1c545c366e59d$var$NAMED_COLOR_RE_","$ddc7f5de3664aab559d1c545c366e59d$export$asString","color","g","$ddc7f5de3664aab559d1c545c366e59d$export$toString","cache","cacheSize","$ddc7f5de3664aab559d1c545c366e59d$export$normalize","$80553d92e1fbcb82d752b6de833f9cf3$var$getKey","$80553d92e1fbcb82d752b6de833f9cf3$export$shared","$80553d92e1fbcb82d752b6de833f9cf3$export$default","IconImageCache","cache_","cacheSize_","maxCacheSize_","clear","canExpireCache","expire","iconImage","maxCacheSize","$52488a0195cf0e38344877f5a3896831$var$__extends","$52488a0195cf0e38344877f5a3896831$export$default","MapRenderer","map_","dispatchRenderEvent","calculateMatrices2D","checkWrapped","thisArg","layerFilter","thisArg2","result","feature","geometry","translatedCoordinate","offsets","layerStates","numLayers","tmpCoord","callback_1","order","distanceSq","sort","forEachLayerAtPixel","hasFeatureAtCoordinate","getMap","scheduleExpireIconCache","postRenderFunctions","$52488a0195cf0e38344877f5a3896831$var$expireIconCache","$2ae21f590be041e7827bf48426c0766a$var$__extends","$2ae21f590be041e7827bf48426c0766a$export$default","CompositeMapRenderer","fontChangeListenerKey_","redrawText","element_","getViewport","insertBefore","firstChild","children_","renderedVisible_","declutterLayers","previousElement","element","renderDeclutter","children","oldChildren","childNodes","oldChild","newChild","display","$e6a59fbd122f687b33c2f382a3c7634b$var$__extends","$e6a59fbd122f687b33c2f382a3c7634b$var$Property","$e6a59fbd122f687b33c2f382a3c7634b$export$CollectionEvent","CollectionEvent","opt_element","opt_index","$e6a59fbd122f687b33c2f382a3c7634b$export$default","Collection","unique_","unique","array_","assertUnique_","updateLength_","getLength","pop","extend","getArray","item","insertAt","elem","removeAt","remove","prev","setAt","opt_except","$d66bdf9af75d90254b022f9a4b768a43$var$__extends","$d66bdf9af75d90254b022f9a4b768a43$var$Property","$d66bdf9af75d90254b022f9a4b768a43$export$default","LayerGroup","layersListenerKeys_","listenerKeys_","handleLayersChanged_","setLayers","handleLayerChange_","getLayers","id","handleLayersAdd_","handleLayersRemove_","layersArray","collectionEvent","pos","ownLayerState","$f8e1a00fe597e09d283a3697649a8ad5$var$__extends","$f8e1a00fe597e09d283a3697649a8ad5$export$default","MapEvent","$5185059e8a82c1ae03c4e1ba7159b318$var$__extends","$5185059e8a82c1ae03c4e1ba7159b318$export$default","MapBrowserEvent","originalEvent","opt_dragging","pixel_","coordinate_","dragging","getEventPixel","configurable","getCoordinateFromPixel","SINGLECLICK","CLICK","DBLCLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","$75ed2fc91ec6cb8478583ef358a9dd4d$var$__extends","$75ed2fc91ec6cb8478583ef358a9dd4d$export$default","MapBrowserEventHandler","moveTolerance","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerdownListenerKey_","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayEvent_","boundHandleTouchMove_","handleTouchMove_","emulateClick_","pointerEvent","newEvent","clearTimeout","setTimeout","updateActivePointers_","pointerId","handlePointerUp_","isMouseActionButton_","button","doc","getOwnerDocument","handlePointerMove_","getRootNode","isMoving_","defaultPrevented","clientX","clientY","$eeb9190850355aed8fc5d92349a26bc6$export$DROP","$eeb9190850355aed8fc5d92349a26bc6$export$default","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isEmpty","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","$6bfe069e85349c527971d875462feeac$var$__extends","$6bfe069e85349c527971d875462feeac$export$default","TileQueue","tilePriorityFunction","tileChangeCallback","getKey","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","getTilesLoading","hifi","EMPTY","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","$6bfe069e85349c527971d875462feeac$export$getTilePriority","tileSourceKey","tileCenter","tileResolution","wantedTiles","deltaX","deltaY","$c1e1f889297e115e83bec772196e32bf$export$DEFAULT_TILE_SIZE","$61ba71c2b15c8b7e6577526180db0da5$export$createExtent","onlyCenter","smooth","opt_isMoving","opt_centerShift","viewWidth","viewHeight","shiftX","shiftY","$61ba71c2b15c8b7e6577526180db0da5$export$none","$75cf935c4655e9fc21b1ade56ed27175$var$getViewportClampedResolution","maxExtent","viewportSize","showFullExtent","xResolution","yResolution","$75cf935c4655e9fc21b1ade56ed27175$var$getSmoothClampedResolution","$75cf935c4655e9fc21b1ade56ed27175$export$createMinMaxResolution","opt_smooth","opt_maxExtent","opt_showFullExtent","cappedMaxRes","$4c6a822b604dbfa9a10722399f7335d0$export$disable","$4c6a822b604dbfa9a10722399f7335d0$export$none","$8717569d70d85bd7f28c8c1b2c37daee$export$easeIn","pow","$8717569d70d85bd7f28c8c1b2c37daee$export$easeOut","$8717569d70d85bd7f28c8c1b2c37daee$export$inAndOut","$8717569d70d85bd7f28c8c1b2c37daee$export$linear","$3f4f29b0a4be88d8241f933ff6121a33$export$transform2D","opt_dest","dest","$a17c336463d573a615343832f6e09aa8$var$__extends","$a17c336463d573a615343832f6e09aa8$var$tmpTransform","$a17c336463d573a615343832f6e09aa8$export$default","Geometry","fn","lastResult","lastArgs","lastThis","called","extentRevision_","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","simplifyTransformedInternal","revision","squaredTolerance","opt_transform","getSimplifiedGeometry","clone","applyTransform","nextArgs","simplifyTransformed","closestPointXY","closestPoint","minSquaredDistance","containsXY","coord","getClosestPoint","opt_closestPoint","NaN","intersectsCoordinate","computeExtent","isNaN","anchor","opt_sy","opt_anchor","simplify","tolerance","getType","intersectsExtent","inCoordinates","outCoordinates","pixelExtent","projectedExtent","$57ce72c0539154dec2abdc81ffcff6df$var$__extends","$57ce72c0539154dec2abdc81ffcff6df$export$default","SimpleGeometry","layout","getCoordinates","getFirstCoordinate","getFlatCoordinates","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","getStride","setFlatCoordinates","$57ce72c0539154dec2abdc81ffcff6df$export$getStrideForLayout","setCoordinates","opt_layout","setLayout","nesting","$57ce72c0539154dec2abdc81ffcff6df$var$getLayoutForStride","anchorX","anchorY","$020a0553c73896bfe8e0cfb3e7ff136b$var$assignClosest","offset1","offset2","$020a0553c73896bfe8e0cfb3e7ff136b$export$maxSquaredDelta","squaredDelta","$020a0553c73896bfe8e0cfb3e7ff136b$export$assignClosestPoint","maxDelta","isRing","opt_tmpPoint","squaredDistance","tmpPoint","$e477329667689b6619ea04e4a51dbccc$export$deflateCoordinates","$a357f0a07bdcadd773e93ca791a42f7b$export$douglasPeucker","simplifiedFlatCoordinates","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","squaredDistance_1","$a357f0a07bdcadd773e93ca791a42f7b$export$snap","$a357f0a07bdcadd773e93ca791a42f7b$export$quantize","$c39683e7fcea5e9dae135d728d60cf52$export$inflateCoordinates","opt_coordinates","$7641779008ab07f3e708dabdbbb046eb$export$linearRing","twiceArea","$cf0a72c7dbf1c3cfa9edf65c24bc230b$var$__extends","$cf0a72c7dbf1c3cfa9edf65c24bc230b$export$default","LinearRing","maxDelta_","maxDeltaRevision_","getArea","$acd1b863667085614d305475fd6c1d27$var$__extends","$acd1b863667085614d305475fd6c1d27$export$default","Point","$7311a6a51d57e65f0d3a69bd7a380356$export$linearRingContainsExtent","outside","$7311a6a51d57e65f0d3a69bd7a380356$export$linearRingContainsXY","wn","$7311a6a51d57e65f0d3a69bd7a380356$export$linearRingsContainsXY","ends","$32ab876027ca0904f46063bee68b73aa$export$intersectsLineString","coordinatesExtent","ret","point1","point2","start","intersects","startRel","endRel","startX","startY","endX","endY","slope","$32ab876027ca0904f46063bee68b73aa$export$intersectsLinearRingArray","$32ab876027ca0904f46063bee68b73aa$export$intersectsLinearRing","$221ffa684d4ba252080508824e602b78$export$coordinates","$52f5ef13e882c7db8132623a2b51ee49$export$linearRingIsClockwise","edge","$52f5ef13e882c7db8132623a2b51ee49$export$orientLinearRings","opt_right","right","isClockwise","$bffbcd35af658c4477627697774de1c2$var$__extends","$bffbcd35af658c4477627697774de1c2$export$default","Polygon","opt_ends","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","appendLinearRing","linearRing","polygon","getOrientedFlatCoordinates","opt_coordinatess","coordinatess","jj","getEnds","getFlatInteriorPoint","flatCenter","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","segmentLength","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","linearRings","simplifiedEnds","$bffbcd35af658c4477627697774de1c2$export$fromExtent","XY","$19fadbefe1b7e34cc76223b5c3e441cc$var$__extends","$19fadbefe1b7e34cc76223b5c3e441cc$export$default","View","hints_","animations_","updateAnimationKey_","viewportSize_","targetCenter_","targetRotation_","cancelAnchor_","applyOptions_","resolutionConstraintInfo","resolutionConstraint","defaultMaxZoom","defaultZoomFactor","zoomFactor","multiWorld","smoothResolutionConstraint","projExtent","constrainOnlyCenter","constrainResolution","capped","z","defaultMaxResolution","defaultMinResolution","power","opt_minResolution","minZoomLevel","cappedZoomLevel","zoomLevel","constraint","$19fadbefe1b7e34cc76223b5c3e441cc$export$createResolutionConstraint","maxResolution_","minResolution_","zoomFactor_","padding","minZoom_","centerConstraint","smoothExtentConstraint","$19fadbefe1b7e34cc76223b5c3e441cc$export$createCenterConstraint","rotationConstraint","enableRotation","constrainRotation","opt_tolerance","theta","$19fadbefe1b7e34cc76223b5c3e441cc$export$createRotationConstraint","constraints_","setRotation","setCenterInternal","setResolution","setZoom","options_","getUpdatedOptions_","newOptions","getZoom","getCenterInternal","getRotation","animate","var_args","isDef","getAnimating","resolveConstraints","args","animateInternal","animationCount","$19fadbefe1b7e34cc76223b5c3e441cc$var$animationCallback","Date","now","series","animation","complete","duration","easing","getResolutionForZoom","sourceRotation","delta","targetRotation","$19fadbefe1b7e34cc76223b5c3e441cc$export$isNoopAnimation","setHint","updateAnimations_","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","fraction","progress","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","Boolean","requestAnimationFrame","currentCenter","currentResolution","opt_rotation","w","h","setViewportSize","opt_size","getCenter","getConstraints","getConstrainResolution","getHints","opt_hints","calculateExtent","calculateExtentInternal","getZoomForResolution","setConstrainResolution","enabled","getResolutionForExtent","getResolutionForExtentInternal","getResolutionForValueFunction","opt_power","getConstrainedResolution","getValueForResolutionFunction","logPower","getViewportSizeMinusPadding_","reducedSize","$19fadbefe1b7e34cc76223b5c3e441cc$var$calculateCenterOn","nearest","baseLevel","fit","geometryOrExtent","CIRCLE","userProjection","fitInternal","coords","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","centerRotX","centerRotY","centerX","centerY","getConstrainedCenter","centerOn","centerOnInternal","calculateCenterShift","centerShift","shiftedCenter","adjustCenter","deltaCoordinates","setCenter","adjustCenterInternal","adjustResolution","adjustResolutionInternal","isMoving","newResolution","adjustZoom","adjustRotation","adjustRotationInternal","newRotation","hint","opt_doNotCancelAnims","opt_forceMoving","newCenter","CENTER","opt_duration","opt_resolutionDirection","beginInteraction","endInteraction","endInteractionInternal","opt_targetResolution","getConstrainedZoom","targetZoom","opt_direction","targetRes","returnValue","$8556eff40cf4f1624cd78ff7ea054c5b$export$toSize","$b198bbb8a7fca092de94dd3a772c1343$var$__extends","$b198bbb8a7fca092de94dd3a772c1343$export$default","PluggableMap","optionsInternal","keyboardEventTarget","getElementById","controls","interactions","overlays","layerGroup","view","$b198bbb8a7fca092de94dd3a772c1343$var$createOptionsInternal","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","renderFrame_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overflow","overlayContainer_","pointerEvents","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","keyHandlerKeys_","overlays_","overlayIdIndex_","handleResize_","postRenderFunctions_","tileQueue_","getTilePriority","handleTileChange_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","control","interaction","addOverlayInternal_","getId","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","addOverlay","overlay","getOverlays","setTarget","forEachFeatureAtPixel","getCoordinateFromPixelInternal","getFeaturesAtPixel","features","hasFeatureAtPixel","getEventCoordinate","getEventCoordinateInternal","viewportPosition","getBoundingClientRect","eventPosition","changedTouches","top","getTarget","getTargetElement","getView","getOverlayById","getLoading","getPixelFromCoordinate","viewCoordinate","getPixelFromCoordinateInternal","getSize","getOverlayContainer","getOverlayContainerStopEvent","ownerDocument","browserEvent","mapBrowserEvent","handleMapBrowserEvent","KEYDOWN","rootNode","elementFromPoint","contains","documentElement","interactionsArray","getActive","handlePostRender","tileQueue","lowOnFrameBudget","time","targetElement","updateSize","handleViewPropertyChanged_","updateViewportSize_","isRendered","renderSync","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","declutterTree","usedTiles","setLayerGroup","setView","computedStyle","getComputedStyle","offsetWidth","parseFloat","offsetHeight","$8316c877d328ebfc4f4b917229eec057$var$__extends","$8316c877d328ebfc4f4b917229eec057$export$default","Control","target_","mapEvent","$194d017bd833b991c2c712fa2ff5b0e5$var$__extends","$194d017bd833b991c2c712fa2ff5b0e5$export$default","Attribution","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label","label_","activeLabel","setAttribute","title","handleClick_","cssClasses","renderedAttributions_","collectSourceAttributions_","lookup","visibleAttributions","attributionGetter","setCollapsible","updateElement_","lastChild","innerHTML","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","$aef56543978371a8090d728a4f107ac0$var$__extends","$aef56543978371a8090d728a4f107ac0$export$default","Rotate","compassClassName","add","callResetNorth_","resetNorth","duration_","autoHide_","autoHide","rotation_","resetNorth_","$9812beea87bdcda9027d52b89085c87c$var$__extends","$9812beea87bdcda9027d52b89085c87c$export$default","Zoom","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","zoomByDelta_","currentZoom","newZoom","$1ad0cf5090e3852174414bfc8cc27b9e$var$__extends","$1ad0cf5090e3852174414bfc8cc27b9e$export$default","Interaction","setActive","active","$1ad0cf5090e3852174414bfc8cc27b9e$export$pan","$1ad0cf5090e3852174414bfc8cc27b9e$export$zoomByDelta","$4eeedd039b7e6d5b8277b175715f9541$var$__extends","$4eeedd039b7e6d5b8277b175715f9541$export$default","DoubleClickZoom","delta_","stopEvent","shiftKey","$0714aed143b912743afff175db44c1dc$var$__extends","$0714aed143b912743afff175db44c1dc$export$default","PointerInteraction","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","trackedPointers_","targetPointers","getPointerCount","updateTrackedPointers_","handledUp","handled","$0714aed143b912743afff175db44c1dc$var$isPointerDraggingEvent","$0714aed143b912743afff175db44c1dc$export$centroid","$054715504eaffdc825d0a6ada99ec596$export$all","conditions","pass","$054715504eaffdc825d0a6ada99ec596$export$altShiftKeysOnly","altKey","metaKey","ctrlKey","$054715504eaffdc825d0a6ada99ec596$export$focusWithTabindex","hasAttribute","activeElement","$054715504eaffdc825d0a6ada99ec596$export$focus","$054715504eaffdc825d0a6ada99ec596$export$always","$054715504eaffdc825d0a6ada99ec596$export$mouseActionButton","$054715504eaffdc825d0a6ada99ec596$export$noModifierKeys","$054715504eaffdc825d0a6ada99ec596$export$shiftKeyOnly","$054715504eaffdc825d0a6ada99ec596$export$targetNotEditable","tagName","$054715504eaffdc825d0a6ada99ec596$export$mouseOnly","pointerType","$054715504eaffdc825d0a6ada99ec596$export$primaryAction","isPrimary","$959ec1b544453a9fa4f0e9221c3bb0b0$var$__extends","$959ec1b544453a9fa4f0e9221c3bb0b0$export$default","DragPan","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition","condition_","onFocusOnly","noKinetic_","centroid","update","begin","distance","getDistance","getAngle","centerpx","$719e5208cd50905e41bacbcae2219883$var$__extends","$719e5208cd50905e41bacbcae2219883$export$default","DragRotate","lastAngle_","$d0055a036577a61fd8306330947568c7$var$__extends","$d0055a036577a61fd8306330947568c7$export$default","RenderBox","geometry_","startPixel_","endPixel_","render_","startPixel","endPixel","px","setPixels","createOrUpdateGeometry","pixels","getGeometry","$275b26378704892d776581791f32dc0e$var$__extends","$275b26378704892d776581791f32dc0e$var$DragBoxEventType","$275b26378704892d776581791f32dc0e$export$DragBoxEvent","DragBoxEvent","$275b26378704892d776581791f32dc0e$export$default","DragBox","box_","minArea_","minArea","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","completeBox","$b5cd6c68e27395a36aa4c8d3c5395250$var$__extends","$b5cd6c68e27395a36aa4c8d3c5395250$export$default","DragZoom","out_","out","mapExtent","boxPixelExtent","$bcd9d2d6fd38b8643ae7b7b6fd22a911$var$__extends","$bcd9d2d6fd38b8643ae7b7b6fd22a911$export$default","KeyboardPan","defaultCondition_","pixelDelta_","pixelDelta","keyEvent","keyCode","UP","mapUnitsDelta","$55ea853e77e2fe25fa1a8793cb31a3bf$var$__extends","$55ea853e77e2fe25fa1a8793cb31a3bf$export$default","KeyboardZoom","KEYPRESS","charCode","charCodeAt","$4f2c4d65e25c75c4fbc5129660f72747$export$default","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","lastIndex","firstIndex","$f7a99b9e7b1a72242a3eb408b28d3563$var$__extends","$f7a99b9e7b1a72242a3eb408b28d3563$export$Mode","$f7a99b9e7b1a72242a3eb408b28d3563$export$default","MouseWheelZoom","totalDelta_","lastDelta_","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","endInteraction_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","timeLeft","handleWheelZoom_","setMouseAnchor","$74b3a0ab43d5d3c47ed1a15cedc99f6a$var$__extends","$74b3a0ab43d5d3c47ed1a15cedc99f6a$export$default","PinchRotate","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","$601b81cfcc535d77832cc96f04e942a1$var$__extends","$601b81cfcc535d77832cc96f04e942a1$export$default","PinchZoom","lastDistance_","lastScaleDelta_","scaleDelta","$976448907138da16f7612e32ecc55ac7$var$__extends","$976448907138da16f7612e32ecc55ac7$export$default","Map","zoomOptions","rotateOptions","attribution","attributionOptions","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","$6ea2e09c0ee686e4fcf344e90f929221$var$__extends","$6ea2e09c0ee686e4fcf344e90f929221$export$default","Tile","interimTile","transition_","transition","transitionStarts_","release","getInterimTile","refreshInterimChain","getTileCoord","getAlpha","inTransition","endTransition","$69031f3b45b1bb2d223c45e6bbe47b36$var$__extends","$69031f3b45b1bb2d223c45e6bbe47b36$export$default","ImageTile","tileLoadFunction","tileLoadFunction_","naturalWidth","naturalHeight","$97e37be8733b1927a1ed959b854a8d18$var$__extends","$97e37be8733b1927a1ed959b854a8d18$export$default","ReprojTile","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","opt_errorThreshold","renderEdges_","gutter_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","getTileCoordExtent","sourceProjExtent","errorThresholdInPixels","getZForResolution","sourceRange","getTileRangeForExtentAndZ","srcX","srcY","getTileSize","leftToLoad_1","LOADING","sourceListenKey_1","unlistenSources_","$101ae72fedfe330e8897d118e958a8b6$export$default","LRUCache","opt_highWaterMark","highWaterMark","count_","entries_","oldest_","newest_","containsKey","entry","value_","key_","newer","older","getValues","peekLast","peekLastKey","peekFirstKey","$c98d704946f2a3a0e1335bd43bccb465$export$createOrUpdate","opt_tileCoord","$c98d704946f2a3a0e1335bd43bccb465$export$getKeyZXY","$c98d704946f2a3a0e1335bd43bccb465$export$getKey","$8328c42c04c9adada69111ec662476d9$var$__extends","$8328c42c04c9adada69111ec662476d9$export$default","TileCache","expireCache","pruneExceptNewestZ","Number","$6a958d3d10a45fbc13d601def6cb4731$export$default","TileRange","containsTileRange","getHeight","getWidth","$6a958d3d10a45fbc13d601def6cb4731$export$createOrUpdate","$0f9feaa19e1db86e91525f400c1bbfa1$var$tmpTileCoord","$0f9feaa19e1db86e91525f400c1bbfa1$export$default","TileGrid","opt_strict","compare","every","currentVal","res","origins","origin_","origin","origins_","tileSizes_","tileSizes","tileSize_","tileSize","fullTileRanges_","tmpSize_","sizes","restrictedTileRange","calculateTileRanges_","forEachTileCoord","forEachTileCoordParentTileRange","opt_tileRange","tileCoordExtent","getOrigin","getTileCoordChildTileRange","getTileRangeExtent","getTileCoordForXYAndZ_","getTileCoordCenter","getTileCoordForCoordAndResolution","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","adjustX","adjustY","xFromOrigin","yFromOrigin","tileCoordX","tileCoordY","getTileCoordForCoordAndZ","getTileCoordResolution","getFullTileRange","fullTileRanges","$0b7f50deff6bfc90c8b239d5ceca7010$export$getForProjection","opt_maxZoom","opt_tileSize","opt_corner","$0b7f50deff6bfc90c8b239d5ceca7010$var$resolutionsFromExtent","$0b7f50deff6bfc90c8b239d5ceca7010$export$createForExtent","$0b7f50deff6bfc90c8b239d5ceca7010$export$extentFromProjection","$0b7f50deff6bfc90c8b239d5ceca7010$export$createForProjection","opt_maxResolution","half","$cde35ab3df9629f8ffd26ea2f187b41e$var$__extends","$cde35ab3df9629f8ffd26ea2f187b41e$export$default","TileSource","opaque_","opaque","tilePixelRatio_","tilePixelRatio","tileCache","tmpSize","tileOptions","zDirection","getTileCacheForProjection","tileCoordKey","loaded","covered","getGutterForProjection","setKey","getOpaque","getTile","getTileGrid","getTileGridForProjection","getTilePixelRatio","getTilePixelSize","getTileCoordForTileUrlFunction","opt_projection","updateCacheSize","tileCount","useTile","$cde35ab3df9629f8ffd26ea2f187b41e$export$TileSourceEvent","TileSourceEvent","$f3b33fdefe65058178a4b532c7b3f14b$export$createFromTemplate","template","zRegEx","xRegEx","yRegEx","dashYRegEx","range","$f3b33fdefe65058178a4b532c7b3f14b$export$createFromTemplates","templates","tileUrlFunctions","$f3b33fdefe65058178a4b532c7b3f14b$export$createFromTileUrlFunctions","$671acdd0ca89710db49a7e8e41335e8e$var$__extends","$671acdd0ca89710db49a7e8e41335e8e$export$default","UrlTile","generateTileUrlFunction_","tileUrlFunction","urls","setUrls","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getPrototypeOf","getUrls","uid","tileState","ERROR","setTileLoadFunction","setTileUrlFunction","exec","startCharCode","stopCharCode","fromCharCode","stop_1","$f1c529d0542d6a8d6fa77a64fa516101$var$__extends","$f1c529d0542d6a8d6fa77a64fa516101$export$default","TileImage","$f1c529d0542d6a8d6fa77a64fa516101$var$defaultTileLoadFunction","tileClass","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","renderReprojectionEdges_","usedTileCache","getGutter","JSON","stringify","thisProj","projKey","createTile_","urlTileCoord","tileUrl","newTile","getTileInternal","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","imageTile","$fd3ab3577c0c67d5f04f77f7494fe563$var$__extends","$fd3ab3577c0c67d5f04f77f7494fe563$export$default","XYZ","xyzOptions","gridOptions","$ff8235042efbfb69f46b35131190fa2b$var$__extends","$ff8235042efbfb69f46b35131190fa2b$export$default","OSM","$ab70eb0a0a56b112261264db1ea7acab$var$__extends","$ab70eb0a0a56b112261264db1ea7acab$export$default","BaseTileLayer","preload","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","getPreload","getUseInterimTilesOnError","$21101e8f6691f861098a74ca233ba3e1$var$__extends","$21101e8f6691f861098a74ca233ba3e1$export$default","CanvasTileLayerRenderer","tileLayer","extentChanged","renderedExtent_","renderedPixelRatio","renderedProjection","renderedRevision","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","isDrawableTile","tileSource","sourceRevision","canvasExtent","tilesToDrawByZ","findLoadedTiles","tmpTileRange","childTileRange","canvasScale","clips","clipZs","currentClip","zs","reverse","currentZ","currentTilePixelSize","currentScale","dx_1","dy_1","originTileCoord","originTileExtent","origin_1","tileGutter","tilesToDraw","floatX","nextX","floatY","nextY","i_1","drawTileImage","updateUsedTiles","manageTilePyramid","scheduleExpireCache","getTileImage","tileAlpha","alpha","alphaChanged","postRenderFunction","opt_tileCallback","$7f639b92eb9591e7aded56644548f656$var$__extends","$7f639b92eb9591e7aded56644548f656$export$default","TileLayer","$fa8fdebac07669d2ee57fbf926837b94$var$basemap","$fa8fdebac07669d2ee57fbf926837b94$var$wmsSourceF","$fa8fdebac07669d2ee57fbf926837b94$var$NWMF","$fa8fdebac07669d2ee57fbf926837b94$var$view","$fa8fdebac07669d2ee57fbf926837b94$var$map","INFO_FORMAT","fetch","response","html","hit","cursor"],"version":3,"file":"index.58c7f204.js.map"}